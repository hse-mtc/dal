
> front-end@ lint /home/roman/WEB/VOENKA/dal/front-end
> vue-cli-service lint --no-fix

warning: Forbidden non-null assertion (@typescript-eslint/no-non-null-assertion) at src/App.vue:18:38:
  16 | 
  17 |   metaInfo() {
> 18 |     const width = WHITELIST.includes(this.$route.name!) ? "device-width" : 1200;
     |                                      ^
  19 |     return {
  20 |       meta: [
  21 |         {


warning: Forbidden non-null assertion (@typescript-eslint/no-non-null-assertion) at src/App.vue:31:31:
  29 | class App extends Vue {
  30 |   get width(): number {
> 31 |     return WHITELIST.includes(this.$route.name!) ? 0 : 1200;
     |                               ^
  32 |   }
  33 | 
  34 |   @Watch("width")


warning: Forbidden non-null assertion (@typescript-eslint/no-non-null-assertion) at src/App.vue:36:5:
  34 |   @Watch("width")
  35 |   onWidthChange(newWidth: number): void {
> 36 |     document.getElementById("app")!.style.minWidth = `${newWidth}px`;
     |     ^
  37 |   }
  38 | }
  39 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getAbsence(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + absence,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:8:28:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getAbsence(params) {
     |                            ^
   9 |   return request({
  10 |     url: BASE_API_URL + absence,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:16:8:
  14 | }
  15 | 
> 16 | export function getAbsenceJournal(params) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:16:35:
  14 | }
  15 | 
> 16 | export function getAbsenceJournal(params) {
     |                                   ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:24:8:
  22 | }
  23 | 
> 24 | export function patchAbsence(id, data) {
     |        ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${absence}${id}/`,
  27 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:24:30:
  22 | }
  23 | 
> 24 | export function patchAbsence(id, data) {
     |                              ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${absence}${id}/`,
  27 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:24:34:
  22 | }
  23 | 
> 24 | export function patchAbsence(id, data) {
     |                                  ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${absence}${id}/`,
  27 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:32:8:
  30 | }
  31 | 
> 32 | export function deleteAbsenceAttachment(id) {
     |        ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${attachment}${id}/`,
  35 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:32:41:
  30 | }
  31 | 
> 32 | export function deleteAbsenceAttachment(id) {
     |                                         ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${attachment}${id}/`,
  35 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:39:8:
  37 | }
  38 | 
> 39 | export function postAbsence(data) {
     |        ^
  40 |   // todo
  41 |   // eslint-disable-next-line no-param-reassign
  42 |   if (data.studentid !== undefined) { data.studentid = { id: data.studentid.id }; }


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:39:29:
  37 | }
  38 | 
> 39 | export function postAbsence(data) {
     |                             ^
  40 |   // todo
  41 |   // eslint-disable-next-line no-param-reassign
  42 |   if (data.studentid !== undefined) { data.studentid = { id: data.studentid.id }; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:50:8:
  48 | }
  49 | 
> 50 | export function deleteAbsence(params) {
     |        ^
  51 |   return request({
  52 |     url: `${BASE_API_URL}${absence}${params.id}/`,
  53 |     method: "delete",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/absence.js:50:31:
  48 | }
  49 | 
> 50 | export function deleteAbsence(params) {
     |                               ^
  51 |   return request({
  52 |     url: `${BASE_API_URL}${absence}${params.id}/`,
  53 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getAchievement(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + achievement,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:8:32:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getAchievement(params) {
     |                                ^
   9 |   return request({
  10 |     url: BASE_API_URL + achievement,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:16:8:
  14 | }
  15 | 
> 16 | export function patchAchievement(data) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${achievement}${data.id}/`,
  19 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:16:34:
  14 | }
  15 | 
> 16 | export function patchAchievement(data) {
     |                                  ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${achievement}${data.id}/`,
  19 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:24:8:
  22 | }
  23 | 
> 24 | export function postAchievement(data) {
     |        ^
  25 |   return request({
  26 |     url: BASE_API_URL + achievement,
  27 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:24:33:
  22 | }
  23 | 
> 24 | export function postAchievement(data) {
     |                                 ^
  25 |   return request({
  26 |     url: BASE_API_URL + achievement,
  27 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:32:8:
  30 | }
  31 | 
> 32 | export function deleteAchievement(id) {
     |        ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${achievement}${id}/`,
  35 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/achievement.js:32:35:
  30 | }
  31 | 
> 32 | export function deleteAchievement(id) {
     |                                   ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${achievement}${id}/`,
  35 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:4:8:
  2 | import { AUTH_URLS, BASE_API_URL, LMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getUsers(params) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + LMS_URLS.users.users,
  7 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:4:26:
  2 | import { AUTH_URLS, BASE_API_URL, LMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getUsers(params) {
    |                          ^
  5 |   return request({
  6 |     url: BASE_API_URL + LMS_URLS.users.users,
  7 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:12:8:
  10 | }
  11 | 
> 12 | export function getUserPermissions(id) {
     |        ^
  13 |   return request({
  14 |     url: `${BASE_API_URL}${AUTH_URLS.userControl}${id}/`,
  15 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:12:36:
  10 | }
  11 | 
> 12 | export function getUserPermissions(id) {
     |                                    ^
  13 |   return request({
  14 |     url: `${BASE_API_URL}${AUTH_URLS.userControl}${id}/`,
  15 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:19:8:
  17 | }
  18 | 
> 19 | export function getRolePermissions(id) {
     |        ^
  20 |   return request({
  21 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  22 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:19:36:
  17 | }
  18 | 
> 19 | export function getRolePermissions(id) {
     |                                    ^
  20 |   return request({
  21 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  22 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:26:8:
  24 | }
  25 | 
> 26 | export function getAllPermissions() {
     |        ^
  27 |   return request({
  28 |     url: BASE_API_URL + AUTH_URLS.permissions,
  29 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:33:8:
  31 | }
  32 | 
> 33 | export function getAllRoles() {
     |        ^
  34 |   return request({
  35 |     url: BASE_API_URL + AUTH_URLS.roles,
  36 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:40:8:
  38 | }
  39 | 
> 40 | export function addRole(data) {
     |        ^
  41 |   return request({
  42 |     url: BASE_API_URL + AUTH_URLS.roles,
  43 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:40:25:
  38 | }
  39 | 
> 40 | export function addRole(data) {
     |                         ^
  41 |   return request({
  42 |     url: BASE_API_URL + AUTH_URLS.roles,
  43 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:48:8:
  46 | }
  47 | 
> 48 | export function deleteRole(id) {
     |        ^
  49 |   return request({
  50 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  51 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:48:28:
  46 | }
  47 | 
> 48 | export function deleteRole(id) {
     |                            ^
  49 |   return request({
  50 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  51 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:55:8:
  53 | }
  54 | 
> 55 | export function saveUserControl(id, data) {
     |        ^
  56 |   return request({
  57 |     url: `${BASE_API_URL}${AUTH_URLS.userControl}${id}/`,
  58 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:55:33:
  53 | }
  54 | 
> 55 | export function saveUserControl(id, data) {
     |                                 ^
  56 |   return request({
  57 |     url: `${BASE_API_URL}${AUTH_URLS.userControl}${id}/`,
  58 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:55:37:
  53 | }
  54 | 
> 55 | export function saveUserControl(id, data) {
     |                                     ^
  56 |   return request({
  57 |     url: `${BASE_API_URL}${AUTH_URLS.userControl}${id}/`,
  58 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:63:8:
  61 | }
  62 | 
> 63 | export function saveRoleChanges(id, data) {
     |        ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  66 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:63:33:
  61 | }
  62 | 
> 63 | export function saveRoleChanges(id, data) {
     |                                 ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  66 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:63:37:
  61 | }
  62 | 
> 63 | export function saveRoleChanges(id, data) {
     |                                     ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${AUTH_URLS.roles}${id}/`,
  66 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:71:8:
  69 | }
  70 | 
> 71 | export function getTeachersToApprove() {
     |        ^
  72 |   return request({
  73 |     url: BASE_API_URL + LMS_URLS.staff.teachersApprovals,
  74 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:78:8:
  76 | }
  77 | 
> 78 | export function getStudentsToApprove() {
     |        ^
  79 |   return request({
  80 |     url: BASE_API_URL + LMS_URLS.staff.studentsApprovals,
  81 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:85:8:
  83 | }
  84 | 
> 85 | export function approveTeacher(id, data) {
     |        ^
  86 |   return request({
  87 |     url: `${BASE_API_URL + LMS_URLS.staff.teachersApprovals}${id}/`,
  88 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:85:32:
  83 | }
  84 | 
> 85 | export function approveTeacher(id, data) {
     |                                ^
  86 |   return request({
  87 |     url: `${BASE_API_URL + LMS_URLS.staff.teachersApprovals}${id}/`,
  88 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:85:36:
  83 | }
  84 | 
> 85 | export function approveTeacher(id, data) {
     |                                    ^
  86 |   return request({
  87 |     url: `${BASE_API_URL + LMS_URLS.staff.teachersApprovals}${id}/`,
  88 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:93:8:
  91 | }
  92 | 
> 93 | export function approveStudent(id, data) {
     |        ^
  94 |   return request({
  95 |     url: `${BASE_API_URL + LMS_URLS.staff.studentsApprovals}${id}/`,
  96 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:93:32:
  91 | }
  92 | 
> 93 | export function approveStudent(id, data) {
     |                                ^
  94 |   return request({
  95 |     url: `${BASE_API_URL + LMS_URLS.staff.studentsApprovals}${id}/`,
  96 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/admin.js:93:36:
  91 | }
  92 | 
> 93 | export function approveStudent(id, data) {
     |                                    ^
  94 |   return request({
  95 |     url: `${BASE_API_URL + LMS_URLS.staff.studentsApprovals}${id}/`,
  96 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:14:8:
  12 | } = AMS_URLS;
  13 | 
> 14 | export function postApplicant(data) {
     |        ^
  15 |   return request({
  16 |     url: BASE_API_URL + applicants,
  17 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:14:31:
  12 | } = AMS_URLS;
  13 | 
> 14 | export function postApplicant(data) {
     |                               ^
  15 |   return request({
  16 |     url: BASE_API_URL + applicants,
  17 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:25:8:
  23 | }
  24 | 
> 25 | export function putApplicant(id, data) {
     |        ^
  26 |   return request({
  27 |     url: `${BASE_API_URL}${applicants}${id}/`,
  28 |     method: "put",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:25:30:
  23 | }
  24 | 
> 25 | export function putApplicant(id, data) {
     |                              ^
  26 |   return request({
  27 |     url: `${BASE_API_URL}${applicants}${id}/`,
  28 |     method: "put",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:25:34:
  23 | }
  24 | 
> 25 | export function putApplicant(id, data) {
     |                                  ^
  26 |   return request({
  27 |     url: `${BASE_API_URL}${applicants}${id}/`,
  28 |     method: "put",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:36:8:
  34 | }
  35 | 
> 36 | export function postEmail(data) {
     |        ^
  37 |   return request({
  38 |     url: BASE_API_URL + register,
  39 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:36:27:
  34 | }
  35 | 
> 36 | export function postEmail(data) {
     |                           ^
  37 |   return request({
  38 |     url: BASE_API_URL + register,
  39 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:44:40:
  42 | }
  43 | 
> 44 | export const getApplicationsStudents = (page, pageSize, filters) => request({
     |                                        ^
  45 |   url: BASE_API_URL + applications,
  46 |   method: "GET",
  47 |   params: {


warning: Argument 'page' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:44:41:
  42 | }
  43 | 
> 44 | export const getApplicationsStudents = (page, pageSize, filters) => request({
     |                                         ^
  45 |   url: BASE_API_URL + applications,
  46 |   method: "GET",
  47 |   params: {


warning: Argument 'pageSize' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:44:47:
  42 | }
  43 | 
> 44 | export const getApplicationsStudents = (page, pageSize, filters) => request({
     |                                               ^
  45 |   url: BASE_API_URL + applications,
  46 |   method: "GET",
  47 |   params: {


warning: Argument 'filters' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:44:57:
  42 | }
  43 | 
> 44 | export const getApplicationsStudents = (page, pageSize, filters) => request({
     |                                                         ^
  45 |   url: BASE_API_URL + applications,
  46 |   method: "GET",
  47 |   params: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:54:45:
  52 | });
  53 | 
> 54 | export const updateStudentApplicationInfo = (id, data) => request({
     |                                             ^
  55 |   url: `${BASE_API_URL}${applicants}${id}/application/`,
  56 |   method: "PATCH",
  57 |   data,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:54:46:
  52 | });
  53 | 
> 54 | export const updateStudentApplicationInfo = (id, data) => request({
     |                                              ^
  55 |   url: `${BASE_API_URL}${applicants}${id}/application/`,
  56 |   method: "PATCH",
  57 |   data,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:54:50:
  52 | });
  53 | 
> 54 | export const updateStudentApplicationInfo = (id, data) => request({
     |                                                  ^
  55 |   url: `${BASE_API_URL}${applicants}${id}/application/`,
  56 |   method: "PATCH",
  57 |   data,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:60:30:
  58 | });
  59 | 
> 60 | export const findApplicant = id => request({
     |                              ^
  61 |   url: `${BASE_API_URL}${applicants}${id}/`,
  62 |   method: "GET",
  63 | });


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/applicants.js:60:30:
  58 | });
  59 | 
> 60 | export const findApplicant = id => request({
     |                              ^
  61 |   url: `${BASE_API_URL}${applicants}${id}/`,
  62 |   method: "GET",
  63 | });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:6:8:
  4 | const { authors: { authors } } = DMS_URLS;
  5 | 
> 6 | export function getAuthors(params) {
    |        ^
  7 |   return request({
  8 |     url: BASE_API_URL + authors,
  9 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:6:28:
  4 | const { authors: { authors } } = DMS_URLS;
  5 | 
> 6 | export function getAuthors(params) {
    |                            ^
  7 |   return request({
  8 |     url: BASE_API_URL + authors,
  9 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:14:8:
  12 | }
  13 | 
> 14 | export function editAuthor(id, data) {
     |        ^
  15 |   return request({
  16 |     url: `${BASE_API_URL}${authors}${id}/`,
  17 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:14:28:
  12 | }
  13 | 
> 14 | export function editAuthor(id, data) {
     |                            ^
  15 |   return request({
  16 |     url: `${BASE_API_URL}${authors}${id}/`,
  17 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:14:32:
  12 | }
  13 | 
> 14 | export function editAuthor(id, data) {
     |                                ^
  15 |   return request({
  16 |     url: `${BASE_API_URL}${authors}${id}/`,
  17 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:22:8:
  20 | }
  21 | 
> 22 | export function deleteAuthor(id) {
     |        ^
  23 |   return request({
  24 |     url: `${BASE_API_URL}${authors}${id}/`,
  25 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:22:30:
  20 | }
  21 | 
> 22 | export function deleteAuthor(id) {
     |                              ^
  23 |   return request({
  24 |     url: `${BASE_API_URL}${authors}${id}/`,
  25 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:29:8:
  27 | }
  28 | 
> 29 | export function addAuthor(data) {
     |        ^
  30 |   return request({
  31 |     url: `${BASE_API_URL}${authors}`,
  32 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/authors.js:29:27:
  27 | }
  28 | 
> 29 | export function addAuthor(data) {
     |                           ^
  30 |   return request({
  31 |     url: `${BASE_API_URL}${authors}`,
  32 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/birthdays.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getStudentBirthdays(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + students,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/birthdays.js:8:37:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getStudentBirthdays(params) {
     |                                     ^
   9 |   return request({
  10 |     url: BASE_API_URL + students,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/birthdays.js:16:8:
  14 | }
  15 | 
> 16 | export function getTeacherBirthdays(params) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + teachers,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/birthdays.js:16:37:
  14 | }
  15 | 
> 16 | export function getTeacherBirthdays(params) {
     |                                     ^
  17 |   return request({
  18 |     url: BASE_API_URL + teachers,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:8:8:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getBooks(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + books,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:8:26:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getBooks(params) {
     |                          ^
   9 |   return request({
  10 |     url: BASE_API_URL + books,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:16:8:
  14 | }
  15 | 
> 16 | export function getBook(id) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${books}${id}/`,
  19 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:16:25:
  14 | }
  15 | 
> 16 | export function getBook(id) {
     |                         ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${books}${id}/`,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:23:8:
  21 | }
  22 | 
> 23 | export function deleteBook(id) {
     |        ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${books}${id}/`,
  26 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:23:28:
  21 | }
  22 | 
> 23 | export function deleteBook(id) {
     |                            ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${books}${id}/`,
  26 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:30:8:
  28 | }
  29 | 
> 30 | export function uploadBook(data) {
     |        ^
  31 |   console.log(data);
  32 |   return request({
  33 |     url: BASE_API_URL + books,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:30:28:
  28 | }
  29 | 
> 30 | export function uploadBook(data) {
     |                            ^
  31 |   console.log(data);
  32 |   return request({
  33 |     url: BASE_API_URL + books,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:39:8:
  37 | }
  38 | 
> 39 | export function editBook(id, data) {
     |        ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${books}${id}/`,
  42 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:39:26:
  37 | }
  38 | 
> 39 | export function editBook(id, data) {
     |                          ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${books}${id}/`,
  42 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:39:30:
  37 | }
  38 | 
> 39 | export function editBook(id, data) {
     |                              ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${books}${id}/`,
  42 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:47:8:
  45 | }
  46 | 
> 47 | export function getFavoriteBooks(params) {
     |        ^
  48 |   return request({
  49 |     url: BASE_API_URL + favorite,
  50 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:47:34:
  45 | }
  46 | 
> 47 | export function getFavoriteBooks(params) {
     |                                  ^
  48 |   return request({
  49 |     url: BASE_API_URL + favorite,
  50 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:55:8:
  53 | }
  54 | 
> 55 | export function saveFavBook(data) {
     |        ^
  56 |   console.log(data);
  57 |   return request({
  58 |     url: BASE_API_URL + favorite,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:55:29:
  53 | }
  54 | 
> 55 | export function saveFavBook(data) {
     |                             ^
  56 |   console.log(data);
  57 |   return request({
  58 |     url: BASE_API_URL + favorite,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:64:8:
  62 | }
  63 | 
> 64 | export function unsaveFavBook(id) {
     |        ^
  65 |   return request({
  66 |     url: `${BASE_API_URL}${favorite}${id}/`,
  67 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/books.js:64:31:
  62 | }
  63 | 
> 64 | export function unsaveFavBook(id) {
     |                               ^
  65 |   return request({
  66 |     url: `${BASE_API_URL}${favorite}${id}/`,
  67 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:6:8:
  4 | const { choices } = LMS_URLS;
  5 | 
> 6 | export function fetchAbsenceExcuses() {
    |        ^
  7 |   return request({
  8 |     url: BASE_API_URL + choices.absenceExcuses,
  9 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:13:8:
  11 | }
  12 | 
> 13 | export function fetchAbsenceStatuses() {
     |        ^
  14 |   return request({
  15 |     url: BASE_API_URL + choices.absenceStatuses,
  16 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:20:8:
  18 | }
  19 | 
> 20 | export function fetchEncouragementTypes() {
     |        ^
  21 |   return request({
  22 |     url: BASE_API_URL + choices.encouragementTypes,
  23 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:27:8:
  25 | }
  26 | 
> 27 | export function fetchLessonTypes() {
     |        ^
  28 |   return request({
  29 |     url: BASE_API_URL + choices.lessonTypes,
  30 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:34:8:
  32 | }
  33 | 
> 34 | export function fetchPunishmentTypes() {
     |        ^
  35 |   return request({
  36 |     url: BASE_API_URL + choices.punishmentTypes,
  37 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:41:8:
  39 | }
  40 | 
> 41 | export function fetchStudentPosts() {
     |        ^
  42 |   return request({
  43 |     url: BASE_API_URL + choices.studentPosts,
  44 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:48:8:
  46 | }
  47 | 
> 48 | export function fetchStudentStatuses() {
     |        ^
  49 |   return request({
  50 |     url: BASE_API_URL + choices.studentStatuses,
  51 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:55:8:
  53 | }
  54 | 
> 55 | export function fetchTeacherPosts() {
     |        ^
  56 |   return request({
  57 |     url: BASE_API_URL + choices.teacherPosts,
  58 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/choices.js:62:8:
  60 | }
  61 | 
> 62 | export function fetchTeacherRanks() {
     |        ^
  63 |   return request({
  64 |     url: BASE_API_URL + choices.teacherRanks,
  65 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/delete.js:4:8:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function deleteDocument(id) {
    |        ^
  5 |   return request({
  6 |     url: `${BASE_API_URL}${DMS_URLS.papers.papers}${id}/`,
  7 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/delete.js:4:32:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function deleteDocument(id) {
    |                                ^
  5 |   return request({
  6 |     url: `${BASE_API_URL}${DMS_URLS.papers.papers}${id}/`,
  7 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/educational_materials.js:4:8:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getEducationalMaterials(params) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.materials.educational,
  7 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/educational_materials.js:4:41:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getEducationalMaterials(params) {
    |                                         ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.materials.educational,
  7 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getEncouragement(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + encouragement,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:8:34:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getEncouragement(params) {
     |                                  ^
   9 |   return request({
  10 |     url: BASE_API_URL + encouragement,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:16:8:
  14 | }
  15 | 
> 16 | export function patchEncouragement(data) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${encouragement}${data.id}/`,
  19 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:16:36:
  14 | }
  15 | 
> 16 | export function patchEncouragement(data) {
     |                                    ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${encouragement}${data.id}/`,
  19 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:24:8:
  22 | }
  23 | 
> 24 | export function postEncouragement(data) {
     |        ^
  25 |   return request({
  26 |     url: BASE_API_URL + encouragement,
  27 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:24:35:
  22 | }
  23 | 
> 24 | export function postEncouragement(data) {
     |                                   ^
  25 |   return request({
  26 |     url: BASE_API_URL + encouragement,
  27 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:32:8:
  30 | }
  31 | 
> 32 | export function deleteEncouragement(params) {
     |        ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${encouragement}${params.id}/`,
  35 |     method: "delete",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/encouragement.js:32:37:
  30 | }
  31 | 
> 32 | export function deleteEncouragement(params) {
     |                                     ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${encouragement}${params.id}/`,
  35 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/existingTags.js:4:8:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getExistingTags(params) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.tags.tags,
  7 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/existingTags.js:4:33:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getExistingTags(params) {
    |                                 ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.tags.tags,
  7 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getLesson(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + lesson,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:8:27:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getLesson(params) {
     |                           ^
   9 |   return request({
  10 |     url: BASE_API_URL + lesson,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:16:8:
  14 | }
  15 | 
> 16 | export function getLessonJournal(params) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:16:34:
  14 | }
  15 | 
> 16 | export function getLessonJournal(params) {
     |                                  ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:24:8:
  22 | }
  23 | 
> 24 | export function patchLesson(data) {
     |        ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${lesson}${data.id}/`,
  27 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:24:29:
  22 | }
  23 | 
> 24 | export function patchLesson(data) {
     |                             ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${lesson}${data.id}/`,
  27 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:32:8:
  30 | }
  31 | 
> 32 | export function postLesson(data) {
     |        ^
  33 |   return request({
  34 |     url: BASE_API_URL + lesson,
  35 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:32:28:
  30 | }
  31 | 
> 32 | export function postLesson(data) {
     |                            ^
  33 |   return request({
  34 |     url: BASE_API_URL + lesson,
  35 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:40:8:
  38 | }
  39 | 
> 40 | export function deleteLesson(params) {
     |        ^
  41 |   return request({
  42 |     url: `${BASE_API_URL}${lesson}${params.id}/`,
  43 |     method: "delete",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/lesson.js:40:30:
  38 | }
  39 | 
> 40 | export function deleteLesson(params) {
     |                              ^
  41 |   return request({
  42 |     url: `${BASE_API_URL}${lesson}${params.id}/`,
  43 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getMark(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + mark,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:8:25:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getMark(params) {
     |                         ^
   9 |   return request({
  10 |     url: BASE_API_URL + mark,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:16:8:
  14 | }
  15 | 
> 16 | export function getMarkJournal(params) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:16:32:
  14 | }
  15 | 
> 16 | export function getMarkJournal(params) {
     |                                ^
  17 |   return request({
  18 |     url: BASE_API_URL + journal,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:24:8:
  22 | }
  23 | 
> 24 | export function patchMark(data, id) {
     |        ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${mark}${id}/`,
  27 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:24:27:
  22 | }
  23 | 
> 24 | export function patchMark(data, id) {
     |                           ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${mark}${id}/`,
  27 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:24:33:
  22 | }
  23 | 
> 24 | export function patchMark(data, id) {
     |                                 ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${mark}${id}/`,
  27 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:32:8:
  30 | }
  31 | 
> 32 | export function putMark(data, id) {
     |        ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${mark}${id}/`,
  35 |     method: "put",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:32:25:
  30 | }
  31 | 
> 32 | export function putMark(data, id) {
     |                         ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${mark}${id}/`,
  35 |     method: "put",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:32:31:
  30 | }
  31 | 
> 32 | export function putMark(data, id) {
     |                               ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${mark}${id}/`,
  35 |     method: "put",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:40:8:
  38 | }
  39 | 
> 40 | export function postMark(data) {
     |        ^
  41 |   return request({
  42 |     url: BASE_API_URL + mark,
  43 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:40:26:
  38 | }
  39 | 
> 40 | export function postMark(data) {
     |                          ^
  41 |   return request({
  42 |     url: BASE_API_URL + mark,
  43 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:48:8:
  46 | }
  47 | 
> 48 | export function deleteMark(params) {
     |        ^
  49 |   return request({
  50 |     url: `${BASE_API_URL}${mark}${params.id}/`,
  51 |     method: "delete",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/mark.js:48:28:
  46 | }
  47 | 
> 48 | export function deleteMark(params) {
     |                            ^
  49 |   return request({
  50 |     url: `${BASE_API_URL}${mark}${params.id}/`,
  51 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/material.js:6:8:
  4 | const classMaterials = DMS_URLS.materials.class;
  5 | 
> 6 | export function deleteMaterial(id) {
    |        ^
  7 |   return request({
  8 |     url: `${BASE_API_URL}${classMaterials}${id}/`,
  9 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/material.js:6:32:
  4 | const classMaterials = DMS_URLS.materials.class;
  5 | 
> 6 | export function deleteMaterial(id) {
    |                                ^
  7 |   return request({
  8 |     url: `${BASE_API_URL}${classMaterials}${id}/`,
  9 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/material.js:13:8:
  11 | }
  12 | 
> 13 | export function addTopicFile(data) {
     |        ^
  14 |   return request({
  15 |     url: BASE_API_URL + classMaterials,
  16 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/material.js:13:30:
  11 | }
  12 | 
> 13 | export function addTopicFile(data) {
     |                              ^
  14 |   return request({
  15 |     url: BASE_API_URL + classMaterials,
  16 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:8:8:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getPaperCategories() {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + categories,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:15:8:
  13 | }
  14 | 
> 15 | export function editPaperCategory(id, data) {
     |        ^
  16 |   return request({
  17 |     url: `${BASE_API_URL}${categories}${id}/`,
  18 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:15:35:
  13 | }
  14 | 
> 15 | export function editPaperCategory(id, data) {
     |                                   ^
  16 |   return request({
  17 |     url: `${BASE_API_URL}${categories}${id}/`,
  18 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:15:39:
  13 | }
  14 | 
> 15 | export function editPaperCategory(id, data) {
     |                                       ^
  16 |   return request({
  17 |     url: `${BASE_API_URL}${categories}${id}/`,
  18 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:23:8:
  21 | }
  22 | 
> 23 | export function addPaperCategory(data) {
     |        ^
  24 |   return request({
  25 |     url: BASE_API_URL + categories,
  26 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:23:34:
  21 | }
  22 | 
> 23 | export function addPaperCategory(data) {
     |                                  ^
  24 |   return request({
  25 |     url: BASE_API_URL + categories,
  26 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:31:8:
  29 | }
  30 | 
> 31 | export function deletePaperCategory(id) {
     |        ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${categories}${id}/`,
  34 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/paper_categories.js:31:37:
  29 | }
  30 | 
> 31 | export function deletePaperCategory(id) {
     |                                     ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${categories}${id}/`,
  34 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:8:8:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getPapers(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + papers,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:8:27:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getPapers(params) {
     |                           ^
   9 |   return request({
  10 |     url: BASE_API_URL + papers,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:16:8:
  14 | }
  15 | 
> 16 | export function postPaper(data) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + papers,
  19 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:16:27:
  14 | }
  15 | 
> 16 | export function postPaper(data) {
     |                           ^
  17 |   return request({
  18 |     url: BASE_API_URL + papers,
  19 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:27:8:
  25 | }
  26 | 
> 27 | export function patchPaper(id, data) {
     |        ^
  28 |   return request({
  29 |     url: `${BASE_API_URL}${papers}${id}/`,
  30 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:27:28:
  25 | }
  26 | 
> 27 | export function patchPaper(id, data) {
     |                            ^
  28 |   return request({
  29 |     url: `${BASE_API_URL}${papers}${id}/`,
  30 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/papers.js:27:32:
  25 | }
  26 | 
> 27 | export function patchPaper(id, data) {
     |                                ^
  28 |   return request({
  29 |     url: `${BASE_API_URL}${papers}${id}/`,
  30 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:4:8:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getPublishers(params) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.publishers.publishers,
  7 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:4:31:
  2 | import { BASE_API_URL, DMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function getPublishers(params) {
    |                               ^
  5 |   return request({
  6 |     url: BASE_API_URL + DMS_URLS.publishers.publishers,
  7 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:12:8:
  10 | }
  11 | 
> 12 | export function editPublisher(id, data) {
     |        ^
  13 |   return request({
  14 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}${id}/`,
  15 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:12:31:
  10 | }
  11 | 
> 12 | export function editPublisher(id, data) {
     |                               ^
  13 |   return request({
  14 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}${id}/`,
  15 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:12:35:
  10 | }
  11 | 
> 12 | export function editPublisher(id, data) {
     |                                   ^
  13 |   return request({
  14 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}${id}/`,
  15 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:20:8:
  18 | }
  19 | 
> 20 | export function deletePublisher(id) {
     |        ^
  21 |   return request({
  22 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}${id}/`,
  23 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:20:33:
  18 | }
  19 | 
> 20 | export function deletePublisher(id) {
     |                                 ^
  21 |   return request({
  22 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}${id}/`,
  23 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:27:8:
  25 | }
  26 | 
> 27 | export function addPublisher(data) {
     |        ^
  28 |   return request({
  29 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}`,
  30 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/publishers.js:27:30:
  25 | }
  26 | 
> 27 | export function addPublisher(data) {
     |                              ^
  28 |   return request({
  29 |     url: `${BASE_API_URL}${DMS_URLS.publishers.publishers}`,
  30 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getPunishment(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + punishment,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:8:31:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getPunishment(params) {
     |                               ^
   9 |   return request({
  10 |     url: BASE_API_URL + punishment,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:16:8:
  14 | }
  15 | 
> 16 | export function patchPunishment(data) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${punishment}${data.id}/`,
  19 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:16:33:
  14 | }
  15 | 
> 16 | export function patchPunishment(data) {
     |                                 ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${punishment}${data.id}/`,
  19 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:24:8:
  22 | }
  23 | 
> 24 | export function postPunishment(data) {
     |        ^
  25 |   return request({
  26 |     url: BASE_API_URL + punishment,
  27 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:24:32:
  22 | }
  23 | 
> 24 | export function postPunishment(data) {
     |                                ^
  25 |   return request({
  26 |     url: BASE_API_URL + punishment,
  27 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:32:8:
  30 | }
  31 | 
> 32 | export function deletePunishment(params) {
     |        ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${punishment}${params.id}/`,
  35 |     method: "delete",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/punishment.js:32:34:
  30 | }
  31 | 
> 32 | export function deletePunishment(params) {
     |                                  ^
  33 |   return request({
  34 |     url: `${BASE_API_URL}${punishment}${params.id}/`,
  35 |     method: "delete",


warning: 'ranks' is assigned a value but never used (@typescript-eslint/no-unused-vars) at src/api/reference-book.js:12:5:
  10 |     milfaculties,
  11 |     programs,
> 12 |     ranks,
     |     ^
  13 |     rooms,
  14 |     skills,
  15 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:18:8:
  16 | } = LMS_URLS;
  17 | 
> 18 | export function getReferenceBooks(params) {
     |        ^
  19 |   return request({
  20 |     url: BASE_API_URL + book,
  21 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:18:35:
  16 | } = LMS_URLS;
  17 | 
> 18 | export function getReferenceBooks(params) {
     |                                   ^
  19 |   return request({
  20 |     url: BASE_API_URL + book,
  21 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:26:8:
  24 | }
  25 | 
> 26 | export function getMilSpecialties(campus) {
     |        ^
  27 |   return request({
  28 |     url: BASE_API_URL + milspecialties,
  29 |     method: "get",


warning: Argument 'campus' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:26:35:
  24 | }
  25 | 
> 26 | export function getMilSpecialties(campus) {
     |                                   ^
  27 |   return request({
  28 |     url: BASE_API_URL + milspecialties,
  29 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:34:8:
  32 | }
  33 | 
> 34 | export function editMilSpecialty(id, data) {
     |        ^
  35 |   return request({
  36 |     url: `${BASE_API_URL}${milspecialties}${id}/`,
  37 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:34:34:
  32 | }
  33 | 
> 34 | export function editMilSpecialty(id, data) {
     |                                  ^
  35 |   return request({
  36 |     url: `${BASE_API_URL}${milspecialties}${id}/`,
  37 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:34:38:
  32 | }
  33 | 
> 34 | export function editMilSpecialty(id, data) {
     |                                      ^
  35 |   return request({
  36 |     url: `${BASE_API_URL}${milspecialties}${id}/`,
  37 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:42:8:
  40 | }
  41 | 
> 42 | export function deleteMilSpecialty(id) {
     |        ^
  43 |   return request({
  44 |     url: `${BASE_API_URL}${milspecialties}${id}/`,
  45 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:42:36:
  40 | }
  41 | 
> 42 | export function deleteMilSpecialty(id) {
     |                                    ^
  43 |   return request({
  44 |     url: `${BASE_API_URL}${milspecialties}${id}/`,
  45 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:49:8:
  47 | }
  48 | 
> 49 | export function addMilSpecialty(data) {
     |        ^
  50 |   return request({
  51 |     url: `${BASE_API_URL}${milspecialties}`,
  52 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:49:33:
  47 | }
  48 | 
> 49 | export function addMilSpecialty(data) {
     |                                 ^
  50 |   return request({
  51 |     url: `${BASE_API_URL}${milspecialties}`,
  52 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:57:8:
  55 | }
  56 | 
> 57 | export function getMilGroups() {
     |        ^
  58 |   return request({
  59 |     url: BASE_API_URL + milgroups,
  60 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:64:8:
  62 | }
  63 | 
> 64 | export function editMilGroup(id, data) {
     |        ^
  65 |   return request({
  66 |     url: `${BASE_API_URL}${milgroups}${id}/`,
  67 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:64:30:
  62 | }
  63 | 
> 64 | export function editMilGroup(id, data) {
     |                              ^
  65 |   return request({
  66 |     url: `${BASE_API_URL}${milgroups}${id}/`,
  67 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:64:34:
  62 | }
  63 | 
> 64 | export function editMilGroup(id, data) {
     |                                  ^
  65 |   return request({
  66 |     url: `${BASE_API_URL}${milgroups}${id}/`,
  67 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:72:8:
  70 | }
  71 | 
> 72 | export function deleteMilGroup(id) {
     |        ^
  73 |   return request({
  74 |     url: `${BASE_API_URL}${milgroups}${id}/`,
  75 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:72:32:
  70 | }
  71 | 
> 72 | export function deleteMilGroup(id) {
     |                                ^
  73 |   return request({
  74 |     url: `${BASE_API_URL}${milgroups}${id}/`,
  75 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:79:8:
  77 | }
  78 | 
> 79 | export function addMilGroup(data) {
     |        ^
  80 |   return request({
  81 |     url: `${BASE_API_URL}${milgroups}`,
  82 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:79:29:
  77 | }
  78 | 
> 79 | export function addMilGroup(data) {
     |                             ^
  80 |   return request({
  81 |     url: `${BASE_API_URL}${milgroups}`,
  82 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:87:8:
  85 | }
  86 | 
> 87 | export function getMilFaculties() {
     |        ^
  88 |   return request({
  89 |     url: BASE_API_URL + milfaculties,
  90 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:94:8:
  92 | }
  93 | 
> 94 | export function editMilFaculty(id, data) {
     |        ^
  95 |   return request({
  96 |     url: `${BASE_API_URL}${milfaculties}${id}/`,
  97 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:94:32:
  92 | }
  93 | 
> 94 | export function editMilFaculty(id, data) {
     |                                ^
  95 |   return request({
  96 |     url: `${BASE_API_URL}${milfaculties}${id}/`,
  97 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:94:36:
  92 | }
  93 | 
> 94 | export function editMilFaculty(id, data) {
     |                                    ^
  95 |   return request({
  96 |     url: `${BASE_API_URL}${milfaculties}${id}/`,
  97 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:102:8:
  100 | }
  101 | 
> 102 | export function deleteMilFaculty(id) {
      |        ^
  103 |   return request({
  104 |     url: `${BASE_API_URL}${milfaculties}${id}/`,
  105 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:102:34:
  100 | }
  101 | 
> 102 | export function deleteMilFaculty(id) {
      |                                  ^
  103 |   return request({
  104 |     url: `${BASE_API_URL}${milfaculties}${id}/`,
  105 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:109:8:
  107 | }
  108 | 
> 109 | export function addMilFaculty(data) {
      |        ^
  110 |   return request({
  111 |     url: `${BASE_API_URL}${milfaculties}`,
  112 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:109:31:
  107 | }
  108 | 
> 109 | export function addMilFaculty(data) {
      |                               ^
  110 |   return request({
  111 |     url: `${BASE_API_URL}${milfaculties}`,
  112 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:117:8:
  115 | }
  116 | 
> 117 | export function getAchievementTypes() {
      |        ^
  118 |   return request({
  119 |     url: BASE_API_URL + achievementTypes,
  120 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:124:8:
  122 | }
  123 | 
> 124 | export function editAchievementType(id, data) {
      |        ^
  125 |   return request({
  126 |     url: `${BASE_API_URL}${achievementTypes}${id}/`,
  127 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:124:37:
  122 | }
  123 | 
> 124 | export function editAchievementType(id, data) {
      |                                     ^
  125 |   return request({
  126 |     url: `${BASE_API_URL}${achievementTypes}${id}/`,
  127 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:124:41:
  122 | }
  123 | 
> 124 | export function editAchievementType(id, data) {
      |                                         ^
  125 |   return request({
  126 |     url: `${BASE_API_URL}${achievementTypes}${id}/`,
  127 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:132:8:
  130 | }
  131 | 
> 132 | export function deleteAchievementType(id) {
      |        ^
  133 |   return request({
  134 |     url: `${BASE_API_URL}${achievementTypes}${id}/`,
  135 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:132:39:
  130 | }
  131 | 
> 132 | export function deleteAchievementType(id) {
      |                                       ^
  133 |   return request({
  134 |     url: `${BASE_API_URL}${achievementTypes}${id}/`,
  135 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:139:8:
  137 | }
  138 | 
> 139 | export function addAchievementType(data) {
      |        ^
  140 |   return request({
  141 |     url: `${BASE_API_URL}${achievementTypes}`,
  142 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:139:36:
  137 | }
  138 | 
> 139 | export function addAchievementType(data) {
      |                                    ^
  140 |   return request({
  141 |     url: `${BASE_API_URL}${achievementTypes}`,
  142 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:147:8:
  145 | }
  146 | 
> 147 | export function getPrograms() {
      |        ^
  148 |   return request({
  149 |     url: BASE_API_URL + programs,
  150 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:154:8:
  152 | }
  153 | 
> 154 | export function getProgramsByCampus(campus) {
      |        ^
  155 |   return request({
  156 |     url: BASE_API_URL + programs,
  157 |     method: "get",


warning: Argument 'campus' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:154:37:
  152 | }
  153 | 
> 154 | export function getProgramsByCampus(campus) {
      |                                     ^
  155 |   return request({
  156 |     url: BASE_API_URL + programs,
  157 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:162:8:
  160 | }
  161 | 
> 162 | export function editProgram(id, data) {
      |        ^
  163 |   return request({
  164 |     url: `${BASE_API_URL}${programs}${id}/`,
  165 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:162:29:
  160 | }
  161 | 
> 162 | export function editProgram(id, data) {
      |                             ^
  163 |   return request({
  164 |     url: `${BASE_API_URL}${programs}${id}/`,
  165 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:162:33:
  160 | }
  161 | 
> 162 | export function editProgram(id, data) {
      |                                 ^
  163 |   return request({
  164 |     url: `${BASE_API_URL}${programs}${id}/`,
  165 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:170:8:
  168 | }
  169 | 
> 170 | export function deleteProgram(id) {
      |        ^
  171 |   return request({
  172 |     url: `${BASE_API_URL}${programs}${id}/`,
  173 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:170:31:
  168 | }
  169 | 
> 170 | export function deleteProgram(id) {
      |                               ^
  171 |   return request({
  172 |     url: `${BASE_API_URL}${programs}${id}/`,
  173 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:177:8:
  175 | }
  176 | 
> 177 | export function addProgram(data) {
      |        ^
  178 |   return request({
  179 |     url: `${BASE_API_URL}${programs}`,
  180 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:177:28:
  175 | }
  176 | 
> 177 | export function addProgram(data) {
      |                            ^
  178 |   return request({
  179 |     url: `${BASE_API_URL}${programs}`,
  180 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:185:8:
  183 | }
  184 | 
> 185 | export function getRooms() {
      |        ^
  186 |   return request({
  187 |     url: BASE_API_URL + rooms,
  188 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:192:8:
  190 | }
  191 | 
> 192 | export function editRoom(id, data) {
      |        ^
  193 |   return request({
  194 |     url: `${BASE_API_URL}${rooms}${id}/`,
  195 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:192:26:
  190 | }
  191 | 
> 192 | export function editRoom(id, data) {
      |                          ^
  193 |   return request({
  194 |     url: `${BASE_API_URL}${rooms}${id}/`,
  195 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:192:30:
  190 | }
  191 | 
> 192 | export function editRoom(id, data) {
      |                              ^
  193 |   return request({
  194 |     url: `${BASE_API_URL}${rooms}${id}/`,
  195 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:200:8:
  198 | }
  199 | 
> 200 | export function deleteRoom(id) {
      |        ^
  201 |   return request({
  202 |     url: `${BASE_API_URL}${rooms}${id}/`,
  203 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:200:28:
  198 | }
  199 | 
> 200 | export function deleteRoom(id) {
      |                            ^
  201 |   return request({
  202 |     url: `${BASE_API_URL}${rooms}${id}/`,
  203 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:207:8:
  205 | }
  206 | 
> 207 | export function addRoom(data) {
      |        ^
  208 |   return request({
  209 |     url: `${BASE_API_URL}${rooms}`,
  210 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:207:25:
  205 | }
  206 | 
> 207 | export function addRoom(data) {
      |                         ^
  208 |   return request({
  209 |     url: `${BASE_API_URL}${rooms}`,
  210 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:215:8:
  213 | }
  214 | 
> 215 | export function getSkills() {
      |        ^
  216 |   return request({
  217 |     url: BASE_API_URL + skills,
  218 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:222:8:
  220 | }
  221 | 
> 222 | export function editSkill(id, data) {
      |        ^
  223 |   return request({
  224 |     url: `${BASE_API_URL}${skills}${id}/`,
  225 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:222:27:
  220 | }
  221 | 
> 222 | export function editSkill(id, data) {
      |                           ^
  223 |   return request({
  224 |     url: `${BASE_API_URL}${skills}${id}/`,
  225 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:222:31:
  220 | }
  221 | 
> 222 | export function editSkill(id, data) {
      |                               ^
  223 |   return request({
  224 |     url: `${BASE_API_URL}${skills}${id}/`,
  225 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:230:8:
  228 | }
  229 | 
> 230 | export function deleteSkill(id) {
      |        ^
  231 |   return request({
  232 |     url: `${BASE_API_URL}${skills}${id}/`,
  233 |     method: "DELETE",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:230:29:
  228 | }
  229 | 
> 230 | export function deleteSkill(id) {
      |                             ^
  231 |   return request({
  232 |     url: `${BASE_API_URL}${skills}${id}/`,
  233 |     method: "DELETE",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:237:8:
  235 | }
  236 | 
> 237 | export function addSkill(data) {
      |        ^
  238 |   return request({
  239 |     url: `${BASE_API_URL}${skills}`,
  240 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/reference-book.js:237:26:
  235 | }
  236 | 
> 237 | export function addSkill(data) {
      |                          ^
  238 |   return request({
  239 |     url: `${BASE_API_URL}${skills}`,
  240 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/statistics.js:4:8:
  2 | import request from "@/utils/request";
  3 | 
> 4 | export function getStatistics(id) {
    |        ^
  5 |   return request({
  6 |     url: `${BASE_API_URL}${DMS_URLS.statistics.statistics}${id}`,
  7 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/statistics.js:4:31:
  2 | import request from "@/utils/request";
  3 | 
> 4 | export function getStatistics(id) {
    |                               ^
  5 |   return request({
  6 |     url: `${BASE_API_URL}${DMS_URLS.statistics.statistics}${id}`,
  7 |     method: "get",


warning: 'AMS_URLS' is defined but never used (@typescript-eslint/no-unused-vars) at src/api/students.js:2:24:
  1 | import request from "@/utils/request";
> 2 | import { BASE_API_URL, AMS_URLS, LMS_URLS } from "@/constants/api";
    |                        ^
  3 | 
  4 | const {
  5 |   staff: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:10:28:
   8 | } = LMS_URLS;
   9 | 
> 10 | export const getStudents = filters => request({
     |                            ^
  11 |   url: BASE_API_URL + students,
  12 |   method: "GET",
  13 |   data: filters,


warning: Argument 'filters' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:10:28:
   8 | } = LMS_URLS;
   9 | 
> 10 | export const getStudents = filters => request({
     |                            ^
  11 |   url: BASE_API_URL + students,
  12 |   method: "GET",
  13 |   data: filters,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:16:8:
  14 | });
  15 | 
> 16 | export function getStudent(params) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + students,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:16:28:
  14 | });
  15 | 
> 16 | export function getStudent(params) {
     |                            ^
  17 |   return request({
  18 |     url: BASE_API_URL + students,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:23:8:
  21 |   });
  22 | }
> 23 | export function getStudentBasic(params) {
     |        ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${students}basic/`,
  26 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:23:33:
  21 |   });
  22 | }
> 23 | export function getStudentBasic(params) {
     |                                 ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${students}basic/`,
  26 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:31:8:
  29 | }
  30 | 
> 31 | export function findStudentBasic(id) {
     |        ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${students}basic/${id}`,
  34 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:31:34:
  29 | }
  30 | 
> 31 | export function findStudentBasic(id) {
     |                                  ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${students}basic/${id}`,
  34 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:38:8:
  36 | }
  37 | 
> 38 | export function findStudent(id) {
     |        ^
  39 |   return request({
  40 |     url: `${BASE_API_URL}${students}${id}/`,
  41 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:38:29:
  36 | }
  37 | 
> 38 | export function findStudent(id) {
     |                             ^
  39 |   return request({
  40 |     url: `${BASE_API_URL}${students}${id}/`,
  41 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:45:8:
  43 | }
  44 | 
> 45 | export function findStudentSkills(id) {
     |        ^
  46 |   return request({
  47 |     url: `${BASE_API_URL}${students}skills/${id}/`,
  48 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:45:35:
  43 | }
  44 | 
> 45 | export function findStudentSkills(id) {
     |                                   ^
  46 |   return request({
  47 |     url: `${BASE_API_URL}${students}skills/${id}/`,
  48 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:52:8:
  50 | }
  51 | 
> 52 | export function findStudentPerformance(id) {
     |        ^
  53 |   return request({
  54 |     url: `${BASE_API_URL}${students}${id}/performance`,
  55 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:52:40:
  50 | }
  51 | 
> 52 | export function findStudentPerformance(id) {
     |                                        ^
  53 |   return request({
  54 |     url: `${BASE_API_URL}${students}${id}/performance`,
  55 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:59:8:
  57 | }
  58 | 
> 59 | export function findStudentExtra(id) {
     |        ^
  60 |   return request({
  61 |     url: `${BASE_API_URL}${students}extra/${id}/`,
  62 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:59:34:
  57 | }
  58 | 
> 59 | export function findStudentExtra(id) {
     |                                  ^
  60 |   return request({
  61 |     url: `${BASE_API_URL}${students}extra/${id}/`,
  62 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:66:8:
  64 | }
  65 | 
> 66 | export function patchStudent(data) {
     |        ^
  67 |   return request({
  68 |     url: `${BASE_API_URL}${students}${data.id}/`,
  69 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:66:30:
  64 | }
  65 | 
> 66 | export function patchStudent(data) {
     |                              ^
  67 |   return request({
  68 |     url: `${BASE_API_URL}${students}${data.id}/`,
  69 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:74:8:
  72 | }
  73 | 
> 74 | export function deleteStudent(id) {
     |        ^
  75 |   return request({
  76 |     url: `${BASE_API_URL}${students}${id}/`,
  77 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:74:31:
  72 | }
  73 | 
> 74 | export function deleteStudent(id) {
     |                               ^
  75 |   return request({
  76 |     url: `${BASE_API_URL}${students}${id}/`,
  77 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:81:8:
  79 | }
  80 | 
> 81 | export function findStudentNotes(id) {
     |        ^
  82 |   return request({
  83 |     url: `${BASE_API_URL}${notes}`,
  84 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:81:34:
  79 | }
  80 | 
> 81 | export function findStudentNotes(id) {
     |                                  ^
  82 |   return request({
  83 |     url: `${BASE_API_URL}${notes}`,
  84 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:91:8:
  89 | }
  90 | 
> 91 | export function patchStudentNote(data) {
     |        ^
  92 |   return request({
  93 |     url: `${BASE_API_URL}${notes}${data.id}/`,
  94 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:91:34:
  89 | }
  90 | 
> 91 | export function patchStudentNote(data) {
     |                                  ^
  92 |   return request({
  93 |     url: `${BASE_API_URL}${notes}${data.id}/`,
  94 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:99:8:
   97 | }
   98 | 
>  99 | export function postStudentNote(data) {
      |        ^
  100 |   return request({
  101 |     url: `${BASE_API_URL}${notes}`,
  102 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:99:33:
   97 | }
   98 | 
>  99 | export function postStudentNote(data) {
      |                                 ^
  100 |   return request({
  101 |     url: `${BASE_API_URL}${notes}`,
  102 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:107:8:
  105 | }
  106 | 
> 107 | export function deleteStudentNote(id) {
      |        ^
  108 |   return request({
  109 |     url: `${BASE_API_URL}${notes}${id}`,
  110 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/students.js:107:35:
  105 | }
  106 | 
> 107 | export function deleteStudentNote(id) {
      |                                   ^
  108 |   return request({
  109 |     url: `${BASE_API_URL}${notes}${id}`,
  110 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getSubjects(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + subject,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:8:29:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getSubjects(params) {
     |                             ^
   9 |   return request({
  10 |     url: BASE_API_URL + subject,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:16:8:
  14 | }
  15 | 
> 16 | export function findSubject(params) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${subject}${params.id}/`,
  19 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:16:29:
  14 | }
  15 | 
> 16 | export function findSubject(params) {
     |                             ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${subject}${params.id}/`,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:23:8:
  21 | }
  22 | 
> 23 | export function deleteSubject(id) {
     |        ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${subject}${id}/`,
  26 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects-lms.js:23:31:
  21 | }
  22 | 
> 23 | export function deleteSubject(id) {
     |                               ^
  24 |   return request({
  25 |     url: `${BASE_API_URL}${subject}${id}/`,
  26 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:9:8:
   7 | } = DMS_URLS;
   8 | 
>  9 | export function getSubjects(params) {
     |        ^
  10 |   return request({
  11 |     url: BASE_API_URL + subjects,
  12 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:9:29:
   7 | } = DMS_URLS;
   8 | 
>  9 | export function getSubjects(params) {
     |                             ^
  10 |   return request({
  11 |     url: BASE_API_URL + subjects,
  12 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:17:8:
  15 | }
  16 | 
> 17 | export function getSubject(params) {
     |        ^
  18 |   return request({
  19 |     url: `${BASE_API_URL}${subjects}${params.id}/`,
  20 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:17:28:
  15 | }
  16 | 
> 17 | export function getSubject(params) {
     |                            ^
  18 |   return request({
  19 |     url: `${BASE_API_URL}${subjects}${params.id}/`,
  20 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:24:8:
  22 | }
  23 | 
> 24 | export function deleteSubject(id) {
     |        ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${subjects}${id}/`,
  27 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:24:31:
  22 | }
  23 | 
> 24 | export function deleteSubject(id) {
     |                               ^
  25 |   return request({
  26 |     url: `${BASE_API_URL}${subjects}${id}/`,
  27 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:31:8:
  29 | }
  30 | 
> 31 | export function addSubject(data) {
     |        ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${subjects}`,
  34 |     method: "POST",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:31:28:
  29 | }
  30 | 
> 31 | export function addSubject(data) {
     |                            ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${subjects}`,
  34 |     method: "POST",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:39:8:
  37 | }
  38 | 
> 39 | export function editSubject(id, data) {
     |        ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${subjects}${id}/`,
  42 |     method: "PATCH",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:39:29:
  37 | }
  38 | 
> 39 | export function editSubject(id, data) {
     |                             ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${subjects}${id}/`,
  42 |     method: "PATCH",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:39:33:
  37 | }
  38 | 
> 39 | export function editSubject(id, data) {
     |                                 ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${subjects}${id}/`,
  42 |     method: "PATCH",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:47:8:
  45 | }
  46 | 
> 47 | export function upsertSubject(data) {
     |        ^
  48 |   if (data.id) {
  49 |     return request({
  50 |       url: `${BASE_API_URL}${subjects}${data.id}/`,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:47:31:
  45 | }
  46 | 
> 47 | export function upsertSubject(data) {
     |                               ^
  48 |   if (data.id) {
  49 |     return request({
  50 |       url: `${BASE_API_URL}${subjects}${data.id}/`,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:63:8:
  61 | }
  62 | 
> 63 | export function editSectionTitle(id, data) {
     |        ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${sections}${id}/`,
  66 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:63:34:
  61 | }
  62 | 
> 63 | export function editSectionTitle(id, data) {
     |                                  ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${sections}${id}/`,
  66 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:63:38:
  61 | }
  62 | 
> 63 | export function editSectionTitle(id, data) {
     |                                      ^
  64 |   return request({
  65 |     url: `${BASE_API_URL}${sections}${id}/`,
  66 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:71:8:
  69 | }
  70 | 
> 71 | export function changeSectionOrder(id, order) {
     |        ^
  72 |   return request({
  73 |     url: `${BASE_API_URL}${sections}${id}/order/`,
  74 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:71:36:
  69 | }
  70 | 
> 71 | export function changeSectionOrder(id, order) {
     |                                    ^
  72 |   return request({
  73 |     url: `${BASE_API_URL}${sections}${id}/order/`,
  74 |     method: "patch",


warning: Argument 'order' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:71:40:
  69 | }
  70 | 
> 71 | export function changeSectionOrder(id, order) {
     |                                        ^
  72 |   return request({
  73 |     url: `${BASE_API_URL}${sections}${id}/order/`,
  74 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:81:8:
  79 | }
  80 | 
> 81 | export function getSections(subjectId) {
     |        ^
  82 |   return request({
  83 |     url: BASE_API_URL + sections,
  84 |     method: "get",


warning: Argument 'subjectId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:81:29:
  79 | }
  80 | 
> 81 | export function getSections(subjectId) {
     |                             ^
  82 |   return request({
  83 |     url: BASE_API_URL + sections,
  84 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:91:8:
  89 | }
  90 | 
> 91 | export function addSection(data) {
     |        ^
  92 |   return request({
  93 |     url: BASE_API_URL + sections,
  94 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:91:28:
  89 | }
  90 | 
> 91 | export function addSection(data) {
     |                            ^
  92 |   return request({
  93 |     url: BASE_API_URL + sections,
  94 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:99:8:
   97 | }
   98 | 
>  99 | export function deleteSection(id) {
      |        ^
  100 |   return request({
  101 |     url: `${BASE_API_URL}${sections}${id}/`,
  102 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/subjects.js:99:31:
   97 | }
   98 | 
>  99 | export function deleteSection(id) {
      |                               ^
  100 |   return request({
  101 |     url: `${BASE_API_URL}${sections}${id}/`,
  102 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getTeacher(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + teachers,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:8:28:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getTeacher(params) {
     |                            ^
   9 |   return request({
  10 |     url: BASE_API_URL + teachers,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:16:8:
  14 | }
  15 | 
> 16 | export function findTeacher(id) {
     |        ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${teachers}${id}/`,
  19 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:16:29:
  14 | }
  15 | 
> 16 | export function findTeacher(id) {
     |                             ^
  17 |   return request({
  18 |     url: `${BASE_API_URL}${teachers}${id}/`,
  19 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:23:8:
  21 | }
  22 | 
> 23 | export function postTeacher(data) {
     |        ^
  24 |   return request({
  25 |     url: BASE_API_URL + teachers,
  26 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:23:29:
  21 | }
  22 | 
> 23 | export function postTeacher(data) {
     |                             ^
  24 |   return request({
  25 |     url: BASE_API_URL + teachers,
  26 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:31:8:
  29 | }
  30 | 
> 31 | export function patchTeacher(data) {
     |        ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${teachers}${data.id}/`,
  34 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:31:30:
  29 | }
  30 | 
> 31 | export function patchTeacher(data) {
     |                              ^
  32 |   return request({
  33 |     url: `${BASE_API_URL}${teachers}${data.id}/`,
  34 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:39:8:
  37 | }
  38 | 
> 39 | export function deleteTeacher(id) {
     |        ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${teachers}${id}/`,
  42 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/teachers.js:39:31:
  37 | }
  38 | 
> 39 | export function deleteTeacher(id) {
     |                               ^
  40 |   return request({
  41 |     url: `${BASE_API_URL}${teachers}${id}/`,
  42 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/tokens.js:4:8:
  2 | import { AUTH_URLS, BASE_API_URL } from "@/constants/api";
  3 | 
> 4 | export function updateAccess(data) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + AUTH_URLS.refresh,
  7 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/tokens.js:4:30:
  2 | import { AUTH_URLS, BASE_API_URL } from "@/constants/api";
  3 | 
> 4 | export function updateAccess(data) {
    |                              ^
  5 |   return request({
  6 |     url: BASE_API_URL + AUTH_URLS.refresh,
  7 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:8:8:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getTopics(id) {
     |        ^
   9 |   return request({
  10 |     url: `${BASE_API_URL}${topics}`,
  11 |     method: "get",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:8:27:
   6 | } = DMS_URLS;
   7 | 
>  8 | export function getTopics(id) {
     |                           ^
   9 |   return request({
  10 |     url: `${BASE_API_URL}${topics}`,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:18:8:
  16 | }
  17 | 
> 18 | export function addTopics(data) {
     |        ^
  19 |   return request({
  20 |     url: BASE_API_URL + topics,
  21 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:18:27:
  16 | }
  17 | 
> 18 | export function addTopics(data) {
     |                           ^
  19 |   return request({
  20 |     url: BASE_API_URL + topics,
  21 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:26:8:
  24 | }
  25 | 
> 26 | export function deleteTopics(id) {
     |        ^
  27 |   return request({
  28 |     url: `${BASE_API_URL}${topics}${id}/`,
  29 |     method: "delete",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:26:30:
  24 | }
  25 | 
> 26 | export function deleteTopics(id) {
     |                              ^
  27 |   return request({
  28 |     url: `${BASE_API_URL}${topics}${id}/`,
  29 |     method: "delete",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:33:8:
  31 | }
  32 | 
> 33 | export function editTopics(id, data) {
     |        ^
  34 |   return request({
  35 |     url: `${BASE_API_URL}${topics}${id}/`,
  36 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:33:28:
  31 | }
  32 | 
> 33 | export function editTopics(id, data) {
     |                            ^
  34 |   return request({
  35 |     url: `${BASE_API_URL}${topics}${id}/`,
  36 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:33:32:
  31 | }
  32 | 
> 33 | export function editTopics(id, data) {
     |                                ^
  34 |   return request({
  35 |     url: `${BASE_API_URL}${topics}${id}/`,
  36 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:41:8:
  39 | }
  40 | 
> 41 | export function changeTopicOrder(id, order) {
     |        ^
  42 |   return request({
  43 |     url: `${BASE_API_URL}${topics}${id}/order/`,
  44 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:41:34:
  39 | }
  40 | 
> 41 | export function changeTopicOrder(id, order) {
     |                                  ^
  42 |   return request({
  43 |     url: `${BASE_API_URL}${topics}${id}/order/`,
  44 |     method: "patch",


warning: Argument 'order' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/topic.js:41:38:
  39 | }
  40 | 
> 41 | export function changeTopicOrder(id, order) {
     |                                      ^
  42 |   return request({
  43 |     url: `${BASE_API_URL}${topics}${id}/order/`,
  44 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:8:8:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getUniforms(params) {
     |        ^
   9 |   return request({
  10 |     url: BASE_API_URL + uniforms,
  11 |     method: "get",


warning: Argument 'params' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:8:29:
   6 | } = LMS_URLS;
   7 | 
>  8 | export function getUniforms(params) {
     |                             ^
   9 |   return request({
  10 |     url: BASE_API_URL + uniforms,
  11 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:16:8:
  14 | }
  15 | 
> 16 | export function createUniform(data) {
     |        ^
  17 |   return request({
  18 |     url: BASE_API_URL + uniforms,
  19 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:16:31:
  14 | }
  15 | 
> 16 | export function createUniform(data) {
     |                               ^
  17 |   return request({
  18 |     url: BASE_API_URL + uniforms,
  19 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:24:8:
  22 | }
  23 | 
> 24 | export function changeUniform(data, id) {
     |        ^
  25 |   return request({
  26 |     url: `${BASE_API_URL + uniforms}${id}/`,
  27 |     method: "patch",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:24:31:
  22 | }
  23 | 
> 24 | export function changeUniform(data, id) {
     |                               ^
  25 |   return request({
  26 |     url: `${BASE_API_URL + uniforms}${id}/`,
  27 |     method: "patch",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/uniform.js:24:37:
  22 | }
  23 | 
> 24 | export function changeUniform(data, id) {
     |                                     ^
  25 |   return request({
  26 |     url: `${BASE_API_URL + uniforms}${id}/`,
  27 |     method: "patch",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:4:8:
  2 | import { AUTH_URLS, BASE_API_URL, LMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function login(data) {
    |        ^
  5 |   return request({
  6 |     url: BASE_API_URL + AUTH_URLS.obtain,
  7 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:4:23:
  2 | import { AUTH_URLS, BASE_API_URL, LMS_URLS } from "@/constants/api";
  3 | 
> 4 | export function login(data) {
    |                       ^
  5 |   return request({
  6 |     url: BASE_API_URL + AUTH_URLS.obtain,
  7 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:12:8:
  10 | }
  11 | 
> 12 | export function getUser() {
     |        ^
  13 |   return request({
  14 |     url: BASE_API_URL + AUTH_URLS.user,
  15 |     method: "get",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:19:8:
  17 | }
  18 | 
> 19 | export function changePassword(data) {
     |        ^
  20 |   return request({
  21 |     url: BASE_API_URL + AUTH_URLS.change_password,
  22 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:19:32:
  17 | }
  18 | 
> 19 | export function changePassword(data) {
     |                                ^
  20 |   return request({
  21 |     url: BASE_API_URL + AUTH_URLS.change_password,
  22 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:27:8:
  25 | }
  26 | 
> 27 | export function registerStudent(data) {
     |        ^
  28 |   return request({
  29 |     url: BASE_API_URL + LMS_URLS.register.students,
  30 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:27:33:
  25 | }
  26 | 
> 27 | export function registerStudent(data) {
     |                                 ^
  28 |   return request({
  29 |     url: BASE_API_URL + LMS_URLS.register.students,
  30 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:35:8:
  33 | }
  34 | 
> 35 | export function registerTeacher(data) {
     |        ^
  36 |   return request({
  37 |     url: BASE_API_URL + LMS_URLS.register.teachers,
  38 |     method: "post",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/api/user.js:35:33:
  33 | }
  34 | 
> 35 | export function registerTeacher(data) {
     |                                 ^
  36 |   return request({
  37 |     url: BASE_API_URL + LMS_URLS.register.teachers,
  38 |     method: "post",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/CtaButton.vue:29:5:
  27 |   },
  28 |   methods: {
> 29 |     onClick() {
     |     ^
  30 |       this.$emit("click");
  31 |     },
  32 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/CustomText.vue:31:16:
  29 |     customStyle: {
  30 |       type: Object,
> 31 |       default: () => ({}),
     |                ^
  32 |     },
  33 |     mt: {
  34 |       type: Number,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/DownloadFile/index.vue:24:3:
  22 |     },
  23 |   },
> 24 |   data() {
     |   ^
  25 |     return { isDataLoading: false };
  26 |   },
  27 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/DownloadFile/index.vue:28:5:
  26 |   },
  27 |   methods: {
> 28 |     async downloadFile() {
     |     ^
  29 |       if (!this.url || this.isDataLoading) {
  30 |         return;
  31 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:108:3:
  106 | 
  107 |   @Emit("change")
> 108 |   onChange(field, value) {
      |   ^
  109 |     return {
  110 |       ...this.formData,
  111 |       [field]: value,


warning: Argument 'field' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:108:12:
  106 | 
  107 |   @Emit("change")
> 108 |   onChange(field, value) {
      |            ^
  109 |     return {
  110 |       ...this.formData,
  111 |       [field]: value,


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:108:19:
  106 | 
  107 |   @Emit("change")
> 108 |   onChange(field, value) {
      |                   ^
  109 |     return {
  110 |       ...this.formData,
  111 |       [field]: value,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:115:3:
  113 |   }
  114 | 
> 115 |   validate() {
      |   ^
  116 |     let isValid = false;
  117 | 
  118 |     this.form.validate(valid => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:136:3:
  134 |   }
  135 | 
> 136 |   getNotInputProps(props) {
      |   ^
  137 |     return _omit(props, [
  138 |       "annotation",
  139 |       "wrapperClassName",


warning: Argument 'props' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/Form/index.vue:136:20:
  134 |   }
  135 | 
> 136 |   getNotInputProps(props) {
      |                    ^
  137 |     return _omit(props, [
  138 |       "annotation",
  139 |       "wrapperClassName",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/PageHeader.vue:33:16:
  31 |     permissions: {
  32 |       type: Array,
> 33 |       default: () => [],
     |                ^
  34 |     },
  35 |     click: {
  36 |       type: Function,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/PageHeader.vue:37:16:
  35 |     click: {
  36 |       type: Function,
> 37 |       default: () => ({}),
     |                ^
  38 |     },
  39 |   },
  40 | };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/SearchBar.vue:43:5:
  41 |   },
  42 |   watch: {
> 43 |     $route() {
     |     ^
  44 |       if (this.$route.query.search) {
  45 |         this.$refs.searchInput.value = this.$route.query.search;
  46 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/SearchBar.vue:49:3:
  47 |     },
  48 |   },
> 49 |   mounted() {
     |   ^
  50 |     if (this.$route.query.search) {
  51 |       this.$refs.searchInput.value = this.$route.query.search;
  52 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/SearchBar.vue:55:5:
  53 |   },
  54 |   methods: {
> 55 |     searchHandler() {
     |     ^
  56 |       this.search(this.$refs.searchInput.value);
  57 |     },
  58 |     deleteHandler() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/SearchBar.vue:58:5:
  56 |       this.search(this.$refs.searchInput.value);
  57 |     },
> 58 |     deleteHandler() {
     |     ^
  59 |       this.$refs.searchInput.value = "";
  60 |       if (this.delete) {
  61 |         this.delete();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/File.vue:44:3:
  42 |   @Prop({ type: Array, default: () => [] }) filesTypes
  43 | 
> 44 |   get inputAnnotation() {
     |   ^
  45 |     if (this.lodash.isString(this.annotation) || !this.filesTypes.length) {
  46 |       return this.annotation;
  47 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/File.vue:54:3:
  52 |   }
  53 | 
> 54 |   onChange(file, files) {
     |   ^
  55 |     this.value = files;
  56 |   }
  57 | }


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/File.vue:54:12:
  52 |   }
  53 | 
> 54 |   onChange(file, files) {
     |            ^
  55 |     this.value = files;
  56 |   }
  57 | }


warning: Argument 'files' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/File.vue:54:18:
  52 |   }
  53 | 
> 54 |   onChange(file, files) {
     |                  ^
  55 |     this.value = files;
  56 |   }
  57 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:40:3:
  38 |   @Prop({ type: Array, default: () => [] }) options
  39 | 
> 40 |   get selectOptions() {
     |   ^
  41 |     return this.options.map(option => {
  42 |       const isObj = _isObject(option);
  43 |       const rawLabel = isObj ? option.label : option;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:62:3:
  60 |   }
  61 | 
> 62 |   get value() {
     |   ^
  63 |     if (_isArray(this.modelValue)) {
  64 |       return this.modelValue.map(item => this.encodeValue(item));
  65 |     }


warning: Argument 'newValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:70:13:
  68 |   }
  69 | 
> 70 |   set value(newValue) {
     |             ^
  71 |     if (_isArray(newValue)) {
  72 |       this.$emit(
  73 |         "change",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:83:3:
  81 |   }
  82 | 
> 83 |   encodeValue(value) {
     |   ^
  84 |     if (!value && value !== 0) { return value; }
  85 | 
  86 |     if (_isObject(value)) {


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:83:15:
  81 |   }
  82 | 
> 83 |   encodeValue(value) {
     |               ^
  84 |     if (!value && value !== 0) { return value; }
  85 | 
  86 |     if (_isObject(value)) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:93:3:
  91 |   }
  92 | 
> 93 |   decodeValue(value) {
     |   ^
  94 |     if (!value && value !== 0) { return value; }
  95 |     try {
  96 |       return JSON.parse(value);


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Select.vue:93:15:
  91 |   }
  92 | 
> 93 |   decodeValue(value) {
     |               ^
  94 |     if (!value && value !== 0) { return value; }
  95 |     try {
  96 |       return JSON.parse(value);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Switch.vue:28:3:
  26 |   @Prop({ default: false }) falseValue
  27 | 
> 28 |   get value() {
     |   ^
  29 |     return this.modelValue === this.trueValue;
  30 |   }
  31 | 


warning: Argument 'newValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Switch.vue:32:13:
  30 |   }
  31 | 
> 32 |   set value(newValue) {
     |             ^
  33 |     console.log("newValue", newValue);
  34 |     this.$emit("change", newValue ? this.trueValue : this.falseValue);
  35 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Tags.vue:33:3:
  31 | 
  32 |   @Emit()
> 33 |   change(values) {
     |   ^
  34 |     console.log("values", values);
  35 |     return values
  36 |       .map(item => item.trim().toLowerCase())


warning: Argument 'values' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Tags.vue:33:10:
  31 | 
  32 |   @Emit()
> 33 |   change(values) {
     |          ^
  34 |     console.log("values", values);
  35 |     return values
  36 |       .map(item => item.trim().toLowerCase())


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Text.vue:36:3:
  34 |   @Prop({ type: String, default: "" }) placeholder
  35 | 
> 36 |   get value() { return this.modelValue; }
     |   ^
  37 | 
  38 |   set value(value) {
  39 |     this.$emit("change", this.onlyChars ? value.replace(/\d/g, "") : value);


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Text.vue:38:13:
  36 |   get value() { return this.modelValue; }
  37 | 
> 38 |   set value(value) {
     |             ^
  39 |     this.$emit("change", this.onlyChars ? value.replace(/\d/g, "") : value);
  40 |   }
  41 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Text.vue:42:3:
  40 |   }
  41 | 
> 42 |   get type() {
     |   ^
  43 |     return this.isTextArea ? "textarea" : "text";
  44 |   }
  45 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/common/inputs/Text.vue:46:3:
  44 |   }
  45 | 
> 46 |   get listeners() {
     |   ^
  47 |     return _omit(this.$listeners, ["change"]);
  48 |   }
  49 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:299:3:
  297 |   profPsySelection = profPsySelection
  298 | 
> 299 |   async onUpdate(data, key, value) {
      |   ^
  300 |     if (!await this.onChange({ id: data.id, key, value })) {
  301 |       // eslint-disable-next-line no-param-reassign
  302 |       data[key] = this.currentEditingValue;


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:299:18:
  297 |   profPsySelection = profPsySelection
  298 | 
> 299 |   async onUpdate(data, key, value) {
      |                  ^
  300 |     if (!await this.onChange({ id: data.id, key, value })) {
  301 |       // eslint-disable-next-line no-param-reassign
  302 |       data[key] = this.currentEditingValue;


warning: Argument 'key' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:299:24:
  297 |   profPsySelection = profPsySelection
  298 | 
> 299 |   async onUpdate(data, key, value) {
      |                        ^
  300 |     if (!await this.onChange({ id: data.id, key, value })) {
  301 |       // eslint-disable-next-line no-param-reassign
  302 |       data[key] = this.currentEditingValue;


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:299:29:
  297 |   profPsySelection = profPsySelection
  298 | 
> 299 |   async onUpdate(data, key, value) {
      |                             ^
  300 |     if (!await this.onChange({ id: data.id, key, value })) {
  301 |       // eslint-disable-next-line no-param-reassign
  302 |       data[key] = this.currentEditingValue;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:308:3:
  306 |   }
  307 | 
> 308 |   savePrevValue({ data, field }) {
      |   ^
  309 |     this.currentEditingValue = data[field];
  310 |   }
  311 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:308:17:
  306 |   }
  307 | 
> 308 |   savePrevValue({ data, field }) {
      |                 ^
  309 |     this.currentEditingValue = data[field];
  310 |   }
  311 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:312:3:
  310 |   }
  311 | 
> 312 |   getCellText(data, field) {
      |   ^
  313 |     const getSelectLabel = (value, options) => {
  314 |       const option = options.find(item => item.value === value);
  315 | 


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:312:15:
  310 |   }
  311 | 
> 312 |   getCellText(data, field) {
      |               ^
  313 |     const getSelectLabel = (value, options) => {
  314 |       const option = options.find(item => item.value === value);
  315 | 


warning: Argument 'field' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@ApplicantsDocuments/Table.vue:312:21:
  310 |   }
  311 | 
> 312 |   getCellText(data, field) {
      |                     ^
  313 |     const getSelectLabel = (value, options) => {
  314 |       const option = options.find(item => item.value === value);
  315 | 


warning: 'Watch' is defined but never used (@typescript-eslint/no-unused-vars) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:122:3:
  120 |   Prop,
  121 |   Vue,
> 122 |   Watch,
      |   ^
  123 | } from "vue-property-decorator";
  124 | 
  125 | import _isArray from "lodash/isArray";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:153:3:
  151 |   newFiles = []
  152 | 
> 153 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
      |   ^
  154 |   get userId() { return UserModule.userId; }
  155 | 
  156 |   async deleteMaterial(id) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:154:3:
  152 | 
  153 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
> 154 |   get userId() { return UserModule.userId; }
      |   ^
  155 | 
  156 |   async deleteMaterial(id) {
  157 |     await this.$confirm(


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:156:3:
  154 |   get userId() { return UserModule.userId; }
  155 | 
> 156 |   async deleteMaterial(id) {
      |   ^
  157 |     await this.$confirm(
  158 |       "Вы уверены, что хотите удалить материал? Это действие не обратимо.",
  159 |       "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:156:24:
  154 |   get userId() { return UserModule.userId; }
  155 | 
> 156 |   async deleteMaterial(id) {
      |                        ^
  157 |     await this.$confirm(
  158 |       "Вы уверены, что хотите удалить материал? Это действие не обратимо.",
  159 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:175:3:
  173 |   }
  174 | 
> 175 |   async handleClose(done) {
      |   ^
  176 |     await this.$confirm("Вы уверены?", "", {
  177 |       confirmButtonText: "Да",
  178 |       cancelButtonText: "Отменить",


warning: Argument 'done' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:175:21:
  173 |   }
  174 | 
> 175 |   async handleClose(done) {
      |                     ^
  176 |     await this.$confirm("Вы уверены?", "", {
  177 |       confirmButtonText: "Да",
  178 |       cancelButtonText: "Отменить",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:185:3:
  183 |   }
  184 | 
> 185 |   cancelFile() {
      |   ^
  186 |     this.newFiles = [];
  187 |     this.dialogVisible = false;
  188 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/ClassMaterials.vue:190:3:
  188 |   }
  189 | 
> 190 |   async saveFile() {
      |   ^
  191 |     this.dialogVisible = false;
  192 |     const formData = new FormData();
  193 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:100:3:
   98 |   isEditing = false
   99 | 
> 100 |   get sections() { return SubjectsModule.currentSections; }
      |   ^
  101 |   get userId() { return UserModule.userId; }
  102 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
  103 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:101:3:
   99 | 
  100 |   get sections() { return SubjectsModule.currentSections; }
> 101 |   get userId() { return UserModule.userId; }
      |   ^
  102 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
  103 | 
  104 |   editTitle() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:102:3:
  100 |   get sections() { return SubjectsModule.currentSections; }
  101 |   get userId() { return UserModule.userId; }
> 102 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
      |   ^
  103 | 
  104 |   editTitle() {
  105 |     this.isEditing = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:104:3:
  102 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
  103 | 
> 104 |   editTitle() {
      |   ^
  105 |     this.isEditing = true;
  106 |   }
  107 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:108:3:
  106 |   }
  107 | 
> 108 |   acceptNewTitle() {
      |   ^
  109 |     SubjectsModule.updateSectionTitle(this.sectionInfo);
  110 | 
  111 |     this.isEditing = false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionCard.vue:114:3:
  112 |   }
  113 | 
> 114 |   async deleteSection() {
      |   ^
  115 |     await this.$confirm(
  116 |       "Вы уверены, что хотите удалить раздел? Это действие не обратимо.",
  117 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:42:3:
  40 |   openedCards = {}
  41 | 
> 42 |   get userId() { return UserModule.userId; }
     |   ^
  43 |   get sections() { return SubjectsModule.currentSections; }
  44 |   get dragOptions() {
  45 |     return {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:43:3:
  41 | 
  42 |   get userId() { return UserModule.userId; }
> 43 |   get sections() { return SubjectsModule.currentSections; }
     |   ^
  44 |   get dragOptions() {
  45 |     return {
  46 |       animation: 200,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:44:3:
  42 |   get userId() { return UserModule.userId; }
  43 |   get sections() { return SubjectsModule.currentSections; }
> 44 |   get dragOptions() {
     |   ^
  45 |     return {
  46 |       animation: 200,
  47 |       group: "description",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:54:3:
  52 |   }
  53 | 
> 54 |   get disableDrag() {
     |   ^
  55 |     return !hasPermission([{
  56 |       codename: "sections-order.patch.all", // TODO: add sections-order.patch.self to BE and use validator with it on FE
  57 |       validator: () => this.userId === this.subjectOwnerId,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:61:3:
  59 |   }
  60 | 
> 61 |   updateOrder(id, order) {
     |   ^
  62 |     SubjectsModule.changeSectionsOrder({ id, order });
  63 |   }
  64 | 


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:61:15:
  59 |   }
  60 | 
> 61 |   updateOrder(id, order) {
     |               ^
  62 |     SubjectsModule.changeSectionsOrder({ id, order });
  63 |   }
  64 | 


warning: Argument 'order' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:61:19:
  59 |   }
  60 | 
> 61 |   updateOrder(id, order) {
     |                   ^
  62 |     SubjectsModule.changeSectionsOrder({ id, order });
  63 |   }
  64 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:66:3:
  64 | 
  65 |   @Watch("$route", { immediate: true })
> 66 |   onRouteChange(next) {
     |   ^
  67 |     if (next.query.section) {
  68 |       this.openedCards[next.query.section] = true;
  69 |     }


warning: Argument 'next' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsCards.vue:66:17:
  64 | 
  65 |   @Watch("$route", { immediate: true })
> 66 |   onRouteChange(next) {
     |                 ^
  67 |     if (next.query.section) {
  68 |       this.openedCards[next.query.section] = true;
  69 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsMenu.vue:27:3:
  25 | })
  26 | class SectionsMenu extends Vue {
> 27 |   get sections() { return SubjectsModule.currentSections; }
     |   ^
  28 | 
  29 |   scrollToSection(id) {
  30 |     const section = document.getElementById(`section-${id}`);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsMenu.vue:29:3:
  27 |   get sections() { return SubjectsModule.currentSections; }
  28 | 
> 29 |   scrollToSection(id) {
     |   ^
  30 |     const section = document.getElementById(`section-${id}`);
  31 | 
  32 |     if (section) {


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/SectionsMenu.vue:29:19:
  27 |   get sections() { return SubjectsModule.currentSections; }
  28 | 
> 29 |   scrollToSection(id) {
     |                   ^
  30 |     const section = document.getElementById(`section-${id}`);
  31 | 
  32 |     if (section) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:134:3:
  132 |   highlight = ""
  133 | 
> 134 |   get materials() { return this.topic.class_materials; }
      |   ^
  135 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
  136 |   get userId() { return UserModule.userId; }
  137 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:135:3:
  133 | 
  134 |   get materials() { return this.topic.class_materials; }
> 135 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
      |   ^
  136 |   get userId() { return UserModule.userId; }
  137 | 
  138 |   mounted() { this.onRouteChange(this.$route); }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:136:3:
  134 |   get materials() { return this.topic.class_materials; }
  135 |   get subjectOwnerId() { return SubjectsModule.currentSubject.user.id; }
> 136 |   get userId() { return UserModule.userId; }
      |   ^
  137 | 
  138 |   mounted() { this.onRouteChange(this.$route); }
  139 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:138:3:
  136 |   get userId() { return UserModule.userId; }
  137 | 
> 138 |   mounted() { this.onRouteChange(this.$route); }
      |   ^
  139 | 
  140 |   acceptNewTopic() {
  141 |     if (!this.topic.title) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:140:3:
  138 |   mounted() { this.onRouteChange(this.$route); }
  139 | 
> 140 |   acceptNewTopic() {
      |   ^
  141 |     if (!this.topic.title) {
  142 |       this.$message.warning("Пожалуйста, заполните название темы");
  143 |       return;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:160:3:
  158 |   }
  159 | 
> 160 |   deleteTopic() {
      |   ^
  161 |     this.$emit("delete", this.topic.id);
  162 |   }
  163 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:164:3:
  162 |   }
  163 | 
> 164 |   async deleteMaterial(id) {
      |   ^
  165 |     await this.$confirm(
  166 |       "Вы уверены, что хотите удалить материал? Это действие не обратимо.",
  167 |       "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:164:24:
  162 |   }
  163 | 
> 164 |   async deleteMaterial(id) {
      |                        ^
  165 |     await this.$confirm(
  166 |       "Вы уверены, что хотите удалить материал? Это действие не обратимо.",
  167 |       "Подтверждение",


warning: 'id' is defined but never used (@typescript-eslint/no-unused-vars) at src/components/@Subjects/SubjectPage/TopicCard.vue:164:24:
  162 |   }
  163 | 
> 164 |   async deleteMaterial(id) {
      |                        ^
  165 |     await this.$confirm(
  166 |       "Вы уверены, что хотите удалить материал? Это действие не обратимо.",
  167 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:177:3:
  175 | 
  176 |   @Watch("$route")
> 177 |   onRouteChange({ query: { topic, materialsType } }) {
      |   ^
  178 |     if (+topic === this.topic.id && materialsType) {
  179 |       this.openedMaterials[materialsType] = true;
  180 |       this.root.scrollIntoView({


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicCard.vue:177:17:
  175 | 
  176 |   @Watch("$route")
> 177 |   onRouteChange({ query: { topic, materialsType } }) {
      |                 ^
  178 |     if (+topic === this.topic.id && materialsType) {
  179 |       this.openedMaterials[materialsType] = true;
  180 |       this.root.scrollIntoView({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:77:3:
  75 |   topicsListLoaded = false
  76 | 
> 77 |   get topics() {
     |   ^
  78 |     if (!this.topicsListLoaded) {
  79 |       this.getTopics();
  80 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:85:3:
  83 |   }
  84 | 
> 85 |   get dragOptions() {
     |   ^
  86 |     return {
  87 |       animation: 200,
  88 |       group: "description",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:95:3:
  93 |   }
  94 | 
> 95 |   get disableDrag() {
     |   ^
  96 |     return !hasPermission([{
  97 |       codename: "sections-order.patch.all", // TODO: add sections-order.patch.self to BE and use validator with it on FE
  98 |       validator: () => this.userId === this.subjectOwnerId,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:102:3:
  100 |   }
  101 | 
> 102 |   getTopics() {
      |   ^
  103 |     getFetchRequest(
  104 |       () => getTopics(this.sectionId),
  105 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:113:3:
  111 |   }
  112 | 
> 113 |   async addTopic() {
      |   ^
  114 |     const res = await getAddRequest(
  115 |       addTopics,
  116 |       data => { this.topicsList = data; },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:144:3:
  142 |   }
  143 | 
> 144 |   editTopic({ id, ...newData }) {
      |   ^
  145 |     getEditRequest(
  146 |       editTopics,
  147 |       data => { this.topicsList = data; },


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:144:13:
  142 |   }
  143 | 
> 144 |   editTopic({ id, ...newData }) {
      |             ^
  145 |     getEditRequest(
  146 |       editTopics,
  147 |       data => { this.topicsList = data; },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:153:3:
  151 |   }
  152 | 
> 153 |   async deleteTopic(id) {
      |   ^
  154 |     await this.$confirm(
  155 |       "Вы уверены, что хотите удалить тему? Это действие не обратимо.",
  156 |       "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:153:21:
  151 |   }
  152 | 
> 153 |   async deleteTopic(id) {
      |                     ^
  154 |     await this.$confirm(
  155 |       "Вы уверены, что хотите удалить тему? Это действие не обратимо.",
  156 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:172:3:
  170 |   }
  171 | 
> 172 |   updateOrder(id, order) {
      |   ^
  173 |     getOrderChangeRequest(
  174 |       changeTopicOrder,
  175 |       data => { this.topicsList = data; },


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:172:15:
  170 |   }
  171 | 
> 172 |   updateOrder(id, order) {
      |               ^
  173 |     getOrderChangeRequest(
  174 |       changeTopicOrder,
  175 |       data => { this.topicsList = data; },


warning: Argument 'order' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectPage/TopicsCards.vue:172:19:
  170 |   }
  171 | 
> 172 |   updateOrder(id, order) {
      |                   ^
  173 |     getOrderChangeRequest(
  174 |       changeTopicOrder,
  175 |       data => { this.topicsList = data; },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectsPage/SubjectCard/index.vue:61:3:
  59 |     },
  60 |   },
> 61 |   data() {
     |   ^
  62 |     return {};
  63 |   },
  64 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectsPage/SubjectCard/index.vue:65:5:
  63 |   },
  64 |   methods: {
> 65 |     selectSubject(e) {
     |     ^
  66 |       if (e.target.nodeName === "IMG") { return; }
  67 |       this.$router.push({ path: `/discipline-control/subjects/${this.id}/` });
  68 |     },


warning: Argument 'e' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectsPage/SubjectCard/index.vue:65:19:
  63 |   },
  64 |   methods: {
> 65 |     selectSubject(e) {
     |                   ^
  66 |       if (e.target.nodeName === "IMG") { return; }
  67 |       this.$router.push({ path: `/discipline-control/subjects/${this.id}/` });
  68 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/@Subjects/SubjectsPage/SubjectsCards.vue:32:3:
  30 |   @Prop({ default: () => [] }) cards
  31 | 
> 32 |   get userId() { return UserModule.userId; }
     |   ^
  33 | }
  34 | 
  35 | export default Subjects;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/AZGuard.vue:10:16:
   8 |     permissions: {
   9 |       type: Array,
> 10 |       default: () => [],
     |                ^
  11 |     },
  12 |     disable: {
  13 |       type: Boolean,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/AZGuard.vue:18:5:
  16 |   },
  17 |   computed: {
> 18 |     isSuperuser() {
     |     ^
  19 |       return UserModule.isSuperuser;
  20 |     },
  21 |     disabled() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/AZGuard.vue:21:5:
  19 |       return UserModule.isSuperuser;
  20 |     },
> 21 |     disabled() {
     |     ^
  22 |       return this.disable && !hasPermission(this.permissions);
  23 |     },
  24 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/AZGuard.vue:25:3:
  23 |     },
  24 |   },
> 25 |   render() {
     |   ^
  26 |     return this.$scopedSlots.default
  27 |       && (this.disable || hasPermission(this.permissions))
  28 |       && !((this.permissions.length === 0) && hasPermission(["applicant.applicant.self"]))


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:320:3:
  318 |   },
  319 |   mixins: [AbsenceExcusesMixin, AbsenceStatusesMixin],
> 320 |   data() {
      |   ^
  321 |     return {
  322 |       dialogVisible: false,
  323 |       loading: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:395:5:
  393 |   },
  394 |   computed: {
> 395 |     milgroups() {
      |     ^
  396 |       return ReferenceModule.milgroups;
  397 |     },
  398 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:398:5:
  396 |       return ReferenceModule.milgroups;
  397 |     },
> 398 |     userMilfaculty() {
      |     ^
  399 |       return UserModule.personMilfaculty;
  400 |     },
  401 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:401:5:
  399 |       return UserModule.personMilfaculty;
  400 |     },
> 401 |     userMilgroups() {
      |     ^
  402 |       return UserModule.personMilgroups;
  403 |     },
  404 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:404:5:
  402 |       return UserModule.personMilgroups;
  403 |     },
> 404 |     userId() {
      |     ^
  405 |       return UserModule.personId;
  406 |     },
  407 |     fields() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:407:5:
  405 |       return UserModule.personId;
  406 |     },
> 407 |     fields() {
      |     ^
  408 |       return {
  409 |         excuse: {
  410 |           component: "select",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:444:3:
  442 |     },
  443 |   },
> 444 |   created() {
      |   ^
  445 |     this.onFilter();
  446 |   },
  447 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:448:5:
  446 |   },
  447 |   methods: {
> 448 |     getPermissions(method, data) {
      |     ^
  449 |       return [
  450 |         `absences.${method}.all`,
  451 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:448:20:
  446 |   },
  447 |   methods: {
> 448 |     getPermissions(method, data) {
      |                    ^
  449 |       return [
  450 |         `absences.${method}.all`,
  451 |         {


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:448:28:
  446 |   },
  447 |   methods: {
> 448 |     getPermissions(method, data) {
      |                            ^
  449 |       return [
  450 |         `absences.${method}.all`,
  451 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:464:5:
  462 |     },
  463 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 464 |     tagByExcuse(excuse) {
      |     ^
  465 |       switch (excuse) {
  466 |         case "IL":
  467 |           return "danger";


warning: Argument 'excuse' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:464:17:
  462 |     },
  463 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 464 |     tagByExcuse(excuse) {
      |                 ^
  465 |       switch (excuse) {
  466 |         case "IL":
  467 |           return "danger";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:475:5:
  473 |     },
  474 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 475 |     iconByAbsenceStatus(status) {
      |     ^
  476 |       switch (status) {
  477 |         case "OP":
  478 |           return "el-icon-circle-close";


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:475:25:
  473 |     },
  474 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 475 |     iconByAbsenceStatus(status) {
      |                         ^
  476 |       switch (status) {
  477 |         case "OP":
  478 |           return "el-icon-circle-close";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:484:5:
  482 |     },
  483 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 484 |     colorByAbsenceStatus(status) {
      |     ^
  485 |       switch (status) {
  486 |         case "OP":
  487 |           return "color: red;";


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:484:26:
  482 |     },
  483 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 484 |     colorByAbsenceStatus(status) {
      |                          ^
  485 |       switch (status) {
  486 |         case "OP":
  487 |           return "color: red;";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:492:16:
  490 |       }
  491 |     },
> 492 |     dateField: row => moment(row.date).format("DD.MM.YY"),
      |                ^
  493 |     async onFilter() {
  494 |       try {
  495 |         this.loading = true;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:492:16:
  490 |       }
  491 |     },
> 492 |     dateField: row => moment(row.date).format("DD.MM.YY"),
      |                ^
  493 |     async onFilter() {
  494 |       try {
  495 |         this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:493:5:
  491 |     },
  492 |     dateField: row => moment(row.date).format("DD.MM.YY"),
> 493 |     async onFilter() {
      |     ^
  494 |       try {
  495 |         this.loading = true;
  496 |         this.absences = (


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:513:5:
  511 |       }
  512 |     },
> 513 |     onEdit(row, fn) {
      |     ^
  514 |       this.editAbsence = { ...row };
  515 |       this.editAbsence.attachment = undefined;
  516 |       this.editAbsence.student = undefined;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:513:12:
  511 |       }
  512 |     },
> 513 |     onEdit(row, fn) {
      |            ^
  514 |       this.editAbsence = { ...row };
  515 |       this.editAbsence.attachment = undefined;
  516 |       this.editAbsence.student = undefined;


warning: Argument 'fn' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:513:17:
  511 |       }
  512 |     },
> 513 |     onEdit(row, fn) {
      |                 ^
  514 |       this.editAbsence = { ...row };
  515 |       this.editAbsence.attachment = undefined;
  516 |       this.editAbsence.student = undefined;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:520:5:
  518 |       this.dialogVisible = true;
  519 |     },
> 520 |     onAttachmentDownload(file) {
      |     ^
  521 |       window.open(file, "_blank");
  522 |     },
  523 |     onAttachmentUpload(id) {


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:520:26:
  518 |       this.dialogVisible = true;
  519 |     },
> 520 |     onAttachmentDownload(file) {
      |                          ^
  521 |       window.open(file, "_blank");
  522 |     },
  523 |     onAttachmentUpload(id) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:523:5:
  521 |       window.open(file, "_blank");
  522 |     },
> 523 |     onAttachmentUpload(id) {
      |     ^
  524 |       this.$refs.attachmentUpload.value = null;
  525 |       this.uploadAttachmentAbsenceId = id;
  526 |       this.$refs.attachmentUpload.click();


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:523:24:
  521 |       window.open(file, "_blank");
  522 |     },
> 523 |     onAttachmentUpload(id) {
      |                        ^
  524 |       this.$refs.attachmentUpload.value = null;
  525 |       this.uploadAttachmentAbsenceId = id;
  526 |       this.$refs.attachmentUpload.click();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:528:5:
  526 |       this.$refs.attachmentUpload.click();
  527 |     },
> 528 |     async onAttachmentPicked() {
      |     ^
  529 |       const formData = new FormData();
  530 |       if (this.$refs.attachmentUpload.files[0]) {
  531 |         formData.set("image", this.$refs.attachmentUpload.files[0]);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:542:5:
  540 |       }
  541 |     },
> 542 |     async onAttachmentDelete(id) {
      |     ^
  543 |       await this.$confirm(
  544 |         "Вы уверены, что хотите удалить приложение?",
  545 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:542:30:
  540 |       }
  541 |     },
> 542 |     async onAttachmentDelete(id) {
      |                              ^
  543 |       await this.$confirm(
  544 |         "Вы уверены, что хотите удалить приложение?",
  545 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:560:5:
  558 |       }
  559 |     },
> 560 |     async handleClose() {
      |     ^
  561 |       await this.$confirm(
  562 |         "Вы уверены, что хотите закрыть окно редактирования?",
  563 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:574:5:
  572 |       } catch {}
  573 |     },
> 574 |     handleAccept() {
      |     ^
  575 |       try {
  576 |         patchAbsence(this.editAbsence.id, this.editAbsence);
  577 |         patchSuccess("пропуска");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:584:5:
  582 |       }
  583 |     },
> 584 |     async handleDelete(id) {
      |     ^
  585 |       await this.$confirm(
  586 |         "Вы уверены, что хотите удалить пропуск?",
  587 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/Absence.vue:584:24:
  582 |       }
  583 |     },
> 584 |     async handleDelete(id) {
      |                        ^
  585 |       await this.$confirm(
  586 |         "Вы уверены, что хотите удалить пропуск?",
  587 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:184:3:
  182 |   components: { GenericForm },
  183 |   mixins: [AbsenceExcusesMixin, AbsenceStatusesMixin],
> 184 |   data() {
      |   ^
  185 |     return {
  186 |       WEEKDAYS,
  187 |       dialogVisible: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:259:5:
  257 |   },
  258 |   computed: {
> 259 |     milgroups() {
      |     ^
  260 |       return ReferenceModule.milgroups.filter(
  261 |         x => x.weekday === +this.filter.weekday,
  262 |       );


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:264:5:
  262 |       );
  263 |     },
> 264 |     userMilfaculty() {
      |     ^
  265 |       return UserModule.personMilfaculty;
  266 |     },
  267 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:267:5:
  265 |       return UserModule.personMilfaculty;
  266 |     },
> 267 |     userMilgroups() {
      |     ^
  268 |       return UserModule.personMilgroups;
  269 |     },
  270 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:271:5:
  269 |     },
  270 | 
> 271 |     fields() {
      |     ^
  272 |       return {
  273 |         excuse: {
  274 |           component: "select",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:308:5:
  306 |     },
  307 | 
> 308 |     tableData() {
      |     ^
  309 |       if (this.loading) {
  310 |         return [];
  311 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:334:3:
  332 |     },
  333 |   },
> 334 |   async created() {
      |   ^
  335 |     this.filter.weekday = moment().day() - 1;
  336 |     await this.onWeekdayChanged();
  337 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:339:5:
  337 |   },
  338 |   methods: {
> 339 |     getPermissions(method) {
      |     ^
  340 |       return [
  341 |         `absences.${method}.all`,
  342 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:339:20:
  337 |   },
  338 |   methods: {
> 339 |     getPermissions(method) {
      |                    ^
  340 |       return [
  341 |         `absences.${method}.all`,
  342 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:354:5:
  352 |       ];
  353 |     },
> 354 |     async onWeekdayChanged() {
      |     ^
  355 |       this.loading = true;
  356 |       this.filter.milgroup = this.milgroups.length
  357 |         ? this.milgroups[0].id.toString()


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:362:5:
  360 |     },
  361 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 362 |     tagByExcuse(excuse) {
      |     ^
  363 |       switch (excuse) {
  364 |         case "IL":
  365 |           return "danger";


warning: Argument 'excuse' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:362:17:
  360 |     },
  361 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 362 |     tagByExcuse(excuse) {
      |                 ^
  363 |       switch (excuse) {
  364 |         case "IL":
  365 |           return "danger";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:373:5:
  371 |     },
  372 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 373 |     iconByAbsenceStatus(status) {
      |     ^
  374 |       switch (status) {
  375 |         case "OP":
  376 |           return "el-icon-circle-close";


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:373:25:
  371 |     },
  372 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 373 |     iconByAbsenceStatus(status) {
      |                         ^
  374 |       switch (status) {
  375 |         case "OP":
  376 |           return "el-icon-circle-close";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:382:5:
  380 |     },
  381 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 382 |     colorByAbsenceStatus(status) {
      |     ^
  383 |       switch (status) {
  384 |         case "OP":
  385 |           return "color: red;";


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:382:26:
  380 |     },
  381 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 382 |     colorByAbsenceStatus(status) {
      |                          ^
  383 |       switch (status) {
  384 |         case "OP":
  385 |           return "color: red;";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:390:17:
  388 |       }
  389 |     },
> 390 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  391 |     onCreate(student, date) {
  392 |       this.editAbsence = { status: "OP", student: student.id, date };
  393 |       this.editAbsenceFullname = student.fullname;


warning: Argument 'd' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:390:17:
  388 |       }
  389 |     },
> 390 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  391 |     onCreate(student, date) {
  392 |       this.editAbsence = { status: "OP", student: student.id, date };
  393 |       this.editAbsenceFullname = student.fullname;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:391:5:
  389 |     },
  390 |     formatDate: d => moment(d).format("DD.MM.YY"),
> 391 |     onCreate(student, date) {
      |     ^
  392 |       this.editAbsence = { status: "OP", student: student.id, date };
  393 |       this.editAbsenceFullname = student.fullname;
  394 |       this.dialogVisible = true;


warning: Argument 'student' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:391:14:
  389 |     },
  390 |     formatDate: d => moment(d).format("DD.MM.YY"),
> 391 |     onCreate(student, date) {
      |              ^
  392 |       this.editAbsence = { status: "OP", student: student.id, date };
  393 |       this.editAbsenceFullname = student.fullname;
  394 |       this.dialogVisible = true;


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:391:23:
  389 |     },
  390 |     formatDate: d => moment(d).format("DD.MM.YY"),
> 391 |     onCreate(student, date) {
      |                       ^
  392 |       this.editAbsence = { status: "OP", student: student.id, date };
  393 |       this.editAbsenceFullname = student.fullname;
  394 |       this.dialogVisible = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:396:5:
  394 |       this.dialogVisible = true;
  395 |     },
> 396 |     onEdit(row, fn) {
      |     ^
  397 |       this.editAbsence = { ...row };
  398 |       this.editAbsence.student = undefined;
  399 |       this.editAbsenceFullname = fn;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:396:12:
  394 |       this.dialogVisible = true;
  395 |     },
> 396 |     onEdit(row, fn) {
      |            ^
  397 |       this.editAbsence = { ...row };
  398 |       this.editAbsence.student = undefined;
  399 |       this.editAbsenceFullname = fn;


warning: Argument 'fn' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:396:17:
  394 |       this.dialogVisible = true;
  395 |     },
> 396 |     onEdit(row, fn) {
      |                 ^
  397 |       this.editAbsence = { ...row };
  398 |       this.editAbsence.student = undefined;
  399 |       this.editAbsenceFullname = fn;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:402:5:
  400 |       this.dialogVisible = true;
  401 |     },
> 402 |     handleClose() {
      |     ^
  403 |       this.$confirm(
  404 |         "Вы уверены, что хотите закрыть окно редактирования?",
  405 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:416:5:
  414 |         });
  415 |     },
> 416 |     handleAccept() {
      |     ^
  417 |       if (this.editAbsence.id) {
  418 |         patchAbsence(this.editAbsence)
  419 |           .then(() => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:435:5:
  433 |       }
  434 |     },
> 435 |     handleDelete(id) {
      |     ^
  436 |       this.$confirm(
  437 |         "Вы уверены, что хотите удалить пропуск?",
  438 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:435:18:
  433 |       }
  434 |     },
> 435 |     handleDelete(id) {
      |                  ^
  436 |       this.$confirm(
  437 |         "Вы уверены, что хотите удалить пропуск?",
  438 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:453:5:
  451 |       });
  452 |     },
> 453 |     async onJournal() {
      |     ^
  454 |       if (this.filter.milgroup > 0) {
  455 |         try {
  456 |           this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:471:5:
  469 |       }
  470 |     },
> 471 |     getPreviewFields(data) {
      |     ^
  472 |       return {
  473 |         excuse: {
  474 |           component: "el-tag",


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Absence/AbsenceJournal/AbsenceJournal.vue:471:22:
  469 |       }
  470 |     },
> 471 |     getPreviewFields(data) {
      |                      ^
  472 |       return {
  473 |         excuse: {
  474 |           component: "el-tag",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:91:3:
  89 |   mixins: [StudentPostsMixin],
  90 | 
> 91 |   data() {
     |   ^
  92 |     return {
  93 |       approveList: [],
  94 |       roles: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:100:5:
   98 | 
   99 |   computed: {
> 100 |     loading() {
      |     ^
  101 |       return this.fetchingData;
  102 |     },
  103 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:105:3:
  103 |   },
  104 | 
> 105 |   async created() {
      |   ^
  106 |     this.fetchingData = true;
  107 | 
  108 |     let responses;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:129:5:
  127 | 
  128 |   methods: {
> 129 |     phoneNumberMixin(phoneNumber) {
      |     ^
  130 |       return "+".concat(phoneNumber);
  131 |     },
  132 |     async approve(student) {


warning: Argument 'phoneNumber' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:129:22:
  127 | 
  128 |   methods: {
> 129 |     phoneNumberMixin(phoneNumber) {
      |                      ^
  130 |       return "+".concat(phoneNumber);
  131 |     },
  132 |     async approve(student) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:132:5:
  130 |       return "+".concat(phoneNumber);
  131 |     },
> 132 |     async approve(student) {
      |     ^
  133 |       await this.$confirm(
  134 |         "Вы уверены? Отменить подтверждение регистрации нельзя.",
  135 |         "",


warning: Argument 'student' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveStudents.vue:132:19:
  130 |       return "+".concat(phoneNumber);
  131 |     },
> 132 |     async approve(student) {
      |                   ^
  133 |       await this.$confirm(
  134 |         "Вы уверены? Отменить подтверждение регистрации нельзя.",
  135 |         "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveTeachers.vue:139:3:
  137 |   mixins: [TeacherPostsMixin, TeacherRanksMixin],
  138 | 
> 139 |   data() {
      |   ^
  140 |     return {
  141 |       approveList: [],
  142 |       roles: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveTeachers.vue:148:5:
  146 | 
  147 |   computed: {
> 148 |     loading() {
      |     ^
  149 |       return this.teacherPostsAreLoading || this.teacherRanksAreLoading || this.fetchingData;
  150 |     },
  151 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveTeachers.vue:153:3:
  151 |   },
  152 | 
> 153 |   async created() {
      |   ^
  154 |     this.fetchingData = true;
  155 | 
  156 |     let responses;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveTeachers.vue:177:5:
  175 | 
  176 |   methods: {
> 177 |     async approve(teacher) {
      |     ^
  178 |       await this.$confirm(
  179 |         "Вы уверены? Отменить подтверждение регистрации нельзя.",
  180 |         "",


warning: Argument 'teacher' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Approve/ApproveTeachers.vue:177:19:
  175 | 
  176 |   methods: {
> 177 |     async approve(teacher) {
      |                   ^
  178 |       await this.$confirm(
  179 |         "Вы уверены? Отменить подтверждение регистрации нельзя.",
  180 |         "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:48:20:
  46 | import _cloneDeep from "lodash/cloneDeep";
  47 | 
> 48 | const capitalize = value => (value
     |                    ^
  49 |   ? value[0].toUpperCase() + value.slice(1).toLowerCase()
  50 |   : "");
  51 | 


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:48:20:
  46 | import _cloneDeep from "lodash/cloneDeep";
  47 | 
> 48 | const capitalize = value => (value
     |                    ^
  49 |   ? value[0].toUpperCase() + value.slice(1).toLowerCase()
  50 |   : "");
  51 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:151:3:
  149 |   }
  150 | 
> 151 |   onSubmit(e) {
      |   ^
  152 |     if (e) { e.preventDefault(); }
  153 | 
  154 |     const data = this.dataByTypes[this.type];


warning: Argument 'e' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:151:12:
  149 |   }
  150 | 
> 151 |   onSubmit(e) {
      |            ^
  152 |     if (e) { e.preventDefault(); }
  153 | 
  154 |     const data = this.dataByTypes[this.type];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:172:3:
  170 |   }
  171 | 
> 172 |   initEdit() {
      |   ^
  173 |     this.dataByTypes[this.type] = this.isEdit
  174 |       ? _cloneDeep(this.initState)
  175 |       : {};


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:180:3:
  178 |   }
  179 | 
> 180 |   onChange(field, formatter, value) {
      |   ^
  181 |     this.dataByTypes[this.type][field] = formatter
  182 |       ? formatter(value)
  183 |       : value;


warning: Argument 'field' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:180:12:
  178 |   }
  179 | 
> 180 |   onChange(field, formatter, value) {
      |            ^
  181 |     this.dataByTypes[this.type][field] = formatter
  182 |       ? formatter(value)
  183 |       : value;


warning: Argument 'formatter' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:180:19:
  178 |   }
  179 | 
> 180 |   onChange(field, formatter, value) {
      |                   ^
  181 |     this.dataByTypes[this.type][field] = formatter
  182 |       ? formatter(value)
  183 |       : value;


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:180:30:
  178 |   }
  179 | 
> 180 |   onChange(field, formatter, value) {
      |                              ^
  181 |     this.dataByTypes[this.type][field] = formatter
  182 |       ? formatter(value)
  183 |       : value;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:187:3:
  185 | 
  186 |   @Watch("initState", { deep: true })
> 187 |   onInitStateChange() { this.initEdit(); }
      |   ^
  188 | 
  189 |   @Watch("isEdit", { deep: true })
  190 |   onIsEditChange() { this.initEdit(); }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/Forms.vue:190:3:
  188 | 
  189 |   @Watch("isEdit", { deep: true })
> 190 |   onIsEditChange() { this.initEdit(); }
      |   ^
  191 | }
  192 | 
  193 | export default DictionariesForms;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:128:3:
  126 |   newItemData = null
  127 | 
> 128 |   get columnsByTypes() {
      |   ^
  129 |     return {
  130 |       milgroups: {
  131 |         title: { title: "Взвод", width: 100, editorType: "input" },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:194:3:
  192 |   }
  193 | 
> 194 |   get milfacultiesOptions() {
      |   ^
  195 |     return ReferenceModule.milfaculties.map(item => ({
  196 |       label: item.title,
  197 |       value: item.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:201:3:
  199 |   }
  200 | 
> 201 |   get columns() { return this.columnsByTypes[this.type]; }
      |   ^
  202 | 
  203 |   getOptionLabel(item, options) {
  204 |     const valuesArray = _isArray(item) ? item : [item];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:203:3:
  201 |   get columns() { return this.columnsByTypes[this.type]; }
  202 | 
> 203 |   getOptionLabel(item, options) {
      |   ^
  204 |     const valuesArray = _isArray(item) ? item : [item];
  205 | 
  206 |     return valuesArray.map(value => {


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:203:18:
  201 |   get columns() { return this.columnsByTypes[this.type]; }
  202 | 
> 203 |   getOptionLabel(item, options) {
      |                  ^
  204 |     const valuesArray = _isArray(item) ? item : [item];
  205 | 
  206 |     return valuesArray.map(value => {


warning: Argument 'options' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:203:24:
  201 |   get columns() { return this.columnsByTypes[this.type]; }
  202 | 
> 203 |   getOptionLabel(item, options) {
      |                        ^
  204 |     const valuesArray = _isArray(item) ? item : [item];
  205 | 
  206 |     return valuesArray.map(value => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:212:3:
  210 |   }
  211 | 
> 212 |   onEdit(data, field) {
      |   ^
  213 |     if (!data.newItem) {
  214 |       this.$emit("submitEdit", {
  215 |         id: data.id,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:212:10:
  210 |   }
  211 | 
> 212 |   onEdit(data, field) {
      |          ^
  213 |     if (!data.newItem) {
  214 |       this.$emit("submitEdit", {
  215 |         id: data.id,


warning: Argument 'field' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:212:16:
  210 |   }
  211 | 
> 212 |   onEdit(data, field) {
      |                ^
  213 |     if (!data.newItem) {
  214 |       this.$emit("submitEdit", {
  215 |         id: data.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:221:3:
  219 |   }
  220 | 
> 221 |   addToBuffer(data, field) {
      |   ^
  222 |     this.editBuffer = this.editBuffer || [];
  223 | 
  224 |     this.editBuffer.push({


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:221:15:
  219 |   }
  220 | 
> 221 |   addToBuffer(data, field) {
      |               ^
  222 |     this.editBuffer = this.editBuffer || [];
  223 | 
  224 |     this.editBuffer.push({


warning: Argument 'field' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:221:21:
  219 |   }
  220 | 
> 221 |   addToBuffer(data, field) {
      |                     ^
  222 |     this.editBuffer = this.editBuffer || [];
  223 | 
  224 |     this.editBuffer.push({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:250:3:
  248 |   }, 1500)
  249 | 
> 250 |   getNewItemInitData() {
      |   ^
  251 |     const fields = Object.keys(this.columns);
  252 | 
  253 |     const getInitValue = conf => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:266:3:
  264 |   }
  265 | 
> 266 |   startAdd() {
      |   ^
  267 |     this.newItemData = [this.getNewItemInitData()];
  268 |   }
  269 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:270:3:
  268 |   }
  269 | 
> 270 |   stopAdd() {
      |   ^
  271 |     this.newItemData = null;
  272 |   }
  273 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:274:3:
  272 |   }
  273 | 
> 274 |   addItem(data) {
      |   ^
  275 |     this.$emit("addItem", data);
  276 |     this.stopAdd();
  277 |   }


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/TableEditor.vue:274:11:
  272 |   }
  273 | 
> 274 |   addItem(data) {
      |           ^
  275 |     this.$emit("addItem", data);
  276 |     this.stopAdd();
  277 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:89:16:
  87 |     publishers: {
  88 |       label: "Издатели",
> 89 |       mapFunc: item => ({ title: item.name, id: item.id }),
     |                ^
  90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
  91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  92 |       add: PapersModule.addPublisher,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:89:16:
  87 |     publishers: {
  88 |       label: "Издатели",
> 89 |       mapFunc: item => ({ title: item.name, id: item.id }),
     |                ^
  90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
  91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  92 |       add: PapersModule.addPublisher,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:90:17:
  88 |       label: "Издатели",
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
> 90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
     |                 ^
  91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:90:18:
  88 |       label: "Издатели",
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
> 90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
     |                  ^
  91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:90:24:
  88 |       label: "Издатели",
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
> 90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
     |                        ^
  91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:91:19:
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
  90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
     |                   ^
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,
  94 |       edit: PapersModule.editPublisher,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:91:20:
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
  90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
     |                    ^
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,
  94 |       edit: PapersModule.editPublisher,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:91:26:
  89 |       mapFunc: item => ({ title: item.name, id: item.id }),
  90 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 91 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
     |                          ^
  92 |       add: PapersModule.addPublisher,
  93 |       delete: PapersModule.deletePublisher,
  94 |       edit: PapersModule.editPublisher,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:98:16:
   96 |     authors: {
   97 |       label: "Авторы",
>  98 |       mapFunc: item => ({
      |                ^
   99 |         id: item.id,
  100 |         title: [item.surname, item.name, item.patronymic].filter(Boolean).join(" "),
  101 |       }),


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:98:16:
   96 |     authors: {
   97 |       label: "Авторы",
>  98 |       mapFunc: item => ({
      |                ^
   99 |         id: item.id,
  100 |         title: [item.surname, item.name, item.patronymic].filter(Boolean).join(" "),
  101 |       }),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:102:17:
  100 |         title: [item.surname, item.name, item.patronymic].filter(Boolean).join(" "),
  101 |       }),
> 102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:102:18:
  100 |         title: [item.surname, item.name, item.patronymic].filter(Boolean).join(" "),
  101 |       }),
> 102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:102:24:
  100 |         title: [item.surname, item.name, item.patronymic].filter(Boolean).join(" "),
  101 |       }),
> 102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:103:19:
  101 |       }),
  102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,
  106 |       edit: PapersModule.editAuthors,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:103:20:
  101 |       }),
  102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,
  106 |       edit: PapersModule.editAuthors,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:103:26:
  101 |       }),
  102 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 103 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  104 |       add: PapersModule.addAuthor,
  105 |       delete: PapersModule.deleteAuthor,
  106 |       edit: PapersModule.editAuthors,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:110:17:
  108 |     categories: {
  109 |       label: "Категории",
> 110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:110:18:
  108 |     categories: {
  109 |       label: "Категории",
> 110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:110:24:
  108 |     categories: {
  109 |       label: "Категории",
> 110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:111:19:
  109 |       label: "Категории",
  110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,
  114 |       edit: PapersModule.editCategories,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:111:20:
  109 |       label: "Категории",
  110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,
  114 |       edit: PapersModule.editCategories,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:111:26:
  109 |       label: "Категории",
  110 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 111 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  112 |       add: PapersModule.addCategory,
  113 |       delete: PapersModule.deleteCategory,
  114 |       edit: PapersModule.editCategories,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:118:16:
  116 |     milgroups: {
  117 |       label: "Взвода",
> 118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
      |                ^
  119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
  120 |       filterFunc: (item, query) => {
  121 |         const stringItem = `${item.title} ${


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:118:16:
  116 |     milgroups: {
  117 |       label: "Взвода",
> 118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
      |                ^
  119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
  120 |       filterFunc: (item, query) => {
  121 |         const stringItem = `${item.title} ${


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:119:17:
  117 |       label: "Взвода",
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
> 119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  120 |       filterFunc: (item, query) => {
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:119:18:
  117 |       label: "Взвода",
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
> 119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  120 |       filterFunc: (item, query) => {
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:119:24:
  117 |       label: "Взвода",
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
> 119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  120 |       filterFunc: (item, query) => {
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:120:19:
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
  119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 120 |       filterFunc: (item, query) => {
      |                   ^
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title
  123 |         } ${WEEKDAYS[item.weekday]}`


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:120:20:
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
  119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 120 |       filterFunc: (item, query) => {
      |                    ^
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title
  123 |         } ${WEEKDAYS[item.weekday]}`


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:120:26:
  118 |       mapFunc: item => ({ ...item, milfaculty: item.milfaculty.id }),
  119 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 120 |       filterFunc: (item, query) => {
      |                          ^
  121 |         const stringItem = `${item.title} ${
  122 |           this.milfaculties.find(milfaculty => milfaculty.id === item.milfaculty).title
  123 |         } ${WEEKDAYS[item.weekday]}`


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:134:17:
  132 |     achievementTypes: {
  133 |       label: "Достижения",
> 134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:134:18:
  132 |     achievementTypes: {
  133 |       label: "Достижения",
> 134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:134:24:
  132 |     achievementTypes: {
  133 |       label: "Достижения",
> 134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:135:19:
  133 |       label: "Достижения",
  134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,
  138 |       edit: ReferenceModule.editAchievementType,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:135:20:
  133 |       label: "Достижения",
  134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,
  138 |       edit: ReferenceModule.editAchievementType,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:135:26:
  133 |       label: "Достижения",
  134 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 135 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  136 |       add: ReferenceModule.addAchievementType,
  137 |       delete: ReferenceModule.deleteAchievementType,
  138 |       edit: ReferenceModule.editAchievementType,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:142:16:
  140 |     milfaculties: {
  141 |       label: "Циклы",
> 142 |       mapFunc: item => ({
      |                ^
  143 |         id: item.id,
  144 |         title: item.title + (item.abbreviation ? ` (${item.abbreviation})` : ""),
  145 |       }),


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:142:16:
  140 |     milfaculties: {
  141 |       label: "Циклы",
> 142 |       mapFunc: item => ({
      |                ^
  143 |         id: item.id,
  144 |         title: item.title + (item.abbreviation ? ` (${item.abbreviation})` : ""),
  145 |       }),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:146:17:
  144 |         title: item.title + (item.abbreviation ? ` (${item.abbreviation})` : ""),
  145 |       }),
> 146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:146:18:
  144 |         title: item.title + (item.abbreviation ? ` (${item.abbreviation})` : ""),
  145 |       }),
> 146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:146:24:
  144 |         title: item.title + (item.abbreviation ? ` (${item.abbreviation})` : ""),
  145 |       }),
> 146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:147:19:
  145 |       }),
  146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,
  150 |       edit: ReferenceModule.editMilfaculty,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:147:20:
  145 |       }),
  146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,
  150 |       edit: ReferenceModule.editMilfaculty,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:147:26:
  145 |       }),
  146 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 147 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  148 |       add: ReferenceModule.addMilfaculty,
  149 |       delete: ReferenceModule.deleteMilfaculty,
  150 |       edit: ReferenceModule.editMilfaculty,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:154:17:
  152 |     milspecialties: {
  153 |       label: "Направления",
> 154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
      |                 ^
  155 |       filterFunc: (item, query) => {
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:154:18:
  152 |     milspecialties: {
  153 |       label: "Направления",
> 154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
      |                  ^
  155 |       filterFunc: (item, query) => {
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:154:24:
  152 |     milspecialties: {
  153 |       label: "Направления",
> 154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
      |                        ^
  155 |       filterFunc: (item, query) => {
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:155:19:
  153 |       label: "Направления",
  154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
> 155 |       filterFunc: (item, query) => {
      |                   ^
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")
  158 |           .reduce((memo, word) => memo && (!word || stringItem.includes(word)), true);


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:155:20:
  153 |       label: "Направления",
  154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
> 155 |       filterFunc: (item, query) => {
      |                    ^
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")
  158 |           .reduce((memo, word) => memo && (!word || stringItem.includes(word)), true);


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:155:26:
  153 |       label: "Направления",
  154 |       sortFunc: (left, right) => (left.code > right.code ? 1 : -1),
> 155 |       filterFunc: (item, query) => {
      |                          ^
  156 |         const stringItem = `${item.code} ${item.title}`.toLowerCase();
  157 |         return query.split(" ")
  158 |           .reduce((memo, word) => memo && (!word || stringItem.includes(word)), true);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:178:17:
  176 |     rooms: {
  177 |       label: "Аудитории",
> 178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:178:18:
  176 |     rooms: {
  177 |       label: "Аудитории",
> 178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:178:24:
  176 |     rooms: {
  177 |       label: "Аудитории",
> 178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:179:19:
  177 |       label: "Аудитории",
  178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,
  182 |       edit: ReferenceModule.editRoom,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:179:20:
  177 |       label: "Аудитории",
  178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,
  182 |       edit: ReferenceModule.editRoom,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:179:26:
  177 |       label: "Аудитории",
  178 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 179 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  180 |       add: ReferenceModule.addRoom,
  181 |       delete: ReferenceModule.deleteRoom,
  182 |       edit: ReferenceModule.editRoom,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:186:17:
  184 |     skills: {
  185 |       label: "Умения",
> 186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                 ^
  187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,


warning: Argument 'left' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:186:18:
  184 |     skills: {
  185 |       label: "Умения",
> 186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                  ^
  187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,


warning: Argument 'right' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:186:24:
  184 |     skills: {
  185 |       label: "Умения",
> 186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
      |                        ^
  187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:187:19:
  185 |       label: "Умения",
  186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                   ^
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,
  190 |       edit: ReferenceModule.editSkill,


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:187:20:
  185 |       label: "Умения",
  186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                    ^
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,
  190 |       edit: ReferenceModule.editSkill,


warning: Argument 'query' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:187:26:
  185 |       label: "Умения",
  186 |       sortFunc: (left, right) => (left.title > right.title ? 1 : -1),
> 187 |       filterFunc: (item, query) => item.title.toLowerCase().includes(query),
      |                          ^
  188 |       add: ReferenceModule.addSkill,
  189 |       delete: ReferenceModule.deleteSkill,
  190 |       edit: ReferenceModule.editSkill,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:196:3:
  194 |   currentTab = "publishers"
  195 | 
> 196 |   get tagsItems() {
      |   ^
  197 |     const { mapFunc, sortFunc, filterFunc } = this.tabs[this.currentTab];
  198 |     const data = (mapFunc
  199 |       ? this[this.currentTab].map(mapFunc)


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:211:3:
  209 |   }
  210 | 
> 211 |   get publishers() { return PapersModule.publishers; }
      |   ^
  212 |   get authors() { return PapersModule.authors; }
  213 |   get categories() { return PapersModule.categories; }
  214 |   get milgroups() { return ReferenceModule.milgroups; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:212:3:
  210 | 
  211 |   get publishers() { return PapersModule.publishers; }
> 212 |   get authors() { return PapersModule.authors; }
      |   ^
  213 |   get categories() { return PapersModule.categories; }
  214 |   get milgroups() { return ReferenceModule.milgroups; }
  215 |   get milfaculties() { return ReferenceModule.milfaculties; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:213:3:
  211 |   get publishers() { return PapersModule.publishers; }
  212 |   get authors() { return PapersModule.authors; }
> 213 |   get categories() { return PapersModule.categories; }
      |   ^
  214 |   get milgroups() { return ReferenceModule.milgroups; }
  215 |   get milfaculties() { return ReferenceModule.milfaculties; }
  216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:214:3:
  212 |   get authors() { return PapersModule.authors; }
  213 |   get categories() { return PapersModule.categories; }
> 214 |   get milgroups() { return ReferenceModule.milgroups; }
      |   ^
  215 |   get milfaculties() { return ReferenceModule.milfaculties; }
  216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }
  217 |   get milspecialties() { return ReferenceModule.milspecialties; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:215:3:
  213 |   get categories() { return PapersModule.categories; }
  214 |   get milgroups() { return ReferenceModule.milgroups; }
> 215 |   get milfaculties() { return ReferenceModule.milfaculties; }
      |   ^
  216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }
  217 |   get milspecialties() { return ReferenceModule.milspecialties; }
  218 |   get programs() { return ReferenceModule.programs; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:216:3:
  214 |   get milgroups() { return ReferenceModule.milgroups; }
  215 |   get milfaculties() { return ReferenceModule.milfaculties; }
> 216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }
      |   ^
  217 |   get milspecialties() { return ReferenceModule.milspecialties; }
  218 |   get programs() { return ReferenceModule.programs; }
  219 |   get rooms() { return ReferenceModule.rooms; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:217:3:
  215 |   get milfaculties() { return ReferenceModule.milfaculties; }
  216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }
> 217 |   get milspecialties() { return ReferenceModule.milspecialties; }
      |   ^
  218 |   get programs() { return ReferenceModule.programs; }
  219 |   get rooms() { return ReferenceModule.rooms; }
  220 |   get skills() { return ReferenceModule.skills; }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:218:3:
  216 |   get achievementTypes() { return ReferenceModule.achievementTypes; }
  217 |   get milspecialties() { return ReferenceModule.milspecialties; }
> 218 |   get programs() { return ReferenceModule.programs; }
      |   ^
  219 |   get rooms() { return ReferenceModule.rooms; }
  220 |   get skills() { return ReferenceModule.skills; }
  221 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:219:3:
  217 |   get milspecialties() { return ReferenceModule.milspecialties; }
  218 |   get programs() { return ReferenceModule.programs; }
> 219 |   get rooms() { return ReferenceModule.rooms; }
      |   ^
  220 |   get skills() { return ReferenceModule.skills; }
  221 | 
  222 |   async onDelete(id) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:220:3:
  218 |   get programs() { return ReferenceModule.programs; }
  219 |   get rooms() { return ReferenceModule.rooms; }
> 220 |   get skills() { return ReferenceModule.skills; }
      |   ^
  221 | 
  222 |   async onDelete(id) {
  223 |     await this.$confirm(


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:222:3:
  220 |   get skills() { return ReferenceModule.skills; }
  221 | 
> 222 |   async onDelete(id) {
      |   ^
  223 |     await this.$confirm(
  224 |       "Вы уверены, что хотите удалить?",
  225 |       "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:222:18:
  220 |   get skills() { return ReferenceModule.skills; }
  221 | 
> 222 |   async onDelete(id) {
      |                  ^
  223 |     await this.$confirm(
  224 |       "Вы уверены, что хотите удалить?",
  225 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:236:3:
  234 |   }
  235 | 
> 236 |   onStartEdit(id) {
      |   ^
  237 |     this.editingItemId = id;
  238 |     this.editingData = _omit(
  239 |       this[this.currentTab].find(item => item.id === id),


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:236:15:
  234 |   }
  235 | 
> 236 |   onStartEdit(id) {
      |               ^
  237 |     this.editingItemId = id;
  238 |     this.editingData = _omit(
  239 |       this[this.currentTab].find(item => item.id === id),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:244:3:
  242 |   }
  243 | 
> 244 |   onAbortEdit() {
      |   ^
  245 |     this.editingItemId = null;
  246 |     this.editingData = null;
  247 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:249:3:
  247 |   }
  248 | 
> 249 |   async onSubmitEdit(data) {
      |   ^
  250 |     const { edit } = this.tabs[this.currentTab];
  251 | 
  252 |     const res = await edit({


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:249:22:
  247 |   }
  248 | 
> 249 |   async onSubmitEdit(data) {
      |                      ^
  250 |     const { edit } = this.tabs[this.currentTab];
  251 | 
  252 |     const res = await edit({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:262:3:
  260 |   }
  261 | 
> 262 |   onTableEdit(data) {
      |   ^
  263 |     this.onStartEdit(data.id);
  264 |     this.onSubmitEdit(data);
  265 |     this.onAbortEdit();


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:262:15:
  260 |   }
  261 | 
> 262 |   onTableEdit(data) {
      |               ^
  263 |     this.onStartEdit(data.id);
  264 |     this.onSubmitEdit(data);
  265 |     this.onAbortEdit();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:268:3:
  266 |   }
  267 | 
> 268 |   onAddItem(data) {
      |   ^
  269 |     this.tabs[this.currentTab].add(data);
  270 |   }
  271 | 


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:268:13:
  266 |   }
  267 | 
> 268 |   onAddItem(data) {
      |             ^
  269 |     this.tabs[this.currentTab].add(data);
  270 |   }
  271 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/Dictionaries/index.vue:273:3:
  271 | 
  272 |   @Watch("currentTab")
> 273 |   onCurrentTabChange() {
      |   ^
  274 |     this.editingItemId = null;
  275 |     this.editingData = null;
  276 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:108:3:
  106 |   name: "RoleManagementComponent",
  107 |   components: { CustomText, ModalWindow },
> 108 |   data() {
      |   ^
  109 |     return {
  110 |       SIZES,
  111 |       windowModal: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:127:3:
  125 |     };
  126 |   },
> 127 |   created() {
      |   ^
  128 |     this.fetchData();
  129 |   },
  130 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:131:5:
  129 |   },
  130 |   methods: {
> 131 |     async deleteRoleHandler() {
      |     ^
  132 |       await this.$confirm(
  133 |         "Вы уверены, что хотите удалить роль?",
  134 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:149:5:
  147 |       }
  148 |     },
> 149 |     submitForm() {
      |     ^
  150 |       this.$refs.roleForm.validate(async valid => {
  151 |         if (valid) {
  152 |           if (await addRole(this.roleForm)) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:166:5:
  164 |       });
  165 |     },
> 166 |     closeModal() {
      |     ^
  167 |       this.subjectForm = {
  168 |         title: "",
  169 |       };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:172:5:
  170 |       this.windowModal = false;
  171 |     },
> 172 |     changeInRole(data) {
      |     ^
  173 |       if (hasPermission(["permissions.patch.all"])) {
  174 |         saveRoleChanges(this.roleId, data).catch(err => {
  175 |           this.$message.error("Ошибка редактирования данных о роли");


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:172:18:
  170 |       this.windowModal = false;
  171 |     },
> 172 |     changeInRole(data) {
      |                  ^
  173 |       if (hasPermission(["permissions.patch.all"])) {
  174 |         saveRoleChanges(this.roleId, data).catch(err => {
  175 |           this.$message.error("Ошибка редактирования данных о роли");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:182:5:
  180 |       }
  181 |     },
> 182 |     selectRoleHandler(roleId) {
      |     ^
  183 |       this.permissionLoading = true;
  184 |       getRolePermissions(roleId)
  185 |         .then(res => {


warning: Argument 'roleId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:182:23:
  180 |       }
  181 |     },
> 182 |     selectRoleHandler(roleId) {
      |                       ^
  183 |       this.permissionLoading = true;
  184 |       getRolePermissions(roleId)
  185 |         .then(res => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/RoleManagementComponent.vue:195:5:
  193 |         });
  194 |     },
> 195 |     async fetchData() {
      |     ^
  196 |       try {
  197 |         this.loading = true;
  198 |         this.options = (await getAllRoles()).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:140:3:
  138 |   }
  139 | 
> 140 |   get subjects() { return SubjectsModule.subjects; }
      |   ^
  141 | 
  142 |   submitForm(name) {
  143 |     this.$refs[name].validate(async valid => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:142:3:
  140 |   get subjects() { return SubjectsModule.subjects; }
  141 | 
> 142 |   submitForm(name) {
      |   ^
  143 |     this.$refs[name].validate(async valid => {
  144 |       if (valid) {
  145 |         if (await SubjectsModule.upsertSubject(this.subjectForm)) {


warning: Argument 'name' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:142:14:
  140 |   get subjects() { return SubjectsModule.subjects; }
  141 | 
> 142 |   submitForm(name) {
      |              ^
  143 |     this.$refs[name].validate(async valid => {
  144 |       if (valid) {
  145 |         if (await SubjectsModule.upsertSubject(this.subjectForm)) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:157:3:
  155 |   }
  156 | 
> 157 |   editSubject(id) {
      |   ^
  158 |     const { title, annotation } = this.subjects.find(
  159 |       subject => subject.id === id,
  160 |     );


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:157:15:
  155 |   }
  156 | 
> 157 |   editSubject(id) {
      |               ^
  158 |     const { title, annotation } = this.subjects.find(
  159 |       subject => subject.id === id,
  160 |     );


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:165:3:
  163 |   }
  164 | 
> 165 |   closeModal() {
      |   ^
  166 |     this.subjectForm = {
  167 |       id: null,
  168 |       title: "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:174:3:
  172 |   }
  173 | 
> 174 |   async deleteSubjectHandler(id) {
      |   ^
  175 |     await this.$confirm(
  176 |       "Вы уверены, что хотите удалить дисциплину? Это действие не обратимо. Это повлечет за собой удаление всех данных об оценках и расписании, связанных с этой дисциплиной.",
  177 |       "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/SubjectsControl.vue:174:30:
  172 |   }
  173 | 
> 174 |   async deleteSubjectHandler(id) {
      |                              ^
  175 |     await this.$confirm(
  176 |       "Вы уверены, что хотите удалить дисциплину? Это действие не обратимо. Это повлечет за собой удаление всех данных об оценках и расписании, связанных с этой дисциплиной.",
  177 |       "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:77:3:
  75 | export default {
  76 |   name: "UserManagementComponent",
> 77 |   data() {
     |   ^
  78 |     return {
  79 |       mode: "role",
  80 |       permissionData: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:90:3:
  88 |     };
  89 |   },
> 90 |   created() {
     |   ^
  91 |     this.fetchData();
  92 |   },
  93 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:94:5:
  92 |   },
  93 |   methods: {
> 94 |     selectMode(mode) {
     |     ^
  95 |       this.mode = mode;
  96 |     },
  97 |     changeInUserControl(data) {


warning: Argument 'mode' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:94:16:
  92 |   },
  93 |   methods: {
> 94 |     selectMode(mode) {
     |                ^
  95 |       this.mode = mode;
  96 |     },
  97 |     changeInUserControl(data) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:97:5:
   95 |       this.mode = mode;
   96 |     },
>  97 |     changeInUserControl(data) {
      |     ^
   98 |       if (hasPermission(["permissions.patch.all"])) {
   99 |         saveUserControl(this.userId, data).catch(err => {
  100 |           this.$message.error("Ошибка редактирования данных о пользователе");


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:97:25:
   95 |       this.mode = mode;
   96 |     },
>  97 |     changeInUserControl(data) {
      |                         ^
   98 |       if (hasPermission(["permissions.patch.all"])) {
   99 |         saveUserControl(this.userId, data).catch(err => {
  100 |           this.$message.error("Ошибка редактирования данных о пользователе");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:107:5:
  105 |       }
  106 |     },
> 107 |     selectUserHandler(userId) {
      |     ^
  108 |       this.permissionLoading = true;
  109 |       getUserPermissions(userId)
  110 |         .then(res => {


warning: Argument 'userId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:107:23:
  105 |       }
  106 |     },
> 107 |     selectUserHandler(userId) {
      |                       ^
  108 |       this.permissionLoading = true;
  109 |       getUserPermissions(userId)
  110 |         .then(res => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Apanel/UserManagementComponent.vue:137:5:
  135 |       }
  136 |     }, 500),
> 137 |     async fetchData() {
      |     ^
  138 |       try {
  139 |         this.roleData = (await getAllRoles()).data;
  140 |         this.permissionData = (await getAllPermissions()).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:76:3:
  74 |   mixins: [StudentPostsMixin],
  75 | 
> 76 |   data() {
     |   ^
  77 |     const requiredRule = {
  78 |       required: true,
  79 |       message: "Обязательное поле",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:139:5:
  137 | 
  138 |   computed: {
> 139 |     loading() {
      |     ^
  140 |       return this.awaitingResponse || this.studentPostsAreLoading;
  141 |     },
  142 |     milfaculties() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:142:5:
  140 |       return this.awaitingResponse || this.studentPostsAreLoading;
  141 |     },
> 142 |     milfaculties() {
      |     ^
  143 |       return ReferenceModule.milfaculties;
  144 |     },
  145 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:145:5:
  143 |       return ReferenceModule.milfaculties;
  144 |     },
> 145 |     milgroups() {
      |     ^
  146 |       return ReferenceModule.milgroups;
  147 |     },
  148 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:150:3:
  148 |   },
  149 | 
> 150 |   async created() {
      |   ^
  151 |     this.awaitingResponse = true;
  152 | 
  153 |     const responses = [];


warning: Missing space before value for key 'label' (key-spacing) at src/components/ApplicantToStudent/Student.vue:169:49:
  167 |     }
  168 | 
> 169 |     this.studentPosts.PRIVATE_STUDENT = { label:"-", value: null };
      |                                                 ^
  170 |   },
  171 | 
  172 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/Student.vue:173:5:
  171 | 
  172 |   methods: {
> 173 |     async registerStudent() {
      |     ^
  174 |       const isDataValid = await this.$refs.form.validate();
  175 |       if (!isDataValid) {
  176 |         return;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/index.vue:55:3:
  53 |   components: { Student },
  54 | 
> 55 |   data() {
     |   ^
  56 |     return {
  57 |       registrationComplete: false,
  58 |     };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ApplicantToStudent/index.vue:65:5:
  63 | 
  64 |   methods: {
> 65 |     registrationCompleted() {
     |     ^
  66 |       this.registrationComplete = true;
  67 |       setTimeout(() => {
  68 |         this.$router.replace({ name: "Login" });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:21:3:
  19 | 
  20 | export default {
> 21 |   data() {
     |   ^
  22 |     return {
  23 |       levelList: null,
  24 |     };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:27:5:
  25 |   },
  26 |   watch: {
> 27 |     $route() {
     |     ^
  28 |       this.getBreadcrumb();
  29 |     },
  30 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:31:3:
  29 |     },
  30 |   },
> 31 |   created() {
     |   ^
  32 |     this.getBreadcrumb();
  33 |   },
  34 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:35:5:
  33 |   },
  34 |   methods: {
> 35 |     getBreadcrumb() {
     |     ^
  36 |       // only show routes with meta.title
  37 |       const matched = this.$route.matched.filter(
  38 |         item => item.meta && item.meta.title,


warning: 'first' is assigned a value but never used (@typescript-eslint/no-unused-vars) at src/components/Breadcrumb/index.vue:40:13:
  38 |         item => item.meta && item.meta.title,
  39 |       );
> 40 |       const first = matched[0];
     |             ^
  41 | 
  42 |       // if (!this.isDashboard(first)) {
  43 |       //   matched = [{ path: '/myMaterials', meta: { title: 'Dashboard' }}].concat(matched)


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:50:5:
  48 |       );
  49 |     },
> 50 |     isDashboard(route) {
     |     ^
  51 |       const name = route && route.name;
  52 |       if (!name) {
  53 |         return false;


warning: Argument 'route' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:50:17:
  48 |       );
  49 |     },
> 50 |     isDashboard(route) {
     |                 ^
  51 |       const name = route && route.name;
  52 |       if (!name) {
  53 |         return false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:59:5:
  57 |       );
  58 |     },
> 59 |     pathCompile(path) {
     |     ^
  60 |       // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561
  61 |       const { params } = this.$route;
  62 |       const toPath = pathToRegexp.compile(path);


warning: Argument 'path' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:59:17:
  57 |       );
  58 |     },
> 59 |     pathCompile(path) {
     |                 ^
  60 |       // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561
  61 |       const { params } = this.$route;
  62 |       const toPath = pathToRegexp.compile(path);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:65:5:
  63 |       return toPath(params);
  64 |     },
> 65 |     handleLink(item) {
     |     ^
  66 |       const { redirect, path } = item;
  67 |       if (redirect) {
  68 |         this.$router.push(redirect);


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Breadcrumb/index.vue:65:16:
  63 |       return toPath(params);
  64 |     },
> 65 |     handleLink(item) {
     |                ^
  66 |       const { redirect, path } = item;
  67 |       if (redirect) {
  68 |         this.$router.push(redirect);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ChangePasswordForm/ChangePasswordForm.vue:65:3:
  63 |     inDialog: Boolean,
  64 |   },
> 65 |   data() {
     |   ^
  66 |     const validatePassword = (rule, value, callback) => {
  67 |       if (value.length < 6) {
  68 |         callback(new Error("Пароль должен содержать не менее 6 символов"));


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ChangePasswordForm/ChangePasswordForm.vue:97:3:
   95 |     };
   96 |   },
>  97 |   created() {
      |   ^
   98 |     if (!this.inDialog) {
   99 |       let { token } = this.$route.query;
  100 |       try {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ChangePasswordForm/ChangePasswordForm.vue:113:5:
  111 |   },
  112 |   methods: {
> 113 |     showPwd() {
      |     ^
  114 |       if (this.passwordType === "password") {
  115 |         this.passwordType = "";
  116 |       } else {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ChangePasswordForm/ChangePasswordForm.vue:123:5:
  121 |       });
  122 |     },
> 123 |     async handleChangePassword() {
      |     ^
  124 |       const valid = this.$refs.changePasswordForm.validate();
  125 |       if (!valid) {
  126 |         return false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Discipline.vue:38:5:
  36 |   methods: {
  37 |     hasPermission,
> 38 |     getPermissions(entity) {
     |     ^
  39 |       return [
  40 |         `${entity}.get.all`,
  41 |         `${entity}.get.milfaculty`,


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Discipline.vue:38:20:
  36 |   methods: {
  37 |     hasPermission,
> 38 |     getPermissions(entity) {
     |                    ^
  39 |       return [
  40 |         `${entity}.get.all`,
  41 |         `${entity}.get.milfaculty`,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:300:3:
  298 |   name: "Encouragement",
  299 |   mixins: [EncouragementTypesMixin],
> 300 |   data() {
      |   ^
  301 |     return {
  302 |       editEncouragement: {
  303 |         id: 0,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:355:5:
  353 |   },
  354 |   computed: {
> 355 |     milgroups() {
      |     ^
  356 |       return ReferenceModule.milgroups;
  357 |     },
  358 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:358:5:
  356 |       return ReferenceModule.milgroups;
  357 |     },
> 358 |     userMilfaculty() {
      |     ^
  359 |       return UserModule.personMilfaculty;
  360 |     },
  361 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:361:5:
  359 |       return UserModule.personMilfaculty;
  360 |     },
> 361 |     userMilgroups() {
      |     ^
  362 |       return UserModule.personMilgroups;
  363 |     },
  364 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:364:5:
  362 |       return UserModule.personMilgroups;
  363 |     },
> 364 |     userId() {
      |     ^
  365 |       return UserModule.personId;
  366 |     },
  367 |     usersPermissions() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:367:5:
  365 |       return UserModule.personId;
  366 |     },
> 367 |     usersPermissions() {
      |     ^
  368 |       return UserModule.permissions;
  369 |     },
  370 |     studentsFilter() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:370:5:
  368 |       return UserModule.permissions;
  369 |     },
> 370 |     studentsFilter() {
      |     ^
  371 |       if (
  372 |         this.usersPermissions.some(
  373 |           x => x.codename === "encouragements.post.milfaculty"


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:384:3:
  382 |     },
  383 |   },
> 384 |   created() {
      |   ^
  385 |     this.onFilter();
  386 |   },
  387 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:388:5:
  386 |   },
  387 |   methods: {
> 388 |     getPermissions(method, data) {
      |     ^
  389 |       return [
  390 |         `encouragements.${method}.all`,
  391 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:388:20:
  386 |   },
  387 |   methods: {
> 388 |     getPermissions(method, data) {
      |                    ^
  389 |       return [
  390 |         `encouragements.${method}.all`,
  391 |         {


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:388:28:
  386 |   },
  387 |   methods: {
> 388 |     getPermissions(method, data) {
      |                            ^
  389 |       return [
  390 |         `encouragements.${method}.all`,
  391 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:407:16:
  405 |       ];
  406 |     },
> 407 |     dateField: row => moment(row.date).format("DD.MM.YY"),
      |                ^
  408 |     onFilter() {
  409 |       getEncouragement({
  410 |         date_from:


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:407:16:
  405 |       ];
  406 |     },
> 407 |     dateField: row => moment(row.date).format("DD.MM.YY"),
      |                ^
  408 |     onFilter() {
  409 |       getEncouragement({
  410 |         date_from:


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:408:5:
  406 |     },
  407 |     dateField: row => moment(row.date).format("DD.MM.YY"),
> 408 |     onFilter() {
      |     ^
  409 |       getEncouragement({
  410 |         date_from:
  411 |           this.filter.dateRange !== null ? this.filter.dateRange[0] : null,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:424:5:
  422 |     },
  423 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 424 |     tagByEncouragementType(type) {
      |     ^
  425 |       switch (type) {
  426 |         case "EN":
  427 |           return "";


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:424:28:
  422 |     },
  423 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 424 |     tagByEncouragementType(type) {
      |                            ^
  425 |       switch (type) {
  426 |         case "EN":
  427 |           return "";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:434:5:
  432 |       }
  433 |     },
> 434 |     async onCreate() {
      |     ^
  435 |       this.editEncouragementFullname = "Новое поощрение";
  436 |       const { students, teachers } = getDisciplinePersonsFilters(
  437 |         "encouragements",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:453:5:
  451 |       this.dialogVisible = true;
  452 |     },
> 453 |     async onEdit(row) {
      |     ^
  454 |       this.editEncouragement = {
  455 |         ...row,
  456 |         student: row.student.id,


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:453:18:
  451 |       this.dialogVisible = true;
  452 |     },
> 453 |     async onEdit(row) {
      |                  ^
  454 |       this.editEncouragement = {
  455 |         ...row,
  456 |         student: row.student.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:472:5:
  470 |       this.dialogVisible = true;
  471 |     },
> 472 |     handleDelete(id) {
      |     ^
  473 |       this.$confirm(
  474 |         "Вы уверены, что хотите удалить поощрение?",
  475 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:472:18:
  470 |       this.dialogVisible = true;
  471 |     },
> 472 |     handleDelete(id) {
      |                  ^
  473 |       this.$confirm(
  474 |         "Вы уверены, что хотите удалить поощрение?",
  475 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:490:5:
  488 |       });
  489 |     },
> 490 |     handleClose() {
      |     ^
  491 |       this.$confirm(
  492 |         "Вы уверены, что хотите закрыть окно редактирования?",
  493 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Encouragement/Encouragement.vue:504:5:
  502 |         });
  503 |     },
> 504 |     handleAccept() {
      |     ^
  505 |       if (this.editEncouragement.id && this.editEncouragement.id > 0) {
  506 |         patchEncouragement(this.editEncouragement)
  507 |           .then(() => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:330:5:
  328 |   name: "Punishment",
  329 |   filters: {
> 330 |     typeFilter(value) {
      |     ^
  331 |       switch (value) {
  332 |         case "PU":
  333 |           return "Взыскание";


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:330:16:
  328 |   name: "Punishment",
  329 |   filters: {
> 330 |     typeFilter(value) {
      |                ^
  331 |       switch (value) {
  332 |         case "PU":
  333 |           return "Взыскание";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:342:3:
  340 |   },
  341 |   mixins: [PunishmentTypesMixin],
> 342 |   data() {
      |   ^
  343 |     return {
  344 |       editPunishment: {},
  345 |       editPunishmentFullname: null,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:390:5:
  388 |   },
  389 |   computed: {
> 390 |     milgroups() {
      |     ^
  391 |       return ReferenceModule.milgroups;
  392 |     },
  393 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:393:5:
  391 |       return ReferenceModule.milgroups;
  392 |     },
> 393 |     userMilfaculty() {
      |     ^
  394 |       return UserModule.personMilfaculty;
  395 |     },
  396 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:396:5:
  394 |       return UserModule.personMilfaculty;
  395 |     },
> 396 |     userMilgroups() {
      |     ^
  397 |       return UserModule.personMilgroups;
  398 |     },
  399 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:399:5:
  397 |       return UserModule.personMilgroups;
  398 |     },
> 399 |     userId() {
      |     ^
  400 |       return UserModule.personId;
  401 |     },
  402 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:403:3:
  401 |     },
  402 |   },
> 403 |   created() {
      |   ^
  404 |     this.onFilter();
  405 |   },
  406 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:407:5:
  405 |   },
  406 |   methods: {
> 407 |     getPermissions(method, data) {
      |     ^
  408 |       return [
  409 |         `punishments.${method}.all`,
  410 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:407:20:
  405 |   },
  406 |   methods: {
> 407 |     getPermissions(method, data) {
      |                    ^
  408 |       return [
  409 |         `punishments.${method}.all`,
  410 |         {


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:407:28:
  405 |   },
  406 |   methods: {
> 407 |     getPermissions(method, data) {
      |                            ^
  408 |       return [
  409 |         `punishments.${method}.all`,
  410 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:426:17:
  424 |       ];
  425 |     },
> 426 |     formatDate: row => moment(row.date).format("DD.MM.YY"),
      |                 ^
  427 |     formatRemoveDate: row => (row.remove_date ? moment(row.remove_date).format("DD.MM.YY") : null),
  428 |     onFilter() {
  429 |       getPunishment({


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:426:17:
  424 |       ];
  425 |     },
> 426 |     formatDate: row => moment(row.date).format("DD.MM.YY"),
      |                 ^
  427 |     formatRemoveDate: row => (row.remove_date ? moment(row.remove_date).format("DD.MM.YY") : null),
  428 |     onFilter() {
  429 |       getPunishment({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:427:23:
  425 |     },
  426 |     formatDate: row => moment(row.date).format("DD.MM.YY"),
> 427 |     formatRemoveDate: row => (row.remove_date ? moment(row.remove_date).format("DD.MM.YY") : null),
      |                       ^
  428 |     onFilter() {
  429 |       getPunishment({
  430 |         date_from:


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:427:23:
  425 |     },
  426 |     formatDate: row => moment(row.date).format("DD.MM.YY"),
> 427 |     formatRemoveDate: row => (row.remove_date ? moment(row.remove_date).format("DD.MM.YY") : null),
      |                       ^
  428 |     onFilter() {
  429 |       getPunishment({
  430 |         date_from:


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:428:5:
  426 |     formatDate: row => moment(row.date).format("DD.MM.YY"),
  427 |     formatRemoveDate: row => (row.remove_date ? moment(row.remove_date).format("DD.MM.YY") : null),
> 428 |     onFilter() {
      |     ^
  429 |       getPunishment({
  430 |         date_from:
  431 |           this.filter.dateRange !== null ? this.filter.dateRange[0] : null,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:443:5:
  441 |         .catch(err => getError("взысканий", err.response.status));
  442 |     },
> 443 |     tagByPunishmentType(type) {
      |     ^
  444 |       switch (type) {
  445 |         case "RE":
  446 |           return "danger";


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:443:25:
  441 |         .catch(err => getError("взысканий", err.response.status));
  442 |     },
> 443 |     tagByPunishmentType(type) {
      |                         ^
  444 |       switch (type) {
  445 |         case "RE":
  446 |           return "danger";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:451:5:
  449 |       }
  450 |     },
> 451 |     async onCreate() {
      |     ^
  452 |       this.editPunishmentFullname = "Новое взыскание";
  453 |       const { students, teachers } = getDisciplinePersonsFilters(
  454 |         "punishments",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:471:5:
  469 |       this.dialogVisible = true;
  470 |     },
> 471 |     async onEdit(row) {
      |     ^
  472 |       this.editPunishmentFullname = row.student.fullname;
  473 |       this.editPunishment = {
  474 |         ...row,


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:471:18:
  469 |       this.dialogVisible = true;
  470 |     },
> 471 |     async onEdit(row) {
      |                  ^
  472 |       this.editPunishmentFullname = row.student.fullname;
  473 |       this.editPunishment = {
  474 |         ...row,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:490:5:
  488 |       this.dialogVisible = true;
  489 |     },
> 490 |     handleDelete(id) {
      |     ^
  491 |       this.$confirm(
  492 |         "Вы уверены, что хотите удалить взыскание?",
  493 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:490:18:
  488 |       this.dialogVisible = true;
  489 |     },
> 490 |     handleDelete(id) {
      |                  ^
  491 |       this.$confirm(
  492 |         "Вы уверены, что хотите удалить взыскание?",
  493 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:508:5:
  506 |       });
  507 |     },
> 508 |     handleClose() {
      |     ^
  509 |       this.$confirm(
  510 |         "Вы уверены, что хотите закрыть окно редактирования?",
  511 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:522:5:
  520 |         });
  521 |     },
> 522 |     handleAccept() {
      |     ^
  523 |       if (this.editPunishment.id && this.editPunishment.id > 0) {
  524 |         patchPunishment(this.editPunishment)
  525 |           .then(() => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:541:5:
  539 |       }
  540 |     },
> 541 |     onRemove(punishment) {
      |     ^
  542 |       this.$confirm(
  543 |         "Вы уверены, что хотите снять взыскание?",
  544 |         "Подтверждение",


warning: Argument 'punishment' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:541:14:
  539 |       }
  540 |     },
> 541 |     onRemove(punishment) {
      |              ^
  542 |       this.$confirm(
  543 |         "Вы уверены, что хотите снять взыскание?",
  544 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Discipline/Punishment/Punishment.vue:563:5:
  561 |       });
  562 |     },
> 563 |     onRemovePunishmentCheckboxClick() {
      |     ^
  564 |       if (this.editPunishment.remove_date != null) {
  565 |         this.editPunishment.remove_date = null;
  566 |       } else {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ExpandBox/ExpandBox.vue:22:3:
  20 |     nonExpandable: { type: Boolean, default: false },
  21 |   },
> 22 |   data() {
     |   ^
  23 |     return {
  24 |       expanded: this.nonExpandable,
  25 |     };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ExpandBox/ExpandBox.vue:28:5:
  26 |   },
  27 |   methods: {
> 28 |     toggle() {
     |     ^
  29 |       if (!this.nonExpandable) {
  30 |         this.expanded = !this.expanded;
  31 |         this.$emit("toggled", this.expanded);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Hamburger/index.vue:27:5:
  25 |   },
  26 |   methods: {
> 27 |     toggleClick() {
     |     ^
  28 |       this.$emit("toggleClick");
  29 |     },
  30 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:116:3:
  114 |     onEdit: { type: Function, required: true },
  115 |   },
> 116 |   data() {
      |   ^
  117 |     return {
  118 |       SIZES,
  119 |       COLORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:124:5:
  122 |   },
  123 |   computed: {
> 124 |     authors() { return PapersModule.authors; },
      |     ^
  125 |     userId() { return UserModule.userId; },
  126 |   },
  127 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:125:5:
  123 |   computed: {
  124 |     authors() { return PapersModule.authors; },
> 125 |     userId() { return UserModule.userId; },
      |     ^
  126 |   },
  127 |   methods: {
  128 |     getAuthor(id) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:128:5:
  126 |   },
  127 |   methods: {
> 128 |     getAuthor(id) {
      |     ^
  129 |       const author = this.authors.find(item => item.id === id);
  130 |       return surnameWithInitials(author);
  131 |     },


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:128:15:
  126 |   },
  127 |   methods: {
> 128 |     getAuthor(id) {
      |               ^
  129 |       const author = this.authors.find(item => item.id === id);
  130 |       return surnameWithInitials(author);
  131 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:132:5:
  130 |       return surnameWithInitials(author);
  131 |     },
> 132 |     saveBook() {
      |     ^
  133 |       saveFavBook({ book: this.data.id, user: this.userId }).then(() => {
  134 |         // todo
  135 |         // eslint-disable-next-line vue/no-mutating-props


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Book.vue:139:5:
  137 |       });
  138 |     },
> 139 |     unsaveBook() {
      |     ^
  140 |       unsaveFavBook(this.data.id).then(() => {
  141 |         // todo
  142 |         // eslint-disable-next-line vue/no-mutating-props


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:127:3:
  125 |     },
  126 |   },
> 127 |   data() {
      |   ^
  128 |     return {
  129 |       SIZES,
  130 |       limit: 10,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:158:5:
  156 |   },
  157 |   computed: {
> 158 |     userId() { return UserModule.userId; },
      |     ^
  159 |     sort: {
  160 |       get() {
  161 |         return this.$route.query.sort || "-publication_year";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:160:7:
  158 |     userId() { return UserModule.userId; },
  159 |     sort: {
> 160 |       get() {
      |       ^
  161 |         return this.$route.query.sort || "-publication_year";
  162 |       },
  163 |       set(value) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:163:7:
  161 |         return this.$route.query.sort || "-publication_year";
  162 |       },
> 163 |       set(value) {
      |       ^
  164 |         this.$router.push({
  165 |           query: {
  166 |             ...this.$route.query,


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:163:11:
  161 |         return this.$route.query.sort || "-publication_year";
  162 |       },
> 163 |       set(value) {
      |           ^
  164 |         this.$router.push({
  165 |           query: {
  166 |             ...this.$route.query,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:173:7:
  171 |     },
  172 |     search: {
> 173 |       get() {
      |       ^
  174 |         return this.$route.query.search || "";
  175 |       },
  176 |       set(value) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:176:7:
  174 |         return this.$route.query.search || "";
  175 |       },
> 176 |       set(value) {
      |       ^
  177 |         this.$router.push({
  178 |           query: {
  179 |             ...this.$route.query,


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:176:11:
  174 |         return this.$route.query.search || "";
  175 |       },
> 176 |       set(value) {
      |           ^
  177 |         this.$router.push({
  178 |           query: {
  179 |             ...this.$route.query,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:187:5:
  185 |   },
  186 |   watch: {
> 187 |     isFavoriteBooks() {
      |     ^
  188 |       this.count = null;
  189 |       this.books = [];
  190 |       this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:192:5:
  190 |       this.fetchData();
  191 |     },
> 192 |     $route() {
      |     ^
  193 |       this.count = null;
  194 |       this.books = [];
  195 |       this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:198:3:
  196 |     },
  197 |   },
> 198 |   mounted() {
      |   ^
  199 |     this.fetchData();
  200 |   },
  201 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:202:5:
  200 |   },
  201 |   methods: {
> 202 |     loadMore() {
      |     ^
  203 |       if (!this.loading) {
  204 |         this.fetchData();
  205 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:207:5:
  205 |       }
  206 |     },
> 207 |     deleteFavBook(id) {
      |     ^
  208 |       if (this.isFavoriteBooks) {
  209 |         this.books = this.books.filter(item => item.id !== id);
  210 |       }


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:207:19:
  205 |       }
  206 |     },
> 207 |     deleteFavBook(id) {
      |                   ^
  208 |       if (this.isFavoriteBooks) {
  209 |         this.books = this.books.filter(item => item.id !== id);
  210 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:212:5:
  210 |       }
  211 |     },
> 212 |     fetchData() {
      |     ^
  213 |       if (this.books.length < this.count || this.count === null) {
  214 |         this.loading = true;
  215 |         const { author, subject, year } = this.$route.query;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:255:5:
  253 |       }
  254 |     },
> 255 |     addNewBook() {
      |     ^
  256 |       this.showModal = true;
  257 |       this.changingId = null;
  258 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:259:5:
  257 |       this.changingId = null;
  258 |     },
> 259 |     searchBook(value) {
      |     ^
  260 |       this.search = value;
  261 |     },
  262 |     deleteSearchInput() {


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:259:16:
  257 |       this.changingId = null;
  258 |     },
> 259 |     searchBook(value) {
      |                ^
  260 |       this.search = value;
  261 |     },
  262 |     deleteSearchInput() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:262:5:
  260 |       this.search = value;
  261 |     },
> 262 |     deleteSearchInput() {
      |     ^
  263 |       this.search = "";
  264 |     },
  265 |     clearHandler() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:265:5:
  263 |       this.search = "";
  264 |     },
> 265 |     clearHandler() {
      |     ^
  266 |       console.log("clearHandler func");
  267 |     },
  268 |     getInitBookData() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:268:5:
  266 |       console.log("clearHandler func");
  267 |     },
> 268 |     getInitBookData() {
      |     ^
  269 |       return {
  270 |         bookName: "",
  271 |         annotation: "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:281:5:
  279 |       };
  280 |     },
> 281 |     async onSave(data) {
      |     ^
  282 |       const { changingId } = this;
  283 |       const formData = new FormData();
  284 | 


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:281:18:
  279 |       };
  280 |     },
> 281 |     async onSave(data) {
      |                  ^
  282 |       const { changingId } = this;
  283 |       const formData = new FormData();
  284 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:343:5:
  341 |       }
  342 |     },
> 343 |     onBookEdit(item) {
      |     ^
  344 |       this.modalData = {
  345 |         authors: item.authors,
  346 |         publishers: item.publishers[0],


warning: Argument 'item' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:343:16:
  341 |       }
  342 |     },
> 343 |     onBookEdit(item) {
      |                ^
  344 |       this.modalData = {
  345 |         authors: item.authors,
  346 |         publishers: item.publishers[0],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/Library.vue:358:5:
  356 |       this.changingId = item.id;
  357 |     },
> 358 |     onClose() {
      |     ^
  359 |       this.showModal = false;
  360 |       this.modalData = this.getInitBookData();
  361 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:97:3:
   95 |     },
   96 |   },
>  97 |   data() {
      |   ^
   98 |     return {
   99 |       SIZES,
  100 |       COLORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:112:5:
  110 |   },
  111 |   computed: {
> 112 |     subjects() { return SubjectsModule.subjects; },
      |     ^
  113 |     authors() { return PapersModule.authors; },
  114 |   },
  115 |   created() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:113:5:
  111 |   computed: {
  112 |     subjects() { return SubjectsModule.subjects; },
> 113 |     authors() { return PapersModule.authors; },
      |     ^
  114 |   },
  115 |   created() {
  116 |     this.author = this.$route.query.author


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:115:3:
  113 |     authors() { return PapersModule.authors; },
  114 |   },
> 115 |   created() {
      |   ^
  116 |     this.author = this.$route.query.author
  117 |       ? Number(this.$route.query.author)
  118 |       : undefined;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:128:5:
  126 |   methods: {
  127 |     surnameWithInitials,
> 128 |     updateQuery() {
      |     ^
  129 |       const query = {
  130 |         author: this.author,
  131 |         subject: this.subject,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryFilters.vue:137:5:
  135 |       this.$router.push({ query: { ...this.$route.query, ...query } });
  136 |     },
> 137 |     clear() {
      |     ^
  138 |       this.author = undefined;
  139 |       this.subject = undefined;
  140 |       this.year = undefined;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:126:22:
  124 |     submitCallback: {
  125 |       type: Function,
> 126 |       default: () => () => ({}),
      |                      ^
  127 |     },
  128 |     opened: { type: Boolean, default: false },
  129 |     initData: { type: Object, required: true },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:132:3:
  130 |     isChanging: { type: Boolean, default: false },
  131 |   },
> 132 |   data() {
      |   ^
  133 |     const required = [{ required: true, message: "Обязательное поле" }];
  134 |     return {
  135 |       rules: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:146:5:
  144 |   },
  145 |   computed: {
> 146 |     subjects() {
      |     ^
  147 |       return SubjectsModule.subjects.map(subject => ({
  148 |         label: subject.title,
  149 |         value: subject.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:152:5:
  150 |       }));
  151 |     },
> 152 |     authors() {
      |     ^
  153 |       return PapersModule.authors.map(author => ({
  154 |         label: `${author.surname} ${author.name} ${author.patronymic}`,
  155 |         value: author.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:158:5:
  156 |       }));
  157 |     },
> 158 |     publishers() {
      |     ^
  159 |       return PapersModule.publishers.map(publisher => ({
  160 |         label: publisher.name,
  161 |         value: publisher.id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:166:5:
  164 |   },
  165 |   watch: {
> 166 |     initData(nextValue, prevValue) {
      |     ^
  167 |       if (!this.lodash.isEqual(nextValue, prevValue)) {
  168 |         this.formValues = this.lodash.cloneDeep(nextValue);
  169 |       }


warning: Argument 'nextValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:166:14:
  164 |   },
  165 |   watch: {
> 166 |     initData(nextValue, prevValue) {
      |              ^
  167 |       if (!this.lodash.isEqual(nextValue, prevValue)) {
  168 |         this.formValues = this.lodash.cloneDeep(nextValue);
  169 |       }


warning: Argument 'prevValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:166:25:
  164 |   },
  165 |   watch: {
> 166 |     initData(nextValue, prevValue) {
      |                         ^
  167 |       if (!this.lodash.isEqual(nextValue, prevValue)) {
  168 |         this.formValues = this.lodash.cloneDeep(nextValue);
  169 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:173:5:
  171 |   },
  172 |   methods: {
> 173 |     onSubmit() {
      |     ^
  174 |       this.$refs.form.validate(valid => {
  175 |         if (!valid || (!this.isChanging && !this.formValues.book.length)) { return false; }
  176 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Library/LibraryModal.vue:183:5:
  181 |       });
  182 |     },
> 183 |     close() {
      |     ^
  184 |       this.$emit("close-modal");
  185 |     },
  186 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:357:3:
  355 |   name: "Marks",
  356 |   mixins: [LessonTypesMixin],
> 357 |   data() {
      |   ^
  358 |     return {
  359 |       lessonDialogVisible: false,
  360 |       editLessonFullname: "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:437:5:
  435 |   },
  436 |   computed: {
> 437 |     rooms() {
      |     ^
  438 |       return ReferenceModule.rooms;
  439 |     },
  440 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:440:5:
  438 |       return ReferenceModule.rooms;
  439 |     },
> 440 |     milgroups() {
      |     ^
  441 |       return ReferenceModule.milgroups.filter(milgroup => UserModule.personMilgroups.indexOf(milgroup.id) > -1);
  442 |     },
  443 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:443:5:
  441 |       return ReferenceModule.milgroups.filter(milgroup => UserModule.personMilgroups.indexOf(milgroup.id) > -1);
  442 |     },
> 443 |     userMilfaculty() {
      |     ^
  444 |       return UserModule.personMilfaculty;
  445 |     },
  446 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:446:5:
  444 |       return UserModule.personMilfaculty;
  445 |     },
> 446 |     userMilgroups() {
      |     ^
  447 |       return UserModule.personMilgroups;
  448 |     },
  449 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:450:3:
  448 |     },
  449 |   },
> 450 |   async created() {
      |   ^
  451 |     await this.getSubjects();
  452 |     this.filter.subject_id = this.subjects[0].id;
  453 |     this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:458:5:
  456 |   methods: {
  457 |     hasPermission,
> 458 |     getPermissions(method, entity) {
      |     ^
  459 |       return [
  460 |         `${entity}.${method}.all`,
  461 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:458:20:
  456 |   methods: {
  457 |     hasPermission,
> 458 |     getPermissions(method, entity) {
      |                    ^
  459 |       return [
  460 |         `${entity}.${method}.all`,
  461 |         {


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:458:28:
  456 |   methods: {
  457 |     hasPermission,
> 458 |     getPermissions(method, entity) {
      |                            ^
  459 |       return [
  460 |         `${entity}.${method}.all`,
  461 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:471:5:
  469 |       ];
  470 |     },
> 471 |     getMarksByLesson(marks, lessonId) {
      |     ^
  472 |       const m = marks.find(x => x.lesson === lessonId);
  473 |       if (m) {
  474 |         return m.values;


warning: Argument 'marks' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:471:22:
  469 |       ];
  470 |     },
> 471 |     getMarksByLesson(marks, lessonId) {
      |                      ^
  472 |       const m = marks.find(x => x.lesson === lessonId);
  473 |       if (m) {
  474 |         return m.values;


warning: Argument 'lessonId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:471:29:
  469 |       ];
  470 |     },
> 471 |     getMarksByLesson(marks, lessonId) {
      |                             ^
  472 |       const m = marks.find(x => x.lesson === lessonId);
  473 |       if (m) {
  474 |         return m.values;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:478:17:
  476 |       return [];
  477 |     },
> 478 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  479 |     tagByLessonType(type) {
  480 |       switch (type) {
  481 |         case "LE":


warning: Argument 'd' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:478:17:
  476 |       return [];
  477 |     },
> 478 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  479 |     tagByLessonType(type) {
  480 |       switch (type) {
  481 |         case "LE":


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:479:5:
  477 |     },
  478 |     formatDate: d => moment(d).format("DD.MM.YY"),
> 479 |     tagByLessonType(type) {
      |     ^
  480 |       switch (type) {
  481 |         case "LE":
  482 |           return "primary";


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:479:21:
  477 |     },
  478 |     formatDate: d => moment(d).format("DD.MM.YY"),
> 479 |     tagByLessonType(type) {
      |                     ^
  480 |       switch (type) {
  481 |         case "LE":
  482 |           return "primary";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:497:5:
  495 |       }
  496 |     },
> 497 |     tagByMark(mark) {
      |     ^
  498 |       switch (mark) {
  499 |         case 5:
  500 |           return "primary";


warning: Argument 'mark' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:497:15:
  495 |       }
  496 |     },
> 497 |     tagByMark(mark) {
      |               ^
  498 |       switch (mark) {
  499 |         case 5:
  500 |           return "primary";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:511:5:
  509 |       }
  510 |     },
> 511 |     fetchData() {
      |     ^
  512 |       if (this.filter.mg > 0 && this.filter.subject_id > 0) {
  513 |         getMarkJournal({
  514 |           milgroup: this.filter.mg,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:525:5:
  523 |       }
  524 |     },
> 525 |     async getSubjects() {
      |     ^
  526 |       this.subjects = (await getSubjects()).data;
  527 |     },
  528 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:529:5:
  527 |     },
  528 | 
> 529 |     onCreate(student, lesson, mark) {
      |     ^
  530 |       if (student.marks.some(x => x.lesson === lesson.id)) {
  531 |         this.editMarkMethod = "PUT";
  532 |         this.editMarkId = mark.id;


warning: Argument 'student' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:529:14:
  527 |     },
  528 | 
> 529 |     onCreate(student, lesson, mark) {
      |              ^
  530 |       if (student.marks.some(x => x.lesson === lesson.id)) {
  531 |         this.editMarkMethod = "PUT";
  532 |         this.editMarkId = mark.id;


warning: Argument 'lesson' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:529:23:
  527 |     },
  528 | 
> 529 |     onCreate(student, lesson, mark) {
      |                       ^
  530 |       if (student.marks.some(x => x.lesson === lesson.id)) {
  531 |         this.editMarkMethod = "PUT";
  532 |         this.editMarkId = mark.id;


warning: Argument 'mark' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:529:31:
  527 |     },
  528 | 
> 529 |     onCreate(student, lesson, mark) {
      |                               ^
  530 |       if (student.marks.some(x => x.lesson === lesson.id)) {
  531 |         this.editMarkMethod = "PUT";
  532 |         this.editMarkId = mark.id;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:548:5:
  546 |       this.dialogVisible = true;
  547 |     },
> 548 |     onEdit(mark, student) {
      |     ^
  549 |       this.editMarkMethod = "PATCH";
  550 |       this.editMark = {
  551 |         value: mark.values[mark.values.length - 1],


warning: Argument 'mark' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:548:12:
  546 |       this.dialogVisible = true;
  547 |     },
> 548 |     onEdit(mark, student) {
      |            ^
  549 |       this.editMarkMethod = "PATCH";
  550 |       this.editMark = {
  551 |         value: mark.values[mark.values.length - 1],


warning: Argument 'student' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:548:18:
  546 |       this.dialogVisible = true;
  547 |     },
> 548 |     onEdit(mark, student) {
      |                  ^
  549 |       this.editMarkMethod = "PATCH";
  550 |       this.editMark = {
  551 |         value: mark.values[mark.values.length - 1],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:557:5:
  555 |       this.dialogVisible = true;
  556 |     },
> 557 |     handleClose() {
      |     ^
  558 |       this.$confirm(
  559 |         "Вы уверены, что хотите закрыть окно редактирования?",
  560 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:572:5:
  570 |         });
  571 |     },
> 572 |     handleAccept() {
      |     ^
  573 |       if (this.editMarkMethod === "PATCH") {
  574 |         patchMark(this.editMark, this.editMarkId)
  575 |           .then(() => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:599:5:
  597 |       }
  598 |     },
> 599 |     handleDelete(id) {
      |     ^
  600 |       this.$confirm("Вы уверены, что хотите удалить оценку?", "Подтверждение", {
  601 |         confirmButtonText: "Да",
  602 |         cancelButtonText: "Отмена",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:599:18:
  597 |       }
  598 |     },
> 599 |     handleDelete(id) {
      |                  ^
  600 |       this.$confirm("Вы уверены, что хотите удалить оценку?", "Подтверждение", {
  601 |         confirmButtonText: "Да",
  602 |         cancelButtonText: "Отмена",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:614:5:
  612 |       });
  613 |     },
> 614 |     onCreateLesson() {
      |     ^
  615 |       this.editLesson = {
  616 |         milgroup: this.filter.mg,
  617 |         subject: this.filter.subject_id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:624:5:
  622 |       this.lessonDialogVisible = true;
  623 |     },
> 624 |     onEditLesson(row) {
      |     ^
  625 |       this.editLesson = { ...row };
  626 |       this.editLesson.milgroup = this.editLesson.milgroup.id;
  627 |       this.editLesson.subject = this.editLesson.subject.id;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:624:18:
  622 |       this.lessonDialogVisible = true;
  623 |     },
> 624 |     onEditLesson(row) {
      |                  ^
  625 |       this.editLesson = { ...row };
  626 |       this.editLesson.milgroup = this.editLesson.milgroup.id;
  627 |       this.editLesson.subject = this.editLesson.subject.id;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:631:5:
  629 |       this.lessonDialogVisible = true;
  630 |     },
> 631 |     handleAcceptLesson() {
      |     ^
  632 |       if (this.editLesson.id) {
  633 |         patchLesson(this.editLesson)
  634 |           .then(() => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:652:5:
  650 |       }
  651 |     },
> 652 |     handleDeleteLesson(id) {
      |     ^
  653 |       this.$confirm(
  654 |         "Вы уверены, что хотите удалить занятие?",
  655 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:652:24:
  650 |       }
  651 |     },
> 652 |     handleDeleteLesson(id) {
      |                        ^
  653 |       this.$confirm(
  654 |         "Вы уверены, что хотите удалить занятие?",
  655 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Marks/Marks.vue:670:5:
  668 |       });
  669 |     },
> 670 |     openDrawer() {
      |     ^
  671 |       this.drawer = true;
  672 |       // fetch data
  673 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:22:5:
  20 |   },
  21 |   watch: {
> 22 |     opened(val) {
     |     ^
  23 |       this.toggleScroll(val);
  24 |     },
  25 |   },


warning: Argument 'val' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:22:12:
  20 |   },
  21 |   watch: {
> 22 |     opened(val) {
     |            ^
  23 |       this.toggleScroll(val);
  24 |     },
  25 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:26:3:
  24 |     },
  25 |   },
> 26 |   mounted() {
     |   ^
  27 |     this.toggleScroll(this.opened);
  28 |   },
  29 |   destroyed() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:29:3:
  27 |     this.toggleScroll(this.opened);
  28 |   },
> 29 |   destroyed() {
     |   ^
  30 |     this.toggleScroll(false);
  31 |   },
  32 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:33:5:
  31 |   },
  32 |   methods: {
> 33 |     stopScrolling() {
     |     ^
  34 |       document.getElementById("main-container").classList.add("stop-scrolling");
  35 |     },
  36 |     startScrolling() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:36:5:
  34 |       document.getElementById("main-container").classList.add("stop-scrolling");
  35 |     },
> 36 |     startScrolling() {
     |     ^
  37 |       document
  38 |         .getElementById("main-container")
  39 |         .classList.remove("stop-scrolling");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:41:5:
  39 |         .classList.remove("stop-scrolling");
  40 |     },
> 41 |     closeModal() {
     |     ^
  42 |       this.$emit("close-modal");
  43 |     },
  44 |     toggleScroll(opened) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:44:5:
  42 |       this.$emit("close-modal");
  43 |     },
> 44 |     toggleScroll(opened) {
     |     ^
  45 |       if (opened) {
  46 |         this.stopScrolling();
  47 |       } else {


warning: Argument 'opened' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/ModalWindow/ModalWindow.vue:44:18:
  42 |       this.$emit("close-modal");
  43 |     },
> 44 |     toggleScroll(opened) {
     |                  ^
  45 |       if (opened) {
  46 |         this.stopScrolling();
  47 |       } else {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDisciplines.vue:59:3:
  57 |   loading = false
  58 | 
> 59 |   created() {
     |   ^
  60 |     this.fetchData();
  61 |   }
  62 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDisciplines.vue:63:3:
  61 |   }
  62 | 
> 63 |   fetchData() {
     |   ^
  64 |     this.loading = true;
  65 |     getSubjects({ user: this.userId }).then(res => {
  66 |       this.mySubjects = res.data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:28:3:
  26 |     UpsertModal,
  27 |   },
> 28 |   data() {
     |   ^
  29 |     return {
  30 |       paperAction: "",
  31 |       paperToEdit: {},


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:35:5:
  33 |   },
  34 |   methods: {
> 35 |     startScrolling() {
     |     ^
  36 |       document
  37 |         .getElementById("main-container")
  38 |         .classList.remove("stop-scrolling");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:40:5:
  38 |         .classList.remove("stop-scrolling");
  39 |     },
> 40 |     stopScrolling() {
     |     ^
  41 |       document.getElementById("main-container").classList.add("stop-scrolling");
  42 |     },
  43 |     openPaperModal(action, paperToEdit = {}) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:43:5:
  41 |       document.getElementById("main-container").classList.add("stop-scrolling");
  42 |     },
> 43 |     openPaperModal(action, paperToEdit = {}) {
     |     ^
  44 |       this.paperAction = action;
  45 |       this.paperToEdit = paperToEdit;
  46 |       this.stopScrolling();


warning: Argument 'action' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:43:20:
  41 |       document.getElementById("main-container").classList.add("stop-scrolling");
  42 |     },
> 43 |     openPaperModal(action, paperToEdit = {}) {
     |                    ^
  44 |       this.paperAction = action;
  45 |       this.paperToEdit = paperToEdit;
  46 |       this.stopScrolling();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/MyDocuments.vue:49:5:
  47 |     },
  48 |     // Any modal (paper or category)
> 49 |     closeModal() {
     |     ^
  50 |       this.paperAction = "";
  51 |       this.paperToEdit = {};
  52 |       this.addNewCategory = false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/Statistics.vue:40:3:
  38 |     CustomText,
  39 |   },
> 40 |   data() {
     |   ^
  41 |     return {
  42 |       SIZES,
  43 |       COLORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/Statistics.vue:53:5:
  51 |   },
  52 |   computed: {
> 53 |     userId() { return UserModule.userId; },
     |     ^
  54 |   },
  55 |   created() {
  56 |     this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/Statistics.vue:55:3:
  53 |     userId() { return UserModule.userId; },
  54 |   },
> 55 |   created() {
     |   ^
  56 |     this.fetchData();
  57 |   },
  58 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/MyMaterials/Statistics.vue:59:5:
  57 |   },
  58 |   methods: {
> 59 |     fetchData() {
     |     ^
  60 |       if (hasPermission(["statistics.get.self"])) {
  61 |         getStatistics(this.userId)
  62 |           .then(res => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:160:3:
  158 |   addNewCategory = false
  159 | 
> 160 |   get categories() { return [...PapersModule.categories]; }
      |   ^
  161 | 
  162 |   created() {
  163 |     this.selectCategory(this.categories[0]);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:162:3:
  160 |   get categories() { return [...PapersModule.categories]; }
  161 | 
> 162 |   created() {
      |   ^
  163 |     this.selectCategory(this.categories[0]);
  164 |   }
  165 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:166:3:
  164 |   }
  165 | 
> 166 |   startScrolling() {
      |   ^
  167 |     document
  168 |       .getElementById("main-container")
  169 |       .classList.remove("stop-scrolling");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:172:3:
  170 |   }
  171 | 
> 172 |   stopScrolling() {
      |   ^
  173 |     document.getElementById("main-container").classList.add("stop-scrolling");
  174 |   }
  175 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:176:3:
  174 |   }
  175 | 
> 176 |   openPaperModal(action, paperToEdit = {}) {
      |   ^
  177 |     this.paperAction = action;
  178 |     this.paperToEdit = paperToEdit;
  179 |     this.stopScrolling();


warning: Argument 'action' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:176:18:
  174 |   }
  175 | 
> 176 |   openPaperModal(action, paperToEdit = {}) {
      |                  ^
  177 |     this.paperAction = action;
  178 |     this.paperToEdit = paperToEdit;
  179 |     this.stopScrolling();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:182:3:
  180 |   }
  181 | 
> 182 |   closeModal() {
      |   ^
  183 |     this.paperAction = "";
  184 |     this.paperToEdit = {};
  185 |     this.addNewCategory = false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:189:3:
  187 |   }
  188 | 
> 189 |   rotateArrow() {
      |   ^
  190 |     const arrow = document.getElementById("dark-arrow");
  191 |     if (arrow) {
  192 |       arrow.style.transform = this.modalCategories


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:198:3:
  196 |   }
  197 | 
> 198 |   closeCategorySelector() {
      |   ^
  199 |     this.modalCategories = false;
  200 |     this.rotateArrow();
  201 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:203:3:
  201 |   }
  202 | 
> 203 |   toggleCategorySelector() {
      |   ^
  204 |     this.modalCategories = !this.modalCategories;
  205 |     this.rotateArrow();
  206 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:208:3:
  206 |   }
  207 | 
> 208 |   async deleteCategory(id) {
      |   ^
  209 |     await this.$confirm("Вы уверены?", "Подтвердите действие", {
  210 |       confirmButtonText: "Удалить",
  211 |       cancelButtonText: "Отменить",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:208:24:
  206 |   }
  207 | 
> 208 |   async deleteCategory(id) {
      |                        ^
  209 |     await this.$confirm("Вы уверены?", "Подтвердите действие", {
  210 |       confirmButtonText: "Удалить",
  211 |       cancelButtonText: "Отменить",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:220:3:
  218 |   }
  219 | 
> 220 |   addNewPaperCategory() {
      |   ^
  221 |     this.addNewCategory = true;
  222 |   }
  223 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:224:3:
  222 |   }
  223 | 
> 224 |   selectCategory(category) {
      |   ^
  225 |     if (!category) { return; }
  226 | 
  227 |     this.category = category;


warning: Argument 'category' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:224:18:
  222 |   }
  223 | 
> 224 |   selectCategory(category) {
      |                  ^
  225 |     if (!category) { return; }
  226 | 
  227 |     this.category = category;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:239:3:
  237 | 
  238 |   @Watch("categories")
> 239 |   onCategoriesChange(next) {
      |   ^
  240 |     if (!this.category.id) {
  241 |       ([this.category] = next);
  242 |       this.$router.replace({


warning: Argument 'next' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Papers.vue:239:22:
  237 | 
  238 |   @Watch("categories")
> 239 |   onCategoriesChange(next) {
      |                      ^
  240 |     if (!this.category.id) {
  241 |       ([this.category] = next);
  242 |       this.$router.replace({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:146:5:
  144 |   components: { DownloadFile },
  145 |   filters: {
> 146 |     moment(date) {
      |     ^
  147 |       return moment(date).format("DD MMMM YYYY");
  148 |     },
  149 |   },


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:146:12:
  144 |   components: { DownloadFile },
  145 |   filters: {
> 146 |     moment(date) {
      |            ^
  147 |       return moment(date).format("DD MMMM YYYY");
  148 |     },
  149 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:157:3:
  155 |     },
  156 |   },
> 157 |   data() {
      |   ^
  158 |     return {
  159 |       count: null,
  160 |       limit: 10,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:167:5:
  165 |   },
  166 |   computed: {
> 167 |     userId() { return UserModule.userId; },
      |     ^
  168 |     authors() { return PapersModule.authors; },
  169 |     publishers() { return PapersModule.publishers; },
  170 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:168:5:
  166 |   computed: {
  167 |     userId() { return UserModule.userId; },
> 168 |     authors() { return PapersModule.authors; },
      |     ^
  169 |     publishers() { return PapersModule.publishers; },
  170 |   },
  171 |   watch: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:169:5:
  167 |     userId() { return UserModule.userId; },
  168 |     authors() { return PapersModule.authors; },
> 169 |     publishers() { return PapersModule.publishers; },
      |     ^
  170 |   },
  171 |   watch: {
  172 |     $route() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:172:5:
  170 |   },
  171 |   watch: {
> 172 |     $route() {
      |     ^
  173 |       this.count = null;
  174 |       this.documents = [];
  175 |       this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:178:3:
  176 |     },
  177 |   },
> 178 |   async mounted() {
      |   ^
  179 |     await this.fetchData();
  180 |     EventBus.$on("UPDATE_EVENT", () => {
  181 |       this.documents = [];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:187:5:
  185 |   methods: {
  186 |     moment,
> 187 |     getAuthor(id) {
      |     ^
  188 |       const author = this.authors.find(item => item.id === id);
  189 |       if (author) {
  190 |         return surnameWithInitials(author);


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:187:15:
  185 |   methods: {
  186 |     moment,
> 187 |     getAuthor(id) {
      |               ^
  188 |       const author = this.authors.find(item => item.id === id);
  189 |       if (author) {
  190 |         return surnameWithInitials(author);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:194:5:
  192 |       return "";
  193 |     },
> 194 |     publisherNames(ids) {
      |     ^
  195 |       return this.publishers
  196 |         .filter(p => ids.includes(p.id))
  197 |         .map(p => p.name)


warning: Argument 'ids' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:194:20:
  192 |       return "";
  193 |     },
> 194 |     publisherNames(ids) {
      |                    ^
  195 |       return this.publishers
  196 |         .filter(p => ids.includes(p.id))
  197 |         .map(p => p.name)


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:200:5:
  198 |         .join(", ");
  199 |     },
> 200 |     loadMore() {
      |     ^
  201 |       if (!this.loading) {
  202 |         this.fetchData();
  203 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:205:5:
  203 |       }
  204 |     },
> 205 |     yearChanged(index) {
      |     ^
  206 |       if (index === 0) {
  207 |         return true;
  208 |       }


warning: Argument 'index' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:205:17:
  203 |       }
  204 |     },
> 205 |     yearChanged(index) {
      |                 ^
  206 |       if (index === 0) {
  207 |         return true;
  208 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:216:5:
  214 |     },
  215 | 
> 216 |     year(document) {
      |     ^
  217 |       return moment(document.publication_date).year();
  218 |     },
  219 | 


warning: Argument 'document' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:216:10:
  214 |     },
  215 | 
> 216 |     year(document) {
      |          ^
  217 |       return moment(document.publication_date).year();
  218 |     },
  219 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:220:5:
  218 |     },
  219 | 
> 220 |     async toggleBinStatus(id, status) {
      |     ^
  221 |       try {
  222 |         const data = { is_binned: status };
  223 |         const formData = new FormData();


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:220:27:
  218 |     },
  219 | 
> 220 |     async toggleBinStatus(id, status) {
      |                           ^
  221 |       try {
  222 |         const data = { is_binned: status };
  223 |         const formData = new FormData();


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:220:31:
  218 |     },
  219 | 
> 220 |     async toggleBinStatus(id, status) {
      |                               ^
  221 |       try {
  222 |         const data = { is_binned: status };
  223 |         const formData = new FormData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:243:5:
  241 |     },
  242 | 
> 243 |     removePaperFromList(id) {
      |     ^
  244 |       this.documents = this.lodash.filter(
  245 |         this.documents,
  246 |         paper => paper.id !== id,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:243:25:
  241 |     },
  242 | 
> 243 |     removePaperFromList(id) {
      |                         ^
  244 |       this.documents = this.lodash.filter(
  245 |         this.documents,
  246 |         paper => paper.id !== id,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:251:5:
  249 |     },
  250 | 
> 251 |     editPaper(id) {
      |     ^
  252 |       const paperToEdit = this.documents.find(paper => paper.id === id);
  253 |       this.$emit("openPaperModal", "edit", paperToEdit);
  254 |     },


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:251:15:
  249 |     },
  250 | 
> 251 |     editPaper(id) {
      |               ^
  252 |       const paperToEdit = this.documents.find(paper => paper.id === id);
  253 |       this.$emit("openPaperModal", "edit", paperToEdit);
  254 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:256:5:
  254 |     },
  255 | 
> 256 |     async deletePaper(id) {
      |     ^
  257 |       await this.$confirm("Вы уверены?", "Подтвердите действие", {
  258 |         confirmButtonText: "Удалить",
  259 |         cancelButtonText: "Отменить",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:256:23:
  254 |     },
  255 | 
> 256 |     async deletePaper(id) {
      |                       ^
  257 |       await this.$confirm("Вы уверены?", "Подтвердите действие", {
  258 |         confirmButtonText: "Удалить",
  259 |         cancelButtonText: "Отменить",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/Serp.vue:279:5:
  277 |     },
  278 | 
> 279 |     async fetchData() {
      |     ^
  280 |       if (!this.$route.query.category && !this.isMyDocuments) {
  281 |         return;
  282 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:138:16:
  136 |     paper: {
  137 |       type: Object,
> 138 |       default: () => ({}),
      |                ^
  139 |     },
  140 |     action: {
  141 |       type: String,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:143:18:
  141 |       type: String,
  142 |       required: true,
> 143 |       validator: value => ["add", "edit"].indexOf(value) > -1,
      |                  ^
  144 |     },
  145 |   },
  146 | 


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:143:18:
  141 |       type: String,
  142 |       required: true,
> 143 |       validator: value => ["add", "edit"].indexOf(value) > -1,
      |                  ^
  144 |     },
  145 |   },
  146 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:147:3:
  145 |   },
  146 | 
> 147 |   data() {
      |   ^
  148 |     const { paper } = this;
  149 |     const empty = isEmpty(paper);
  150 |     const paperForm = empty


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:177:5:
  175 | 
  176 |   computed: {
> 177 |     authors() { return PapersModule.authors; },
      |     ^
  178 |     categories() { return PapersModule.categories; },
  179 |     publishers() { return PapersModule.publishers; },
  180 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:178:5:
  176 |   computed: {
  177 |     authors() { return PapersModule.authors; },
> 178 |     categories() { return PapersModule.categories; },
      |     ^
  179 |     publishers() { return PapersModule.publishers; },
  180 | 
  181 |     today() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:179:5:
  177 |     authors() { return PapersModule.authors; },
  178 |     categories() { return PapersModule.categories; },
> 179 |     publishers() { return PapersModule.publishers; },
      |     ^
  180 | 
  181 |     today() {
  182 |       return moment().format(this.dateFormat.toUpperCase());


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:181:5:
  179 |     publishers() { return PapersModule.publishers; },
  180 | 
> 181 |     today() {
      |     ^
  182 |       return moment().format(this.dateFormat.toUpperCase());
  183 |     },
  184 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:189:5:
  187 |     surnameWithInitials,
  188 | 
> 189 |     async submitForm(name) {
      |     ^
  190 |       let formValid = this.paperForm.files.length > 0;
  191 |       // eslint-disable-next-line no-bitwise
  192 |       this.$refs[name].validate(valid => { formValid &= valid; });


warning: Argument 'name' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:189:22:
  187 |     surnameWithInitials,
  188 | 
> 189 |     async submitForm(name) {
      |                      ^
  190 |       let formValid = this.paperForm.files.length > 0;
  191 |       // eslint-disable-next-line no-bitwise
  192 |       this.$refs[name].validate(valid => { formValid &= valid; });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:219:5:
  217 |     },
  218 | 
> 219 |     handleChange(_, fileList) {
      |     ^
  220 |       this.paperForm.files = fileList;
  221 |     },
  222 |     handleExceed() {


warning: Argument '_' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:219:18:
  217 |     },
  218 | 
> 219 |     handleChange(_, fileList) {
      |                  ^
  220 |       this.paperForm.files = fileList;
  221 |     },
  222 |     handleExceed() {


warning: Argument 'fileList' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:219:21:
  217 |     },
  218 | 
> 219 |     handleChange(_, fileList) {
      |                     ^
  220 |       this.paperForm.files = fileList;
  221 |     },
  222 |     handleExceed() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:222:5:
  220 |       this.paperForm.files = fileList;
  221 |     },
> 222 |     handleExceed() {
      |     ^
  223 |       this.$message.warning("Вы можете приложить только один файл");
  224 |     },
  225 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:226:5:
  224 |     },
  225 | 
> 226 |     beforeRemove(file) {
      |     ^
  227 |       return this.$confirm(`Удалить ${file.name}?`);
  228 |     },
  229 |     handleRemove(_, fileList) {


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:226:18:
  224 |     },
  225 | 
> 226 |     beforeRemove(file) {
      |                  ^
  227 |       return this.$confirm(`Удалить ${file.name}?`);
  228 |     },
  229 |     handleRemove(_, fileList) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:229:5:
  227 |       return this.$confirm(`Удалить ${file.name}?`);
  228 |     },
> 229 |     handleRemove(_, fileList) {
      |     ^
  230 |       this.paperForm.files = fileList;
  231 |     },
  232 | 


warning: Argument '_' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:229:18:
  227 |       return this.$confirm(`Удалить ${file.name}?`);
  228 |     },
> 229 |     handleRemove(_, fileList) {
      |                  ^
  230 |       this.paperForm.files = fileList;
  231 |     },
  232 | 


warning: Argument 'fileList' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:229:21:
  227 |       return this.$confirm(`Удалить ${file.name}?`);
  228 |     },
> 229 |     handleRemove(_, fileList) {
      |                     ^
  230 |       this.paperForm.files = fileList;
  231 |     },
  232 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Papers/UpsertModal.vue:233:5:
  231 |     },
  232 | 
> 233 |     closeModal() {
      |     ^
  234 |       this.$emit("closeModal");
  235 |     },
  236 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Personnel.vue:46:5:
  44 |   methods: {
  45 |     hasPermission,
> 46 |     getPermissions(entity) {
     |     ^
  47 |       return [
  48 |         `${entity}.get.all`,
  49 |         `${entity}.get.milfaculty`,


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Personnel.vue:46:20:
  44 |   methods: {
  45 |     hasPermission,
> 46 |     getPermissions(entity) {
     |                    ^
  47 |       return [
  48 |         `${entity}.get.all`,
  49 |         `${entity}.get.milfaculty`,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:71:3:
  69 |     ChangePasswordForm,
  70 |   },
> 71 |   data() {
     |   ^
  72 |     return {
  73 |       dialog: false,
  74 |       student: {},


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:78:5:
  76 |   },
  77 |   computed: {
> 78 |     personType() {
     |     ^
  79 |       return UserModule.personType;
  80 |     },
  81 |     personId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:81:5:
  79 |       return UserModule.personType;
  80 |     },
> 81 |     personId() {
     |     ^
  82 |       return UserModule.personId;
  83 |     },
  84 |     id() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:84:5:
  82 |       return UserModule.personId;
  83 |     },
> 84 |     id() {
     |     ^
  85 |       return this.$route.params.studentId;
  86 |     },
  87 |     isProfile() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:87:5:
  85 |       return this.$route.params.studentId;
  86 |     },
> 87 |     isProfile() {
     |     ^
  88 |       return this.personType === "student" && this.personId === +this.id;
  89 |     },
  90 |     fullname() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:90:5:
  88 |       return this.personType === "student" && this.personId === +this.id;
  89 |     },
> 90 |     fullname() {
     |     ^
  91 |       return this.student.fullname;
  92 |     },
  93 |     milgroup() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:93:5:
  91 |       return this.student.fullname;
  92 |     },
> 93 |     milgroup() {
     |     ^
  94 |       return this.student.milgroup;
  95 |     },
  96 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:97:3:
   95 |     },
   96 |   },
>  97 |   async created() {
      |   ^
   98 |     this.student = (await findStudent(this.id)).data;
   99 |   },
  100 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:101:5:
   99 |   },
  100 |   methods: {
> 101 |     backToPersonnel() {
      |     ^
  102 |       this.$router.push({ name: "Personnel" });
  103 |     },
  104 |     async beforeClose() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/Student.vue:104:5:
  102 |       this.$router.push({ name: "Personnel" });
  103 |     },
> 104 |     async beforeClose() {
      |     ^
  105 |       try {
  106 |         await this.$confirm(
  107 |           "Вы уверены, что хотите закрыть окно смены пароля?",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:222:16:
  220 |     milgroup: {
  221 |       type: Object,
> 222 |       default: () => ({}),
      |                ^
  223 |     },
  224 |   },
  225 |   data() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:225:3:
  223 |     },
  224 |   },
> 225 |   data() {
      |   ^
  226 |     return {
  227 |       achievements: [],
  228 |       skills: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:237:5:
  235 |   },
  236 |   computed: {
> 237 |     id() {
      |     ^
  238 |       return this.$route.params.studentId;
  239 |     },
  240 |     skillsOptions() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:240:5:
  238 |       return this.$route.params.studentId;
  239 |     },
> 240 |     skillsOptions() {
      |     ^
  241 |       return ReferenceModule.skills;
  242 |     },
  243 |     achievementTypes() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:243:5:
  241 |       return ReferenceModule.skills;
  242 |     },
> 243 |     achievementTypes() {
      |     ^
  244 |       return ReferenceModule.achievementTypes;
  245 |     },
  246 |     skillsOptionsFiltered() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:246:5:
  244 |       return ReferenceModule.achievementTypes;
  245 |     },
> 246 |     skillsOptionsFiltered() {
      |     ^
  247 |       return this.skillsOptions.filter(
  248 |         x => !this.skills.some(y => x.id === y),
  249 |       );


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:251:5:
  249 |       );
  250 |     },
> 251 |     userMilfaculty() {
      |     ^
  252 |       return UserModule.personMilfaculty;
  253 |     },
  254 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:254:5:
  252 |       return UserModule.personMilfaculty;
  253 |     },
> 254 |     userMilgroups() {
      |     ^
  255 |       return UserModule.personMilgroups;
  256 |     },
  257 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:257:5:
  255 |       return UserModule.personMilgroups;
  256 |     },
> 257 |     userId() {
      |     ^
  258 |       return UserModule.personId;
  259 |     },
  260 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:263:5:
  261 |   methods: {
  262 |     hasPermission,
> 263 |     getSkillsPermissions() {
      |     ^
  264 |       return [
  265 |         "students.patch.all",
  266 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:280:16:
  278 |       ];
  279 |     },
> 280 |     dateField: row => (moment(row.date).isValid()
      |                ^
  281 |       ? moment(row.date).format("DD.MM.YYYY")
  282 |       : "---"),
  283 |     tagVariantByType(type) {


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:280:16:
  278 |       ];
  279 |     },
> 280 |     dateField: row => (moment(row.date).isValid()
      |                ^
  281 |       ? moment(row.date).format("DD.MM.YYYY")
  282 |       : "---"),
  283 |     tagVariantByType(type) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:283:5:
  281 |       ? moment(row.date).format("DD.MM.YYYY")
  282 |       : "---"),
> 283 |     tagVariantByType(type) {
      |     ^
  284 |       switch (type) {
  285 |         case "Спортивные":
  286 |           return "danger";


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:283:22:
  281 |       ? moment(row.date).format("DD.MM.YYYY")
  282 |       : "---"),
> 283 |     tagVariantByType(type) {
      |                      ^
  284 |       switch (type) {
  285 |         case "Спортивные":
  286 |           return "danger";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:293:5:
  291 |       }
  292 |     },
> 293 |     async fetchInfo() {
      |     ^
  294 |       try {
  295 |         this.loading = true;
  296 |         this.achievements = (await getAchievement({ student: this.id })).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:307:5:
  305 |       }
  306 |     },
> 307 |     async toggled(expanded) {
      |     ^
  308 |       if (expanded) {
  309 |         await this.fetchInfo();
  310 |       }


warning: Argument 'expanded' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:307:19:
  305 |       }
  306 |     },
> 307 |     async toggled(expanded) {
      |                   ^
  308 |       if (expanded) {
  309 |         await this.fetchInfo();
  310 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:313:5:
  311 |     },
  312 | 
> 313 |     async handleClose(removedSkill) {
      |     ^
  314 |       const skills = this.skills.filter(x => x !== removedSkill);
  315 |       await this.updateSkills(skills);
  316 |     },


warning: Argument 'removedSkill' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:313:23:
  311 |     },
  312 | 
> 313 |     async handleClose(removedSkill) {
      |                       ^
  314 |       const skills = this.skills.filter(x => x !== removedSkill);
  315 |       await this.updateSkills(skills);
  316 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:317:5:
  315 |       await this.updateSkills(skills);
  316 |     },
> 317 |     showSelect() {
      |     ^
  318 |       this.selectVisible = true;
  319 |       this.$nextTick(() => {
  320 |         this.$refs.newSkillSelect.focus();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:323:5:
  321 |       });
  322 |     },
> 323 |     async handleSelectConfirm() {
      |     ^
  324 |       const { newSkillValue } = this;
  325 |       if (newSkillValue) {
  326 |         const skills = [...this.skills, newSkillValue];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:332:5:
  330 |       this.newSkillValue = "";
  331 |     },
> 332 |     async updateSkills(skills) {
      |     ^
  333 |       await patchStudent({ id: this.id, student_skills: skills });
  334 |       this.skills = skills;
  335 |     },


warning: Argument 'skills' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:332:24:
  330 |       this.newSkillValue = "";
  331 |     },
> 332 |     async updateSkills(skills) {
      |                        ^
  333 |       await patchStudent({ id: this.id, student_skills: skills });
  334 |       this.skills = skills;
  335 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:337:5:
  335 |     },
  336 | 
> 337 |     showDialog() {
      |     ^
  338 |       this.dialogVisible = true;
  339 |       this.editAchievement = { student: this.id };
  340 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:341:5:
  339 |       this.editAchievement = { student: this.id };
  340 |     },
> 341 |     async handleAccept() {
      |     ^
  342 |       try {
  343 |         this.loading = true;
  344 |         await postAchievement(this.editAchievement);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:353:5:
  351 |       }
  352 |     },
> 353 |     async handleDelete(id) {
      |     ^
  354 |       try {
  355 |         this.loading = true;
  356 |         await deleteAchievement(id);


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentAchievements/StudentAchievements.vue:353:24:
  351 |       }
  352 |     },
> 353 |     async handleDelete(id) {
      |                        ^
  354 |       try {
  355 |         this.loading = true;
  356 |         await deleteAchievement(id);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:88:3:
  86 |   name: "StudentDiscipline",
  87 |   components: { ExpandBox },
> 88 |   data() {
     |   ^
  89 |     return {
  90 |       encouragements: [],
  91 |       currentPunishments: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:97:5:
   95 |   },
   96 |   computed: {
>  97 |     id() {
      |     ^
   98 |       return this.$route.params.studentId;
   99 |     },
  100 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:102:16:
  100 |   },
  101 |   methods: {
> 102 |     dateField: row => moment(row.date).format("DD.MM.YYYY"),
      |                ^
  103 |     async fetchInfo() {
  104 |       try {
  105 |         this.loading = true;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:102:16:
  100 |   },
  101 |   methods: {
> 102 |     dateField: row => moment(row.date).format("DD.MM.YYYY"),
      |                ^
  103 |     async fetchInfo() {
  104 |       try {
  105 |         this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:103:5:
  101 |   methods: {
  102 |     dateField: row => moment(row.date).format("DD.MM.YYYY"),
> 103 |     async fetchInfo() {
      |     ^
  104 |       try {
  105 |         this.loading = true;
  106 |         this.encouragements = (


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:121:5:
  119 |       }
  120 |     },
> 121 |     async toggled(expanded) {
      |     ^
  122 |       if (expanded) {
  123 |         await this.fetchInfo();
  124 |       }


warning: Argument 'expanded' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentDiscipline/StudentDiscipline.vue:121:19:
  119 |       }
  120 |     },
> 121 |     async toggled(expanded) {
      |                   ^
  122 |       if (expanded) {
  123 |         await this.fetchInfo();
  124 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:228:16:
  226 |     milgroup: {
  227 |       type: Object,
> 228 |       default: () => ({}),
      |                ^
  229 |     },
  230 |   },
  231 |   data() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:231:3:
  229 |     },
  230 |   },
> 231 |   data() {
      |   ^
  232 |     return {
  233 |       CAMPUSES,
  234 |       modify: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:248:5:
  246 |   },
  247 |   computed: {
> 248 |     programs() {
      |     ^
  249 |       return ReferenceModule.programs;
  250 |     },
  251 |     milspecialties() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:251:5:
  249 |       return ReferenceModule.programs;
  250 |     },
> 251 |     milspecialties() {
      |     ^
  252 |       return ReferenceModule.milspecialties;
  253 |     },
  254 |     id() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:254:5:
  252 |       return ReferenceModule.milspecialties;
  253 |     },
> 254 |     id() {
      |     ^
  255 |       return this.$route.params.studentId;
  256 |     },
  257 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:257:5:
  255 |       return this.$route.params.studentId;
  256 |     },
> 257 |     userMilfaculty() {
      |     ^
  258 |       return UserModule.personMilfaculty;
  259 |     },
  260 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:260:5:
  258 |       return UserModule.personMilfaculty;
  259 |     },
> 260 |     userMilgroups() {
      |     ^
  261 |       return UserModule.personMilgroups;
  262 |     },
  263 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:263:5:
  261 |       return UserModule.personMilgroups;
  262 |     },
> 263 |     userId() {
      |     ^
  264 |       return UserModule.personId;
  265 |     },
  266 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:267:3:
  265 |     },
  266 |   },
> 267 |   async mounted() {
      |   ^
  268 |     await this.fetch();
  269 |     if (this.displayInfo.passport === null && this.displayInfo.citizenship === "") {
  270 |       this.show = false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:276:17:
  274 |   },
  275 |   methods: {
> 276 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
      |                 ^
  277 |     async fetch() {
  278 |       await this.fetchInfo();
  279 |     },


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:276:17:
  274 |   },
  275 |   methods: {
> 276 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
      |                 ^
  277 |     async fetch() {
  278 |       await this.fetchInfo();
  279 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:277:5:
  275 |   methods: {
  276 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
> 277 |     async fetch() {
      |     ^
  278 |       await this.fetchInfo();
  279 |     },
  280 |     async fetchInfo() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:280:5:
  278 |       await this.fetchInfo();
  279 |     },
> 280 |     async fetchInfo() {
      |     ^
  281 |       try {
  282 |         this.loading = true;
  283 |         this.displayInfo = (await findStudentExtra(this.id)).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:290:5:
  288 |       }
  289 |     },
> 290 |     startModify() {
      |     ^
  291 |       this.modify = true;
  292 |       this.modifyInfo = { ...this.displayInfo };
  293 |       if (!this.modifyInfo.university_info) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:303:5:
  301 |         : "";
  302 |     },
> 303 |     async save() {
      |     ^
  304 |       try {
  305 |         this.loading = true;
  306 |         const [series, code] = this.modifyInfo.passport.seriesAndCode.split(


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:323:5:
  321 |       }
  322 |     },
> 323 |     async toggled(expanded) {
      |     ^
  324 |       if (expanded) {
  325 |         await this.fetch();
  326 |       }


warning: Argument 'expanded' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentExtra/StudentExtra.vue:323:19:
  321 |       }
  322 |     },
> 323 |     async toggled(expanded) {
      |                   ^
  324 |       if (expanded) {
  325 |         await this.fetch();
  326 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:211:16:
  209 |     milgroup: {
  210 |       type: Object,
> 211 |       default: () => ({}),
      |                ^
  212 |     },
  213 |   },
  214 |   data() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:214:3:
  212 |     },
  213 |   },
> 214 |   data() {
      |   ^
  215 |     return {
  216 |       modify: false,
  217 |       displayInfo: {},


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:270:5:
  268 |   },
  269 |   computed: {
> 270 |     id() {
      |     ^
  271 |       return this.$route.params.studentId;
  272 |     },
  273 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:273:5:
  271 |       return this.$route.params.studentId;
  272 |     },
> 273 |     milgroups() {
      |     ^
  274 |       return ReferenceModule.milgroups;
  275 |     },
  276 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:276:5:
  274 |       return ReferenceModule.milgroups;
  275 |     },
> 276 |     userMilfaculty() {
      |     ^
  277 |       return UserModule.personMilfaculty;
  278 |     },
  279 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:279:5:
  277 |       return UserModule.personMilfaculty;
  278 |     },
> 279 |     userMilgroups() {
      |     ^
  280 |       return UserModule.personMilgroups;
  281 |     },
  282 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:282:5:
  280 |       return UserModule.personMilgroups;
  281 |     },
> 282 |     userId() {
      |     ^
  283 |       return UserModule.personId;
  284 |     },
  285 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:286:3:
  284 |     },
  285 |   },
> 286 |   async created() {
      |   ^
  287 |     await this.fetchInfo();
  288 |   },
  289 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:290:17:
  288 |   },
  289 |   methods: {
> 290 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
      |                 ^
  291 |     async fetchInfo() {
  292 |       try {
  293 |         this.loading = true;


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:290:17:
  288 |   },
  289 |   methods: {
> 290 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
      |                 ^
  291 |     async fetchInfo() {
  292 |       try {
  293 |         this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:291:5:
  289 |   methods: {
  290 |     formatDate: date => moment(date).format("DD.MM.YYYY"),
> 291 |     async fetchInfo() {
      |     ^
  292 |       try {
  293 |         this.loading = true;
  294 |         this.displayInfo = (await findStudentBasic(this.id)).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:301:5:
  299 |       }
  300 |     },
> 301 |     startModify() {
      |     ^
  302 |       this.modify = true;
  303 |       this.modifyInfo = { ...this.displayInfo };
  304 |       if (!this.modifyInfo.birth_info) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:314:5:
  312 |       }
  313 |     },
> 314 |     async save() {
      |     ^
  315 |       this.$refs.form.validate(async valid => {
  316 |         if (valid) {
  317 |           try {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:344:5:
  342 |       });
  343 |     },
> 344 |     reset() {
      |     ^
  345 |       this.modify = false;
  346 |       this.$refs.form.clearValidate();
  347 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:348:5:
  346 |       this.$refs.form.clearValidate();
  347 |     },
> 348 |     beforeAvatarUpload(file) {
      |     ^
  349 |       const isValidType = file.type === "image/jpeg" || file.type === "image/png";
  350 |       const isLt2M = file.size / 1024 / 1024 < 2;
  351 | 


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentGeneral/StudentGeneral.vue:348:24:
  346 |       this.$refs.form.clearValidate();
  347 |     },
> 348 |     beforeAvatarUpload(file) {
      |                        ^
  349 |       const isValidType = file.type === "image/jpeg" || file.type === "image/png";
  350 |       const isLt2M = file.size / 1024 / 1024 < 2;
  351 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:34:3:
  32 |   name: "StudentNotes",
  33 |   components: { ExpandBox, TableEditor },
> 34 |   data() {
     |   ^
  35 |     return {
  36 |       notes: [],
  37 |       loading: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:76:5:
  74 |   },
  75 |   computed: {
> 76 |     id() {
     |     ^
  77 |       return this.$route.params.studentId;
  78 |     },
  79 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:81:5:
  79 |   },
  80 |   methods: {
> 81 |     async toggled(expanded) {
     |     ^
  82 |       if (expanded) {
  83 |         await this.fetchInfo();
  84 |       }


warning: Argument 'expanded' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:81:19:
  79 |   },
  80 |   methods: {
> 81 |     async toggled(expanded) {
     |                   ^
  82 |       if (expanded) {
  83 |         await this.fetchInfo();
  84 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:86:5:
  84 |       }
  85 |     },
> 86 |     async fetchInfo() {
     |     ^
  87 |       try {
  88 |         this.loading = true;
  89 |         this.notes = (await findStudentNotes(this.id)).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:96:5:
  94 |       }
  95 |     },
> 96 |     async onAddItem(data) {
     |     ^
  97 |       await this.editorDefenition.add({ student: +this.id, ...data });
  98 |       await this.fetchInfo();
  99 |     },


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:96:21:
  94 |       }
  95 |     },
> 96 |     async onAddItem(data) {
     |                     ^
  97 |       await this.editorDefenition.add({ student: +this.id, ...data });
  98 |       await this.fetchInfo();
  99 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:100:5:
   98 |       await this.fetchInfo();
   99 |     },
> 100 |     async onDelete(id) {
      |     ^
  101 |       await this.$confirm("Вы уверены, что хотите удалить?", "Подтверждение", {
  102 |         confirmButtonText: "Да",
  103 |         cancelButtonText: "Отмена",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:100:20:
   98 |       await this.fetchInfo();
   99 |     },
> 100 |     async onDelete(id) {
      |                    ^
  101 |       await this.$confirm("Вы уверены, что хотите удалить?", "Подтверждение", {
  102 |         confirmButtonText: "Да",
  103 |         cancelButtonText: "Отмена",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:110:5:
  108 |       await this.fetchInfo();
  109 |     },
> 110 |     onStartEdit(id) {
      |     ^
  111 |       this.editingItemId = id;
  112 |       this.editingData = _omit(
  113 |         this.notes.find(item => item.id === id),


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:110:17:
  108 |       await this.fetchInfo();
  109 |     },
> 110 |     onStartEdit(id) {
      |                 ^
  111 |       this.editingItemId = id;
  112 |       this.editingData = _omit(
  113 |         this.notes.find(item => item.id === id),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:117:5:
  115 |       );
  116 |     },
> 117 |     onAbortEdit() {
      |     ^
  118 |       this.editingItemId = null;
  119 |       this.editingData = null;
  120 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:121:5:
  119 |       this.editingData = null;
  120 |     },
> 121 |     async onSubmitEdit(data) {
      |     ^
  122 |       const res = await this.editorDefenition.edit({
  123 |         id: this.editingItemId,
  124 |         ...data,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentNotes/StudentNotes.vue:121:24:
  119 |       this.editingData = null;
  120 |     },
> 121 |     async onSubmitEdit(data) {
      |                        ^
  122 |       const res = await this.editorDefenition.edit({
  123 |         id: this.editingItemId,
  124 |         ...data,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:40:3:
  38 |   name: "StudentPerformance",
  39 |   components: { ExpandBox },
> 40 |   data() {
     |   ^
  41 |     return {
  42 |       performance: [],
  43 |       loading: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:47:5:
  45 |   },
  46 |   computed: {
> 47 |     id() {
     |     ^
  48 |       return this.$route.params.studentId;
  49 |     },
  50 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:52:5:
  50 |   },
  51 |   methods: {
> 52 |     tagVariantByAverageMark(average) {
     |     ^
  53 |       if (average >= 4.5) {
  54 |         return "primary";
  55 |       }


warning: Argument 'average' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:52:29:
  50 |   },
  51 |   methods: {
> 52 |     tagVariantByAverageMark(average) {
     |                             ^
  53 |       if (average >= 4.5) {
  54 |         return "primary";
  55 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:64:5:
  62 |       return "danger";
  63 |     },
> 64 |     tagVariantByAbsences(absences) {
     |     ^
  65 |       if (absences === 0) {
  66 |         return "success";
  67 |       }


warning: Argument 'absences' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:64:26:
  62 |       return "danger";
  63 |     },
> 64 |     tagVariantByAbsences(absences) {
     |                          ^
  65 |       if (absences === 0) {
  66 |         return "success";
  67 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:73:5:
  71 |       return "danger";
  72 |     },
> 73 |     async fetchInfo() {
     |     ^
  74 |       try {
  75 |         this.loading = true;
  76 |         this.performance = (await findStudentPerformance(this.id)).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:83:5:
  81 |       }
  82 |     },
> 83 |     toggled(expanded) {
     |     ^
  84 |       if (expanded) {
  85 |         this.fetchInfo();
  86 |       }


warning: Argument 'expanded' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Student/StudentPerformance/StudentPerformance.vue:83:13:
  81 |       }
  82 |     },
> 83 |     toggled(expanded) {
     |             ^
  84 |       if (expanded) {
  85 |         this.fetchInfo();
  86 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:149:3:
  147 |   name: "Students",
  148 |   mixins: [StudentStatusesMixin],
> 149 |   data() {
      |   ^
  150 |     return {
  151 |       loading: false,
  152 |       filter: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:161:5:
  159 |   },
  160 |   computed: {
> 161 |     milgroups() {
      |     ^
  162 |       return ReferenceModule.milgroups;
  163 |     },
  164 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:164:5:
  162 |       return ReferenceModule.milgroups;
  163 |     },
> 164 |     userMilfaculty() {
      |     ^
  165 |       return UserModule.personMilfaculty;
  166 |     },
  167 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:167:5:
  165 |       return UserModule.personMilfaculty;
  166 |     },
> 167 |     userMilgroups() {
      |     ^
  168 |       return UserModule.personMilgroups;
  169 |     },
  170 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:171:3:
  169 |     },
  170 |   },
> 171 |   async created() {
      |   ^
  172 |     await this.onFilter();
  173 |   },
  174 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:175:5:
  173 |   },
  174 |   methods: {
> 175 |     async onFilter() {
      |     ^
  176 |       try {
  177 |         this.loading = true;
  178 |         const filter = {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:189:5:
  187 |       }
  188 |     },
> 189 |     async clearFilter() {
      |     ^
  190 |       Object.keys(this.filter).forEach(key => {
  191 |         this.filter[key] = null;
  192 |       });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:195:5:
  193 |       await this.onFilter();
  194 |     },
> 195 |     onDelete(e, id) {
      |     ^
  196 |       e.stopPropagation();
  197 |       this.$confirm(
  198 |         "Вы уверены, что хотите удалить студента?",


warning: Argument 'e' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:195:14:
  193 |       await this.onFilter();
  194 |     },
> 195 |     onDelete(e, id) {
      |              ^
  196 |       e.stopPropagation();
  197 |       this.$confirm(
  198 |         "Вы уверены, что хотите удалить студента?",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:195:17:
  193 |       await this.onFilter();
  194 |     },
> 195 |     onDelete(e, id) {
      |                 ^
  196 |       e.stopPropagation();
  197 |       this.$confirm(
  198 |         "Вы уверены, что хотите удалить студента?",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:215:5:
  213 |       });
  214 |     },
> 215 |     onEdit({ data }) {
      |     ^
  216 |       this.$router.push({ name: "Student", params: { studentId: data.id } });
  217 |     },
  218 |     milgroupField(row) {


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:215:12:
  213 |       });
  214 |     },
> 215 |     onEdit({ data }) {
      |            ^
  216 |       this.$router.push({ name: "Student", params: { studentId: data.id } });
  217 |     },
  218 |     milgroupField(row) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:218:5:
  216 |       this.$router.push({ name: "Student", params: { studentId: data.id } });
  217 |     },
> 218 |     milgroupField(row) {
      |     ^
  219 |       return row.milgroup.title;
  220 |     },
  221 |     dateFilter(value) {


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:218:19:
  216 |       this.$router.push({ name: "Student", params: { studentId: data.id } });
  217 |     },
> 218 |     milgroupField(row) {
      |                   ^
  219 |       return row.milgroup.title;
  220 |     },
  221 |     dateFilter(value) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:221:5:
  219 |       return row.milgroup.title;
  220 |     },
> 221 |     dateFilter(value) {
      |     ^
  222 |       if (value) { return moment(value).format("DD.MM.YYYY"); }
  223 |       return "Нет данных";
  224 |     },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Students/Students.vue:221:16:
  219 |       return row.milgroup.title;
  220 |     },
> 221 |     dateFilter(value) {
      |                ^
  222 |       if (value) { return moment(value).format("DD.MM.YYYY"); }
  223 |       return "Нет данных";
  224 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:268:3:
  266 |   components: { ExpandBox, ChangePasswordForm },
  267 |   mixins: [TeacherPostsMixin, TeacherRanksMixin],
> 268 |   data() {
      |   ^
  269 |     return {
  270 |       dialog: false,
  271 |       loading: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:332:5:
  330 |   },
  331 |   computed: {
> 332 |     personType() {
      |     ^
  333 |       return UserModule.personType;
  334 |     },
  335 |     personId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:335:5:
  333 |       return UserModule.personType;
  334 |     },
> 335 |     personId() {
      |     ^
  336 |       return UserModule.personId;
  337 |     },
  338 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:338:5:
  336 |       return UserModule.personId;
  337 |     },
> 338 |     milgroups() {
      |     ^
  339 |       return ReferenceModule.milgroups;
  340 |     },
  341 |     milfaculties() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:341:5:
  339 |       return ReferenceModule.milgroups;
  340 |     },
> 341 |     milfaculties() {
      |     ^
  342 |       return ReferenceModule.milfaculties;
  343 |     },
  344 |     id() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:344:5:
  342 |       return ReferenceModule.milfaculties;
  343 |     },
> 344 |     id() {
      |     ^
  345 |       return this.$route.params.teacherId;
  346 |     },
  347 |     isProfile() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:347:5:
  345 |       return this.$route.params.teacherId;
  346 |     },
> 347 |     isProfile() {
      |     ^
  348 |       return this.personType === "teacher" && this.personId === +this.id;
  349 |     },
  350 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:350:5:
  348 |       return this.personType === "teacher" && this.personId === +this.id;
  349 |     },
> 350 |     userMilfaculty() {
      |     ^
  351 |       return UserModule.personMilfaculty;
  352 |     },
  353 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:353:5:
  351 |       return UserModule.personMilfaculty;
  352 |     },
> 353 |     userMilgroups() {
      |     ^
  354 |       return UserModule.personMilgroups;
  355 |     },
  356 |     userId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:356:5:
  354 |       return UserModule.personMilgroups;
  355 |     },
> 356 |     userId() {
      |     ^
  357 |       return UserModule.personId;
  358 |     },
  359 |     userType() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:359:5:
  357 |       return UserModule.personId;
  358 |     },
> 359 |     userType() {
      |     ^
  360 |       return UserModule.personType;
  361 |     },
  362 |     milgroup() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:362:5:
  360 |       return UserModule.personType;
  361 |     },
> 362 |     milgroup() {
      |     ^
  363 |       return this.displayInfo.milgroup || {};
  364 |     },
  365 |     fullname() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:365:5:
  363 |       return this.displayInfo.milgroup || {};
  364 |     },
> 365 |     fullname() {
      |     ^
  366 |       return this.displayInfo.fullname;
  367 |     },
  368 |     personalPhoneNumber() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:368:5:
  366 |       return this.displayInfo.fullname;
  367 |     },
> 368 |     personalPhoneNumber() {
      |     ^
  369 |       return this.displayInfo.contact_info
  370 |                       && this.displayInfo.contact_info.personal_phone_number
  371 |         ? this.displayInfo.contact_info.personal_phone_number


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:374:5:
  372 |         : "---";
  373 |     },
> 374 |     milfacultyTitle() {
      |     ^
  375 |       return this.displayInfo.milfaculty
  376 |         ? this.displayInfo.milfaculty.title
  377 |         : "---";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:380:3:
  378 |     },
  379 |   },
> 380 |   async created() {
      |   ^
  381 |     await this.fetchInfo();
  382 |   },
  383 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:384:17:
  382 |   },
  383 |   methods: {
> 384 |     formatDate: date => (moment(date).isValid() ? moment(date).format("DD.MM.YYYY") : "---"),
      |                 ^
  385 |     async fetchInfo() {
  386 |       const id = this.$route.params.teacherId;
  387 |       if (id) {


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:384:17:
  382 |   },
  383 |   methods: {
> 384 |     formatDate: date => (moment(date).isValid() ? moment(date).format("DD.MM.YYYY") : "---"),
      |                 ^
  385 |     async fetchInfo() {
  386 |       const id = this.$route.params.teacherId;
  387 |       if (id) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:385:5:
  383 |   methods: {
  384 |     formatDate: date => (moment(date).isValid() ? moment(date).format("DD.MM.YYYY") : "---"),
> 385 |     async fetchInfo() {
      |     ^
  386 |       const id = this.$route.params.teacherId;
  387 |       if (id) {
  388 |         try {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:398:5:
  396 |       }
  397 |     },
> 398 |     startModify() {
      |     ^
  399 |       this.modify = true;
  400 |       this.modifyInfo = { ...this.displayInfo };
  401 |       if (!this.modifyInfo.birth_info) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:411:5:
  409 |       }
  410 |     },
> 411 |     async save() {
      |     ^
  412 |       const valid = await this.$refs.form.validate();
  413 |       if (!valid) {
  414 |         return;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:452:5:
  450 |       this.modify = false;
  451 |     },
> 452 |     beforeAvatarUpload(file) {
      |     ^
  453 |       const isValidType = file.type === "image/jpeg" || file.type === "image/png";
  454 |       const isLt2M = file.size / 1024 / 1024 < 2;
  455 | 


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:452:24:
  450 |       this.modify = false;
  451 |     },
> 452 |     beforeAvatarUpload(file) {
      |                        ^
  453 |       const isValidType = file.type === "image/jpeg" || file.type === "image/png";
  454 |       const isLt2M = file.size / 1024 / 1024 < 2;
  455 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:483:5:
  481 |     },
  482 | 
> 483 |     parsePhone(masked) {
      |     ^
  484 |       if (!masked) {
  485 |         return null;
  486 |       }


warning: Argument 'masked' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:483:16:
  481 |     },
  482 | 
> 483 |     parsePhone(masked) {
      |                ^
  484 |       if (!masked) {
  485 |         return null;
  486 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:495:5:
  493 |     },
  494 | 
> 495 |     backToPersonnel() {
      |     ^
  496 |       this.$router.push({ name: "Personnel" });
  497 |     },
  498 |     async beforeClose() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teacher/Teacher.vue:498:5:
  496 |       this.$router.push({ name: "Personnel" });
  497 |     },
> 498 |     async beforeClose() {
      |     ^
  499 |       try {
  500 |         await this.$confirm(
  501 |           "Вы уверены, что хотите закрыть окно смены пароля?",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:119:3:
  117 |   name: "Teachers",
  118 |   mixins: [TeacherRanksMixin, TeacherPostsMixin],
> 119 |   data() {
      |   ^
  120 |     return {
  121 |       loading: false,
  122 |       filter: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:130:5:
  128 |   },
  129 |   computed: {
> 130 |     milfaculties() {
      |     ^
  131 |       return ReferenceModule.milfaculties;
  132 |     },
  133 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:133:5:
  131 |       return ReferenceModule.milfaculties;
  132 |     },
> 133 |     userMilfaculty() {
      |     ^
  134 |       return UserModule.personMilfaculty;
  135 |     },
  136 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:136:5:
  134 |       return UserModule.personMilfaculty;
  135 |     },
> 136 |     userMilgroups() {
      |     ^
  137 |       return UserModule.personMilgroups;
  138 |     },
  139 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:140:3:
  138 |     },
  139 |   },
> 140 |   async created() {
      |   ^
  141 |     await this.onFilter();
  142 |   },
  143 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:144:5:
  142 |   },
  143 |   methods: {
> 144 |     formatDate(d) {
      |     ^
  145 |       if (d) { return moment(d.date).format("DD.MM.YYYY"); }
  146 |       return "Нет данных";
  147 |     },


warning: Argument 'd' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:144:16:
  142 |   },
  143 |   methods: {
> 144 |     formatDate(d) {
      |                ^
  145 |       if (d) { return moment(d.date).format("DD.MM.YYYY"); }
  146 |       return "Нет данных";
  147 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:148:5:
  146 |       return "Нет данных";
  147 |     },
> 148 |     async onFilter() {
      |     ^
  149 |       try {
  150 |         this.loading = true;
  151 |         this.teachers = (await getTeacher(this.filter)).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:158:5:
  156 |       }
  157 |     },
> 158 |     async clearFilter() {
      |     ^
  159 |       Object.keys(this.filter).forEach(key => {
  160 |         this.filter[key] = null;
  161 |       });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:164:5:
  162 |       await this.onFilter();
  163 |     },
> 164 |     onDelete(e, id) {
      |     ^
  165 |       e.stopPropagation();
  166 |       this.$confirm(
  167 |         "Вы уверены, что хотите удалить преподавателя?",


warning: Argument 'e' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:164:14:
  162 |       await this.onFilter();
  163 |     },
> 164 |     onDelete(e, id) {
      |              ^
  165 |       e.stopPropagation();
  166 |       this.$confirm(
  167 |         "Вы уверены, что хотите удалить преподавателя?",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:164:17:
  162 |       await this.onFilter();
  163 |     },
> 164 |     onDelete(e, id) {
      |                 ^
  165 |       e.stopPropagation();
  166 |       this.$confirm(
  167 |         "Вы уверены, что хотите удалить преподавателя?",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:184:5:
  182 |       });
  183 |     },
> 184 |     onEdit({ data }) {
      |     ^
  185 |       this.$router.push({ name: "Teacher", params: { teacherId: data.id } });
  186 |     },
  187 |     displayMilgroups(teacher) {


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:184:12:
  182 |       });
  183 |     },
> 184 |     onEdit({ data }) {
      |            ^
  185 |       this.$router.push({ name: "Teacher", params: { teacherId: data.id } });
  186 |     },
  187 |     displayMilgroups(teacher) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:187:5:
  185 |       this.$router.push({ name: "Teacher", params: { teacherId: data.id } });
  186 |     },
> 187 |     displayMilgroups(teacher) {
      |     ^
  188 |       if (teacher.milgroups === null) {
  189 |         return "";
  190 |       }


warning: Argument 'teacher' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/Teachers/Teachers.vue:187:22:
  185 |       this.$router.push({ name: "Teacher", params: { teacherId: data.id } });
  186 |     },
> 187 |     displayMilgroups(teacher) {
      |                      ^
  188 |       if (teacher.milgroups === null) {
  189 |         return "";
  190 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:81:3:
  79 |   name: "UniformPicker",
  80 | 
> 81 |   data() {
     |   ^
  82 |     return {
  83 |       HEADDRESSES,
  84 |       OUTERWEARS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:91:5:
  89 | 
  90 |   computed: {
> 91 |     userMilfaculty() {
     |     ^
  92 |       return UserModule.personMilfaculty;
  93 |     },
  94 |     milfaculties() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:94:5:
  92 |       return UserModule.personMilfaculty;
  93 |     },
> 94 |     milfaculties() {
     |     ^
  95 |       return ReferenceModule.milfaculties;
  96 |     },
  97 |     milfacultiesFiltered() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:97:5:
   95 |       return ReferenceModule.milfaculties;
   96 |     },
>  97 |     milfacultiesFiltered() {
      |     ^
   98 |       return this.milfaculties.filter(x => hasPermission(this.getPermissions(x.id, "get")));
   99 |     },
  100 |     loading() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:100:5:
   98 |       return this.milfaculties.filter(x => hasPermission(this.getPermissions(x.id, "get")));
   99 |     },
> 100 |     loading() {
      |     ^
  101 |       return this.fetchingData;
  102 |     },
  103 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:105:3:
  103 |   },
  104 | 
> 105 |   async created() {
      |   ^
  106 |     this.fetchingData = true;
  107 |     await ReferenceModule.fetchMilfaculties();
  108 |     this.fetchingData = false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:115:5:
  113 |   methods: {
  114 |     hasPermission,
> 115 |     getPermissions(milfaculty, method) {
      |     ^
  116 |       return [
  117 |         `uniforms.${method}.all`,
  118 |         {


warning: Argument 'milfaculty' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:115:20:
  113 |   methods: {
  114 |     hasPermission,
> 115 |     getPermissions(milfaculty, method) {
      |                    ^
  116 |       return [
  117 |         `uniforms.${method}.all`,
  118 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:115:32:
  113 |   methods: {
  114 |     hasPermission,
> 115 |     getPermissions(milfaculty, method) {
      |                                ^
  116 |       return [
  117 |         `uniforms.${method}.all`,
  118 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:125:5:
  123 |     },
  124 | 
> 125 |     async fetchUniform(milfaculty) {
      |     ^
  126 |       if (!milfaculty) {
  127 |         return;
  128 |       }


warning: Argument 'milfaculty' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:125:24:
  123 |     },
  124 | 
> 125 |     async fetchUniform(milfaculty) {
      |                        ^
  126 |       if (!milfaculty) {
  127 |         return;
  128 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:158:5:
  156 |     },
  157 | 
> 158 |     cycleThroughHeaddresses() {
      |     ^
  159 |       const keys = Object.keys(HEADDRESSES);
  160 |       const nextIndex = keys.indexOf(this.uniform.headdress) + 1;
  161 |       this.uniform.headdress = keys[nextIndex % keys.length];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:163:5:
  161 |       this.uniform.headdress = keys[nextIndex % keys.length];
  162 |     },
> 163 |     cycleThroughOuterwears() {
      |     ^
  164 |       const keys = Object.keys(OUTERWEARS);
  165 |       const nextIndex = keys.indexOf(this.uniform.outerwear) + 1;
  166 |       this.uniform.outerwear = keys[nextIndex % keys.length];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Personnel/UniformPicker/UniformPicker.vue:169:5:
  167 |     },
  168 | 
> 169 |     async confirmUniform() {
      |     ^
  170 |       try {
  171 |         await changeUniform(
  172 |           {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:177:3:
  175 |   mixins: [TeacherRanksMixin, TeacherPostsMixin],
  176 | 
> 177 |   data() {
      |   ^
  178 |     const requiredRule = {
  179 |       required: true,
  180 |       message: "Обязательное поле",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:225:5:
  223 | 
  224 |   computed: {
> 225 |     loading() {
      |     ^
  226 |       return this.awaitingResponse || this.teacherRanksAreLoading || this.teacherPostsAreLoading;
  227 |     },
  228 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:229:5:
  227 |     },
  228 | 
> 229 |     milfaculties() {
      |     ^
  230 |       return ReferenceModule.milfaculties;
  231 |     },
  232 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:232:5:
  230 |       return ReferenceModule.milfaculties;
  231 |     },
> 232 |     milgroups() {
      |     ^
  233 |       return ReferenceModule.milgroups;
  234 |     },
  235 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:237:3:
  235 |   },
  236 | 
> 237 |   async created() {
      |   ^
  238 |     this.awaitingResponse = true;
  239 | 
  240 |     const responses = [];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/Teacher.vue:261:5:
  259 | 
  260 |   methods: {
> 261 |     async registerTeacher() {
      |     ^
  262 |       const isDataValid = await this.$refs.form.validate();
  263 |       if (!isDataValid) {
  264 |         return;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/index.vue:57:3:
  55 |   components: { RegisterTeacher },
  56 | 
> 57 |   data() {
     |   ^
  58 |     return {
  59 |       personnel: "teacher",
  60 |       registrationComplete: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/index.vue:65:5:
  63 | 
  64 |   computed: {
> 65 |     personnelToRegisterTitle() {
     |     ^
  66 |       switch (this.personnel) {
  67 |         case "teacher":
  68 |           return "преподавателя";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Register/index.vue:76:5:
  74 | 
  75 |   methods: {
> 76 |     registrationCompleted() {
     |     ^
  77 |       this.registrationComplete = true;
  78 |       setTimeout(() => {
  79 |         this.$router.replace({ name: "Login" });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:238:3:
  236 |   mixins: [LessonTypesMixin],
  237 | 
> 238 |   data() {
      |   ^
  239 |     return {
  240 |       dialogVisible: false,
  241 |       editLessonFullname: "",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:303:5:
  301 | 
  302 |   computed: {
> 303 |     rooms() {
      |     ^
  304 |       return ReferenceModule.rooms;
  305 |     },
  306 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:306:5:
  304 |       return ReferenceModule.rooms;
  305 |     },
> 306 |     milgroups() {
      |     ^
  307 |       return ReferenceModule.milgroups;
  308 |     },
  309 |     userMilfaculty() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:309:5:
  307 |       return ReferenceModule.milgroups;
  308 |     },
> 309 |     userMilfaculty() {
      |     ^
  310 |       return UserModule.personMilfaculty;
  311 |     },
  312 |     userMilgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:312:5:
  310 |       return UserModule.personMilfaculty;
  311 |     },
> 312 |     userMilgroups() {
      |     ^
  313 |       return UserModule.personMilgroups;
  314 |     },
  315 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:317:3:
  315 |   },
  316 | 
> 317 |   async created() {
      |   ^
  318 |     this.filter.mg = this.milgroups[0].milgroup;
  319 |     await this.fetchData();
  320 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:323:5:
  321 | 
  322 |   methods: {
> 323 |     getPermissions(method) {
      |     ^
  324 |       return [
  325 |         `lessons.${method}.all`,
  326 |         {


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:323:20:
  321 | 
  322 |   methods: {
> 323 |     getPermissions(method) {
      |                    ^
  324 |       return [
  325 |         `lessons.${method}.all`,
  326 |         {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:339:17:
  337 |     },
  338 | 
> 339 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  340 | 
  341 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
  342 |     tagByLessonType(type) {


warning: Argument 'd' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:339:17:
  337 |     },
  338 | 
> 339 |     formatDate: d => moment(d).format("DD.MM.YY"),
      |                 ^
  340 | 
  341 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
  342 |     tagByLessonType(type) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:342:5:
  340 | 
  341 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 342 |     tagByLessonType(type) {
      |     ^
  343 |       switch (type) {
  344 |         case "LE":
  345 |           return "primary";


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:342:21:
  340 | 
  341 |     // TODO(TmLev): Send this info from back-end in "choices/.../" views.
> 342 |     tagByLessonType(type) {
      |                     ^
  343 |       switch (type) {
  344 |         case "LE":
  345 |           return "primary";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:360:5:
  358 |       }
  359 |     },
> 360 |     limitDateRange() {
      |     ^
  361 |       let main;
  362 |       let other;
  363 |       const maxMonths = 6;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:386:5:
  384 |       }
  385 |     },
> 386 |     async fetchData() {
      |     ^
  387 |       if (this.filter.mg <= 0) {
  388 |         return;
  389 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:405:5:
  403 |     },
  404 | 
> 405 |     async getSubjects() {
      |     ^
  406 |       try {
  407 |         const response = await getSubjects();
  408 |         this.subjects = response.data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:414:5:
  412 |     },
  413 | 
> 414 |     onCreate(ordinal, date) {
      |     ^
  415 |       this.editLesson = {
  416 |         ordinal,
  417 |         date,


warning: Argument 'ordinal' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:414:14:
  412 |     },
  413 | 
> 414 |     onCreate(ordinal, date) {
      |              ^
  415 |       this.editLesson = {
  416 |         ordinal,
  417 |         date,


warning: Argument 'date' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:414:23:
  412 |     },
  413 | 
> 414 |     onCreate(ordinal, date) {
      |                       ^
  415 |       this.editLesson = {
  416 |         ordinal,
  417 |         date,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:424:5:
  422 |       this.dialogVisible = true;
  423 |     },
> 424 |     onEdit(row) {
      |     ^
  425 |       this.editLesson = { ...row };
  426 |       this.editLesson.milgroup = this.editLesson.milgroup.milgroup;
  427 |       this.editLesson.subject = this.editLesson.subject.id;


warning: Argument 'row' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:424:12:
  422 |       this.dialogVisible = true;
  423 |     },
> 424 |     onEdit(row) {
      |            ^
  425 |       this.editLesson = { ...row };
  426 |       this.editLesson.milgroup = this.editLesson.milgroup.milgroup;
  427 |       this.editLesson.subject = this.editLesson.subject.id;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:433:5:
  431 |     },
  432 | 
> 433 |     handleClose() {
      |     ^
  434 |       this.$confirm(
  435 |         "Вы уверены, что хотите закрыть окно редактирования?",
  436 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:448:5:
  446 |     },
  447 | 
> 448 |     async handleAccept() {
      |     ^
  449 |       const action = this.editLesson.id
  450 |         ? patchLesson
  451 |         : postLesson;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:472:5:
  470 |     },
  471 | 
> 472 |     handleDelete(id) {
      |     ^
  473 |       this.$confirm(
  474 |         "Вы уверены, что хотите удалить занятие?",
  475 |         "Подтверждение",


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/components/Schedule/Schedule.vue:472:18:
  470 |     },
  471 | 
> 472 |     handleDelete(id) {
      |                  ^
  473 |       this.$confirm(
  474 |         "Вы уверены, что хотите удалить занятие?",
  475 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/Papers.vue:37:5:
  35 |   },
  36 |   methods: {
> 37 |     search() {
     |     ^
  38 |       this.$router.push({
  39 |         query: {
  40 |           search: this.$refs.searchInput.value,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/Papers.vue:45:5:
  43 |       });
  44 |     },
> 45 |     deleteText() {
     |     ^
  46 |       this.$refs.searchInput.value = "";
  47 |       this.$router.push({
  48 |         query: _omit(this.$route.query, ["search"]),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/PapersAdvanced.vue:90:3:
  88 |   valueDate = ""
  89 | 
> 90 |   get publishers() { return PapersModule.publishers; }
     |   ^
  91 |   get authors() { return PapersModule.authors; }
  92 | 
  93 |   surnameWithInitials = surnameWithInitials


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/PapersAdvanced.vue:91:3:
  89 | 
  90 |   get publishers() { return PapersModule.publishers; }
> 91 |   get authors() { return PapersModule.authors; }
     |   ^
  92 | 
  93 |   surnameWithInitials = surnameWithInitials
  94 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/PapersAdvanced.vue:95:3:
  93 |   surnameWithInitials = surnameWithInitials
  94 | 
> 95 |   advancedClick() {
     |   ^
  96 |     const filters = document.querySelector(".filters");
  97 |     const array = document.querySelector(".my-advanced-search-arrow");
  98 |     if (filters.style.display === "none") {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/PapersAdvanced.vue:107:3:
  105 |   }
  106 | 
> 107 |   updateQuery() {
      |   ^
  108 |     const query = {
  109 |       authors: this.author,
  110 |       category: this.$route.query.category,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/SearchForMaterials.vue:34:5:
  32 |   },
  33 |   methods: {
> 34 |     search() {
     |     ^
  35 |       this.$router.push({
  36 |         query: {
  37 |           subjectId: this.$route.query.subjectId,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/SearchForMaterials.vue:42:5:
  40 |       });
  41 |     },
> 42 |     deleteText() {
     |     ^
  43 |       this.$refs.searchInput.value = "";
  44 |       this.$router.push({
  45 |         query: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/SearchForSubjects.vue:34:3:
  32 |     },
  33 |   },
> 34 |   mounted() {
     |   ^
  35 |     const query = this.$route.query.subjectsSearch;
  36 |     this.$refs.searchInput.value = query || "";
  37 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/SearchForSubjects.vue:39:5:
  37 |   },
  38 |   methods: {
> 39 |     search() {
     |     ^
  40 |       this.$router.push({
  41 |         query: {
  42 |           subjectsSearch: this.$refs.searchInput.value,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/Search/SearchForSubjects.vue:46:5:
  44 |       });
  45 |     },
> 46 |     deleteText() {
     |     ^
  47 |       this.$refs.searchInput.value = "";
  48 |       this.$router.push({
  49 |         query: {


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:92:1:
  90 |       <ElFormItem prop="birth_date">
  91 |         <ElInput
> 92 |               ref="patronymic"
     | ^
  93 |               v-model="student.birth_info.date"
  94 |               placeholder="Укажите дату рождения"
  95 |               name="patronymic"


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:93:1:
  91 |         <ElInput
  92 |               ref="patronymic"
> 93 |               v-model="student.birth_info.date"
     | ^
  94 |               placeholder="Укажите дату рождения"
  95 |               name="patronymic"
  96 |               type="date"


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:94:1:
  92 |               ref="patronymic"
  93 |               v-model="student.birth_info.date"
> 94 |               placeholder="Укажите дату рождения"
     | ^
  95 |               name="patronymic"
  96 |               type="date"
  97 |               tabindex="1"


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:95:1:
  93 |               v-model="student.birth_info.date"
  94 |               placeholder="Укажите дату рождения"
> 95 |               name="patronymic"
     | ^
  96 |               type="date"
  97 |               tabindex="1"
  98 |               auto-complete="on"


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:96:1:
  94 |               placeholder="Укажите дату рождения"
  95 |               name="patronymic"
> 96 |               type="date"
     | ^
  97 |               tabindex="1"
  98 |               auto-complete="on"
  99 |             />


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:97:1:
   95 |               name="patronymic"
   96 |               type="date"
>  97 |               tabindex="1"
      | ^
   98 |               auto-complete="on"
   99 |             />
  100 |       </ElFormItem>


warning: Expected indentation of 10 spaces but found 14 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:98:1:
   96 |               type="date"
   97 |               tabindex="1"
>  98 |               auto-complete="on"
      | ^
   99 |             />
  100 |       </ElFormItem>
  101 | 


warning: Expected indentation of 8 spaces but found 12 spaces (vue/html-indent) at src/components/StudentRegistration/Student.vue:99:1:
   97 |               tabindex="1"
   98 |               auto-complete="on"
>  99 |             />
      | ^
  100 |       </ElFormItem>
  101 | 
  102 |       <div class="field-title">


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:168:3:
  166 |   mixins: [StudentPostsMixin],
  167 | 
> 168 |   data() {
      |   ^
  169 |     const requiredRule = {
  170 |       required: true,
  171 |       message: "Обязательное поле",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:235:5:
  233 | 
  234 |   computed: {
> 235 |     loading() {
      |     ^
  236 |       return this.awaitingResponse || this.studentPostsAreLoading;
  237 |     },
  238 |     milfaculties() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:238:5:
  236 |       return this.awaitingResponse || this.studentPostsAreLoading;
  237 |     },
> 238 |     milfaculties() {
      |     ^
  239 |       return ReferenceModule.milfaculties;
  240 |     },
  241 |     milgroups() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:241:5:
  239 |       return ReferenceModule.milfaculties;
  240 |     },
> 241 |     milgroups() {
      |     ^
  242 |       return ReferenceModule.milgroups;
  243 |     },
  244 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:246:3:
  244 |   },
  245 | 
> 246 |   async created() {
      |   ^
  247 |     this.awaitingResponse = true;
  248 | 
  249 |     const responses = [];


warning: Missing space before value for key 'label' (key-spacing) at src/components/StudentRegistration/Student.vue:265:49:
  263 |     }
  264 | 
> 265 |     this.studentPosts.PRIVATE_STUDENT = { label:"-", value: null };
      |                                                 ^
  266 |   },
  267 | 
  268 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/Student.vue:269:5:
  267 | 
  268 |   methods: {
> 269 |     async registerStudent() {
      |     ^
  270 |       const isDataValid = await this.$refs.form.validate();
  271 |       if (!isDataValid) {
  272 |         return;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/index.vue:57:3:
  55 |   components: { RegisterStudent },
  56 | 
> 57 |   data() {
     |   ^
  58 |     return {
  59 |       personnel: "student",
  60 |       registrationComplete: false,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/index.vue:65:5:
  63 | 
  64 |   computed: {
> 65 |     personnelToRegisterTitle() {
     |     ^
  66 |       switch (this.personnel) {
  67 |         case "student":
  68 |           return "студента";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/StudentRegistration/index.vue:76:5:
  74 | 
  75 |   methods: {
> 76 |     registrationCompleted() {
     |     ^
  77 |       this.registrationComplete = true;
  78 |       setTimeout(() => {
  79 |         this.$router.replace({ name: "Login" });


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/SvgIcon/index.vue:35:5:
  33 |   },
  34 |   computed: {
> 35 |     isExternal() {
     |     ^
  36 |       return isExternal(this.iconClass);
  37 |     },
  38 |     iconName() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/SvgIcon/index.vue:38:5:
  36 |       return isExternal(this.iconClass);
  37 |     },
> 38 |     iconName() {
     |     ^
  39 |       return `#icon-${this.iconClass}`;
  40 |     },
  41 |     svgClass() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/SvgIcon/index.vue:41:5:
  39 |       return `#icon-${this.iconClass}`;
  40 |     },
> 41 |     svgClass() {
     |     ^
  42 |       if (this.className) {
  43 |         return `svg-icon ${this.className}`;
  44 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/components/SvgIcon/index.vue:47:5:
  45 |       return "svg-icon";
  46 |     },
> 47 |     styleExternalIcon() {
     |     ^
  48 |       return {
  49 |         mask: `url(${this.iconClass}) no-repeat 50% 50%`,
  50 |         "-webkit-mask": `url(${this.iconClass}) no-repeat 50% 50%`,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/constants/applicantForm.js:185:32:
  183 | };
  184 | 
> 185 | export const getRelationData = rel => ({
      |                                ^
  186 |   surname: {
  187 |     component: "text",
  188 |     title: `Фамилия ${rel}`,


warning: Argument 'rel' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/constants/applicantForm.js:185:32:
  183 | };
  184 | 
> 185 | export const getRelationData = rel => ({
      |                                ^
  186 |   surname: {
  187 |     component: "text",
  188 |     title: `Фамилия ${rel}`,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/constants/applicantForm.js:265:8:
  263 | };
  264 | 
> 265 | export function dataURLtoFile(dataurl, filename) {
      |        ^
  266 |   const arr = dataurl.split(",");
  267 |   const mime = arr[0].match(/:(.*?);/)[1];
  268 |   const bstr = atob(arr[1]);


warning: Argument 'dataurl' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/constants/applicantForm.js:265:31:
  263 | };
  264 | 
> 265 | export function dataURLtoFile(dataurl, filename) {
      |                               ^
  266 |   const arr = dataurl.split(",");
  267 |   const mime = arr[0].match(/:(.*?);/)[1];
  268 |   const bstr = atob(arr[1]);


warning: Argument 'filename' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/constants/applicantForm.js:265:40:
  263 | };
  264 | 
> 265 | export function dataURLtoFile(dataurl, filename) {
      |                                        ^
  266 |   const arr = dataurl.split(",");
  267 |   const mime = arr[0].match(/:(.*?);/)[1];
  268 |   const bstr = atob(arr[1]);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/AppMain.vue:13:5:
  11 |   name: "AppMain",
  12 |   computed: {
> 13 |     key() {
     |     ^
  14 |       return this.$route.path;
  15 |     },
  16 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/BirthdayItem.vue:33:17:
  31 |   },
  32 |   methods: {
> 33 |     formatDate: d => moment(d).format("DD MMMM"),
     |                 ^
  34 |   },
  35 | };
  36 | </script>


warning: Argument 'd' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/BirthdayItem.vue:33:17:
  31 |   },
  32 |   methods: {
> 33 |     formatDate: d => moment(d).format("DD MMMM"),
     |                 ^
  34 |   },
  35 | };
  36 | </script>


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:106:3:
  104 |     BirthdayItem,
  105 |   },
> 106 |   data() {
      |   ^
  107 |     return {
  108 |       students: [],
  109 |       teachers: [],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:114:5:
  112 |   },
  113 |   computed: {
> 114 |     sidebar() {
      |     ^
  115 |       return AppModule.sidebar;
  116 |     },
  117 |     email() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:117:5:
  115 |       return AppModule.sidebar;
  116 |     },
> 117 |     email() {
      |     ^
  118 |       return UserModule.email;
  119 |     },
  120 |     personType() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:120:5:
  118 |       return UserModule.email;
  119 |     },
> 120 |     personType() {
      |     ^
  121 |       return UserModule.personType;
  122 |     },
  123 |     personId() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:123:5:
  121 |       return UserModule.personType;
  122 |     },
> 123 |     personId() {
      |     ^
  124 |       return UserModule.personId;
  125 |     },
  126 |     isCollapse() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:126:5:
  124 |       return UserModule.personId;
  125 |     },
> 126 |     isCollapse() {
      |     ^
  127 |       return !this.sidebar.opened;
  128 |     },
  129 |     anyBirthday() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:129:5:
  127 |       return !this.sidebar.opened;
  128 |     },
> 129 |     anyBirthday() {
      |     ^
  130 |       return this.students?.length > 0 || this.teachers.length > 0;
  131 |     },
  132 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:133:3:
  131 |     },
  132 |   },
> 133 |   async created() {
      |   ^
  134 |     if (!hasPermission(["applicant.applicant.self"])) {
  135 |       await this.fetchBirthdays();
  136 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:139:5:
  137 |   },
  138 |   methods: {
> 139 |     hasPerm() {
      |     ^
  140 |       return hasPermission(["applicant.applicant.self"]);
  141 |     },
  142 |     surnameWithInitials,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:143:5:
  141 |     },
  142 |     surnameWithInitials,
> 143 |     logout() {
      |     ^
  144 |       UserModule.logout();
  145 |       window.location.href = "/login";
  146 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:147:5:
  145 |       window.location.href = "/login";
  146 |     },
> 147 |     profile() {
      |     ^
  148 |       if (this.personType && this.personId) {
  149 |         const name = this.personType.charAt(0).toUpperCase() + this.personType.slice(1);
  150 |         this.$router.push({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:156:5:
  154 |       }
  155 |     },
> 156 |     toggleSideBar() {
      |     ^
  157 |       AppModule.toggleSideBar();
  158 |     },
  159 |     async fetchBirthdays() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Navbar.vue:159:5:
  157 |       AppModule.toggleSideBar();
  158 |     },
> 159 |     async fetchBirthdays() {
      |     ^
  160 |       try {
  161 |         this.students = (await getStudentBirthdays()).data;
  162 |         this.teachers = (await getTeacherBirthdays()).data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/FixiOSBug.js:5:5:
  3 | export default {
  4 |   computed: {
> 5 |     device() {
    |     ^
  6 |       return AppModule.device;
  7 |     },
  8 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/FixiOSBug.js:9:3:
   7 |     },
   8 |   },
>  9 |   mounted() {
     |   ^
  10 |     // In order to fix the click on menu on the ios device will trigger the mouseleave bug
  11 |     // https://github.com/PanJiaChen/vue-element-admin/issues/1135
  12 |     this.fixBugIniOS();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/FixiOSBug.js:15:5:
  13 |   },
  14 |   methods: {
> 15 |     fixBugIniOS() {
     |     ^
  16 |       const $subMenu = this.$refs.subMenu;
  17 |       if ($subMenu) {
  18 |         const { handleMouseleave } = $subMenu;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Item.vue:15:3:
  13 |     },
  14 |   },
> 15 |   render(h, context) {
     |   ^
  16 |     const { icon, title } = context.props;
  17 |     const vnodes = [];
  18 | 


warning: Argument 'h' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Item.vue:15:10:
  13 |     },
  14 |   },
> 15 |   render(h, context) {
     |          ^
  16 |     const { icon, title } = context.props;
  17 |     const vnodes = [];
  18 | 


warning: Argument 'context' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Item.vue:15:13:
  13 |     },
  14 |   },
> 15 |   render(h, context) {
     |             ^
  16 |     const { icon, title } = context.props;
  17 |     const vnodes = [];
  18 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Link.vue:19:5:
  17 |   },
  18 |   methods: {
> 19 |     linkProps(url) {
     |     ^
  20 |       if (isExternal(url)) {
  21 |         return {
  22 |           is: "a",


warning: Argument 'url' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Link.vue:19:15:
  17 |   },
  18 |   methods: {
> 19 |     linkProps(url) {
     |               ^
  20 |       if (isExternal(url)) {
  21 |         return {
  22 |           is: "a",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/Logo.vue:39:3:
  37 |     },
  38 |   },
> 39 |   data() {
     |   ^
  40 |     return {
  41 |       title: "ВУЦ ВШЭ",
  42 |       logo:


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:89:3:
  87 |     },
  88 |   },
> 89 |   data() {
     |   ^
  90 |     // To fix https://github.com/PanJiaChen/vue-admin-template/issues/237
  91 |     // TODO: refactor with render function
  92 |     this.onlyOneChild = null;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:96:5:
  94 |   },
  95 |   computed: {
> 96 |     permissions() {
     |     ^
  97 |       return this.onlyOneChild?.meta?.permissions;
  98 |     },
  99 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:101:5:
   99 |   },
  100 |   methods: {
> 101 |     hasOneShowingChild(children = [], parent) {
      |     ^
  102 |       const showingChildren = children.filter(item => {
  103 |         if (item.hidden) {
  104 |           return false;


warning: Argument 'parent' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:101:39:
   99 |   },
  100 |   methods: {
> 101 |     hasOneShowingChild(children = [], parent) {
      |                                       ^
  102 |       const showingChildren = children.filter(item => {
  103 |         if (item.hidden) {
  104 |           return false;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:124:5:
  122 |       return false;
  123 |     },
> 124 |     resolvePath(routePath) {
      |     ^
  125 |       if (isExternal(routePath)) {
  126 |         return routePath;
  127 |       }


warning: Argument 'routePath' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/SidebarItem.vue:124:17:
  122 |       return false;
  123 |     },
> 124 |     resolvePath(routePath) {
      |                 ^
  125 |       if (isExternal(routePath)) {
  126 |         return routePath;
  127 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:65:5:
  63 |   components: { SidebarItem, Logo },
  64 |   computed: {
> 65 |     sidebar() { return AppModule.sidebar; },
     |     ^
  66 |     routes() {
  67 |       return this.$router.options.routes;
  68 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:66:5:
  64 |   computed: {
  65 |     sidebar() { return AppModule.sidebar; },
> 66 |     routes() {
     |     ^
  67 |       return this.$router.options.routes;
  68 |     },
  69 |     activeMenu() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:69:5:
  67 |       return this.$router.options.routes;
  68 |     },
> 69 |     activeMenu() {
     |     ^
  70 |       const route = this.$route;
  71 |       const { meta, path } = route;
  72 |       // if set path, the sidebar will highlight the path you set


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:78:5:
  76 |       return path;
  77 |     },
> 78 |     showLogo() {
     |     ^
  79 |       return SettingsModule.sidebarLogo;
  80 |     },
  81 |     variables() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:81:5:
  79 |       return SettingsModule.sidebarLogo;
  80 |     },
> 81 |     variables() {
     |     ^
  82 |       return variables;
  83 |     },
  84 |     isCollapse() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:84:5:
  82 |       return variables;
  83 |     },
> 84 |     isCollapse() {
     |     ^
  85 |       return !this.sidebar.opened;
  86 |     },
  87 |     email() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:87:5:
  85 |       return !this.sidebar.opened;
  86 |     },
> 87 |     email() {
     |     ^
  88 |       return UserModule.email;
  89 |     },
  90 |     personType() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:90:5:
  88 |       return UserModule.email;
  89 |     },
> 90 |     personType() {
     |     ^
  91 |       return UserModule.personType;
  92 |     },
  93 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:95:5:
  93 |   },
  94 |   methods: {
> 95 |     profile() {
     |     ^
  96 |       if (this.personType && this.personId) {
  97 |         const name = this.personType.charAt(0).toUpperCase() + this.personType.slice(1);
  98 |         this.$router.push({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:104:5:
  102 |       }
  103 |     },
> 104 |     logout() {
      |     ^
  105 |       UserModule.logout();
  106 |       window.location.href = "/login";
  107 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/components/Sidebar/index.vue:108:5:
  106 |       window.location.href = "/login";
  107 |     },
> 108 |     close() {
      |     ^
  109 |       AppModule.closeSideBar({ withoutAnimation: false });
  110 |     },
  111 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:31:3:
  29 |   },
  30 |   mixins: [ResizeMixin],
> 31 |   data() {
     |   ^
  32 |     return {
  33 |       hideSidebar: false,
  34 |     };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:37:5:
  35 |   },
  36 |   computed: {
> 37 |     sidebar() {
     |     ^
  38 |       return AppModule.sidebar;
  39 |     },
  40 |     device() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:40:5:
  38 |       return AppModule.sidebar;
  39 |     },
> 40 |     device() {
     |     ^
  41 |       return AppModule.device;
  42 |     },
  43 |     fixedHeader() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:43:5:
  41 |       return AppModule.device;
  42 |     },
> 43 |     fixedHeader() {
     |     ^
  44 |       return SettingsModule.fixedHeader;
  45 |     },
  46 |     classObj() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:46:5:
  44 |       return SettingsModule.fixedHeader;
  45 |     },
> 46 |     classObj() {
     |     ^
  47 |       return {
  48 |         hideSidebar: !this.sidebar.opened,
  49 |         openSidebar: this.sidebar.opened,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/index.vue:56:5:
  54 |   },
  55 |   methods: {
> 56 |     handleClickOutside() {
     |     ^
  57 |       AppModule.closeSideBar({ withoutAnimation: false });
  58 |     },
  59 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:8:5:
   6 | export default {
   7 |   watch: {
>  8 |     $route(route) {
     |     ^
   9 |       if (this.device === "mobile" && this.sidebar.opened) {
  10 |         AppModule.closeSideBar({ withoutAnimation: false });
  11 |       }


warning: Argument 'route' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:8:12:
   6 | export default {
   7 |   watch: {
>  8 |     $route(route) {
     |            ^
   9 |       if (this.device === "mobile" && this.sidebar.opened) {
  10 |         AppModule.closeSideBar({ withoutAnimation: false });
  11 |       }


warning: 'route' is defined but never used (@typescript-eslint/no-unused-vars) at src/layout/mixin/ResizeHandler.js:8:12:
   6 | export default {
   7 |   watch: {
>  8 |     $route(route) {
     |            ^
   9 |       if (this.device === "mobile" && this.sidebar.opened) {
  10 |         AppModule.closeSideBar({ withoutAnimation: false });
  11 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:14:3:
  12 |     },
  13 |   },
> 14 |   beforeMount() {
     |   ^
  15 |     window.addEventListener("resize", this.$_resizeHandler);
  16 |   },
  17 |   beforeDestroy() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:17:3:
  15 |     window.addEventListener("resize", this.$_resizeHandler);
  16 |   },
> 17 |   beforeDestroy() {
     |   ^
  18 |     window.removeEventListener("resize", this.$_resizeHandler);
  19 |   },
  20 |   mounted() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:20:3:
  18 |     window.removeEventListener("resize", this.$_resizeHandler);
  19 |   },
> 20 |   mounted() {
     |   ^
  21 |     const isMobile = this.$_isMobile();
  22 |     if (isMobile) {
  23 |       AppModule.toggleDevice("mobile");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:30:5:
  28 |     // use $_ for mixins properties
  29 |     // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential
> 30 |     $_isMobile() {
     |     ^
  31 |       const rect = body.getBoundingClientRect();
  32 |       return rect.width - 1 < WIDTH;
  33 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/layout/mixin/ResizeHandler.js:34:5:
  32 |       return rect.width - 1 < WIDTH;
  33 |     },
> 34 |     $_resizeHandler() {
     |     ^
  35 |       if (!document.hidden) {
  36 |         const isMobile = this.$_isMobile();
  37 |         AppModule.toggleDevice(isMobile ? "mobile" : "desktop");


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/lessons.js:6:3:
  4 | 
  5 | export const LessonTypesMixin = {
> 6 |   data() {
    |   ^
  7 |     return {
  8 |       lessonTypes: {},
  9 |       lessonTypesAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/lessons.js:13:3:
  11 |   },
  12 | 
> 13 |   async beforeCreate() {
     |   ^
  14 |     this.lessonTypes = await ChoicesModule.lessonTypes;
  15 |     this.lessonTypesAreLoading = false;
  16 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/lessons.js:19:5:
  17 | 
  18 |   methods: {
> 19 |     lessonTypeLabelFromValue(value) {
     |     ^
  20 |       return defaultChoiceLabelFromValue(this.lessonTypes, value);
  21 |     },
  22 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/lessons.js:19:30:
  17 | 
  18 |   methods: {
> 19 |     lessonTypeLabelFromValue(value) {
     |                              ^
  20 |       return defaultChoiceLabelFromValue(this.lessonTypes, value);
  21 |     },
  22 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/punishments.js:6:3:
  4 | 
  5 | export const PunishmentTypesMixin = {
> 6 |   data() {
    |   ^
  7 |     return {
  8 |       punishmentTypes: {},
  9 |       punishmentTypesAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/punishments.js:13:3:
  11 |   },
  12 | 
> 13 |   async beforeCreate() {
     |   ^
  14 |     this.punishmentTypes = await ChoicesModule.punishmentTypes;
  15 |     this.punishmentTypesAreLoading = false;
  16 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/punishments.js:19:5:
  17 | 
  18 |   methods: {
> 19 |     punishmentTypeLabelFromValue(value) {
     |     ^
  20 |       return defaultChoiceLabelFromValue(this.punishmentTypes, value);
  21 |     },
  22 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/punishments.js:19:34:
  17 | 
  18 |   methods: {
> 19 |     punishmentTypeLabelFromValue(value) {
     |                                  ^
  20 |       return defaultChoiceLabelFromValue(this.punishmentTypes, value);
  21 |     },
  22 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/scrollMixin.js:5:3:
  3 | 
  4 | export const scrollMixin = {
> 5 |   mounted() {
    |   ^
  6 |     window.addEventListener("scroll", this.onScroll);
  7 |   },
  8 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/scrollMixin.js:9:3:
   7 |   },
   8 | 
>  9 |   beforeDestroy() {
     |   ^
  10 |     window.removeEventListener("scroll", this.onScroll);
  11 |   },
  12 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:6:3:
  4 | 
  5 | export const StudentStatusesMixin = {
> 6 |   data() {
    |   ^
  7 |     return {
  8 |       studentStatuses: {},
  9 |       studentStatusesAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:13:3:
  11 |   },
  12 | 
> 13 |   async beforeCreate() {
     |   ^
  14 |     this.studentStatuses = await ChoicesModule.studentStatuses;
  15 |     this.studentStatusesAreLoading = false;
  16 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:19:5:
  17 | 
  18 |   methods: {
> 19 |     studentStatusLabelFromValue(value) {
     |     ^
  20 |       return defaultChoiceLabelFromValue(this.studentStatuses, value);
  21 |     },
  22 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:19:33:
  17 | 
  18 |   methods: {
> 19 |     studentStatusLabelFromValue(value) {
     |                                 ^
  20 |       return defaultChoiceLabelFromValue(this.studentStatuses, value);
  21 |     },
  22 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:26:3:
  24 | 
  25 | export const StudentPostsMixin = {
> 26 |   data() {
     |   ^
  27 |     return {
  28 |       studentPosts: {},
  29 |       studentPostsAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:33:3:
  31 |   },
  32 | 
> 33 |   async beforeCreate() {
     |   ^
  34 |     this.studentPosts = await ChoicesModule.studentPosts;
  35 |     this.studentPostsAreLoading = false;
  36 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:39:5:
  37 | 
  38 |   methods: {
> 39 |     studentPostLabelFromValueOrDefault(value, defaultLabel) {
     |     ^
  40 |       return defaultChoiceLabelFromValue(this.studentPosts, value, defaultLabel);
  41 |     },
  42 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:39:40:
  37 | 
  38 |   methods: {
> 39 |     studentPostLabelFromValueOrDefault(value, defaultLabel) {
     |                                        ^
  40 |       return defaultChoiceLabelFromValue(this.studentPosts, value, defaultLabel);
  41 |     },
  42 |   },


warning: Argument 'defaultLabel' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/students.js:39:47:
  37 | 
  38 |   methods: {
> 39 |     studentPostLabelFromValueOrDefault(value, defaultLabel) {
     |                                               ^
  40 |       return defaultChoiceLabelFromValue(this.studentPosts, value, defaultLabel);
  41 |     },
  42 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:6:3:
  4 | 
  5 | export const TeacherPostsMixin = {
> 6 |   data() {
    |   ^
  7 |     return {
  8 |       teacherPosts: {},
  9 |       teacherPostsAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:13:3:
  11 |   },
  12 | 
> 13 |   async beforeCreate() {
     |   ^
  14 |     this.teacherPosts = await ChoicesModule.teacherPosts;
  15 |     this.teacherPostsAreLoading = false;
  16 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:19:5:
  17 | 
  18 |   methods: {
> 19 |     teacherPostLabelFromValue(value) {
     |     ^
  20 |       return defaultChoiceLabelFromValue(this.teacherPosts, value);
  21 |     },
  22 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:19:31:
  17 | 
  18 |   methods: {
> 19 |     teacherPostLabelFromValue(value) {
     |                               ^
  20 |       return defaultChoiceLabelFromValue(this.teacherPosts, value);
  21 |     },
  22 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:26:3:
  24 | 
  25 | export const TeacherRanksMixin = {
> 26 |   data() {
     |   ^
  27 |     return {
  28 |       teacherRanks: {},
  29 |       teacherRanksAreLoading: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:33:3:
  31 |   },
  32 | 
> 33 |   async beforeCreate() {
     |   ^
  34 |     this.teacherRanks = await ChoicesModule.teacherRanks;
  35 |     this.teacherRanksAreLoading = false;
  36 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:39:5:
  37 | 
  38 |   methods: {
> 39 |     teacherRankLabelFromValue(value) {
     |     ^
  40 |       return defaultChoiceLabelFromValue(this.teacherRanks, value);
  41 |     },
  42 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/mixins/teachers.js:39:31:
  37 | 
  38 |   methods: {
> 39 |     teacherRankLabelFromValue(value) {
     |                               ^
  40 |       return defaultChoiceLabelFromValue(this.teacherRanks, value);
  41 |     },
  42 |   },


warning: 'response' is defined but never used (@typescript-eslint/no-unused-vars) at src/permission.ts:28:31:
  26 | 
  27 |   if (UserModule.accessToken) {
> 28 |     UserModule.getUser().then(response => {
     |                               ^
  29 |       if (to.name === "Login") {
  30 |         next({ path: "/" });
  31 |       }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:39:16:
  37 |     name: "Login",
  38 |     path: "/login/",
> 39 |     component: () => import("@/views/login/index"),
     |                ^
  40 |     hidden: true,
  41 |   },
  42 |   {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:45:16:
  43 |     name: "Register",
  44 |     path: "/register/",
> 45 |     component: () => import("@/views/Register/index"),
     |                ^
  46 |     hidden: true,
  47 |   },
  48 |   {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:51:16:
  49 |     name: "StudentRegister",
  50 |     path: "/student-register/",
> 51 |     component: () => import("@/views/StudentsRegistration/index"),
     |                ^
  52 |     hidden: true,
  53 |   },
  54 |   {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:56:16:
  54 |   {
  55 |     path: "/change-password/",
> 56 |     component: () => import("@/views/ChangePassword/index"),
     |                ^
  57 |     hidden: true,
  58 |   },
  59 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:63:16:
  61 |     path: "/applicant-form/",
  62 |     name: "ApplicantForm",
> 63 |     component: () => import("@/views/ApplicantForm/index.vue"),
     |                ^
  64 |     meta: { title: "Форма поступления" },
  65 |     hidden: true,
  66 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:71:16:
  69 |     path: "/applicant-registration/",
  70 |     name: "ApplicantRegistration",
> 71 |     component: () => import("@/views/ApplicantRegistration/index.vue"),
     |                ^
  72 |     meta: { title: "Регистрация абитуриента" },
  73 |     hidden: true,
  74 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:79:16:
  77 |     path: "/applicant-to-student/",
  78 |     name: "ApplicantToStudent",
> 79 |     component: () => import("@/views/ApplicantToStudent/index.vue"),
     |                ^
  80 |     meta: { title: "Регистрация студента", icon: "journal", permissions: ["applicant.applicant.self"] },
  81 |     hidden: true,
  82 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:93:20:
  91 |         path: "my-materials/",
  92 |         name: "Мои материалы",
> 93 |         component: () => import("@/views/myMaterials/index"),
     |                    ^
  94 |         meta: { title: "Мои материалы", icon: "materials", permissions: ["subjects.get.self", "papers.get.self", "books.get.self", "favorite-books.get.self"] },
  95 |       },
  96 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:100:20:
   98 |         path: "papers/",
   99 |         name: "Papers",
> 100 |         component: () => import("@/views/Papers/index"),
      |                    ^
  101 |         meta: { title: "Военно-научные работы", icon: "study", permissions: ["papers.get.self"] },
  102 |       },
  103 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:107:20:
  105 |         path: "library/",
  106 |         name: "Library",
> 107 |         component: () => import("@/views/Library/index"),
      |                    ^
  108 |         meta: { title: "Электронная библиотека", icon: "books", permissions: ["books.get.self"] },
  109 |       },
  110 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:114:20:
  112 |         path: "library/book/:id/",
  113 |         name: "Book",
> 114 |         component: () => import("@/views/Book/index"),
      |                    ^
  115 |         meta: { title: "Электронная библиотека" },
  116 |         hidden: true,
  117 |       },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:128:24:
  126 |             path: "subjects/",
  127 |             name: "Subjects",
> 128 |             component: () => import("@/views/Subjects/index"),
      |                        ^
  129 |             meta: { title: "Методические материалы", icon: "presentation", permissions: ["subjects.get.self"] },
  130 |           },
  131 |           {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:135:24:
  133 |             hidden: true,
  134 |             name: "Subject",
> 135 |             component: () => import("@/views/Subject/index"),
      |                        ^
  136 |             meta: { title: "Учебно-методические материалы" },
  137 |           },
  138 |           {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:141:24:
  139 |             path: "schedule/",
  140 |             name: "Schedule",
> 141 |             component: () => import("@/views/Schedule/index"),
      |                        ^
  142 |             meta: { title: "Расписание занятий", icon: "calendar", permissions: ["lessons.get.self"] },
  143 |           },
  144 |           {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:147:24:
  145 |             path: "marks/",
  146 |             name: "Marks",
> 147 |             component: () => import("@/views/Marks/index"),
      |                        ^
  148 |             meta: { title: "Журнал оценок", icon: "journal", permissions: ["marks.get.self"] },
  149 |           },
  150 |         ],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:156:20:
  154 |         path: "personnel/",
  155 |         name: "Personnel",
> 156 |         component: () => import("@/views/Personnel/index"),
      |                    ^
  157 |         meta: { title: "Личный состав ВУЦ", icon: "people" },
  158 |       },
  159 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:163:20:
  161 |         path: "student/:studentId",
  162 |         name: "Student",
> 163 |         component: () => import("@/views/Personnel/Student"),
      |                    ^
  164 |         meta: { title: "Студент" },
  165 |         hidden: true,
  166 |       },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:170:20:
  168 |         path: "teacher/:teacherId",
  169 |         name: "Teacher",
> 170 |         component: () => import("@/views/Personnel/Teacher"),
      |                    ^
  171 |         meta: { title: "Преподаватель" },
  172 |         hidden: true,
  173 |       },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:178:20:
  176 |         path: "absence/",
  177 |         name: "Absence",
> 178 |         component: () => import("@/views/Absence/index"),
      |                    ^
  179 |         meta: { title: "Журнал посещаемости", icon: "session-log", permissions: ["absences.get.self"] },
  180 |       },
  181 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:185:20:
  183 |         path: "discipline/",
  184 |         name: "Discipline",
> 185 |         component: () => import("@/views/Discipline/index"),
      |                    ^
  186 |         meta: {
  187 |           title: "Дисциплинарная практика",
  188 |           icon: "cross",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:200:20:
  198 |         path: "apanel/",
  199 |         name: "AdminPanel",
> 200 |         component: () => import("@/views/AdminPanel/index"),
      |                    ^
  201 |         meta: { title: "Панель администратора", icon: "journal", permissions: ["approve-student.get.self"] },
  202 |         children: [
  203 |           {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:206:24:
  204 |             path: "approve-teachers/",
  205 |             name: "approve-teachers",
> 206 |             component: () => import("@/components/Apanel/Approve/ApproveTeachers.vue"),
      |                        ^
  207 |             meta: { title: "Подтверждения", permissions: ["approve-teacher.get.self"] },
  208 |             hidden: true,
  209 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:213:24:
  211 |             path: "approve-students/",
  212 |             name: "approve-students",
> 213 |             component: () => import("@/components/Apanel/Approve/ApproveStudents.vue"),
      |                        ^
  214 |             meta: { title: "Подтверждения", permissions: ["approve-student.get.self"] },
  215 |             hidden: true,
  216 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:220:24:
  218 |             path: "userManagement/",
  219 |             name: "userManagement",
> 220 |             component: () => import("@/components/Apanel/UserManagementComponent.vue"),
      |                        ^
  221 |             meta: { title: "Управление пользователями", permissions: ["permissions.get.self"] },
  222 |             hidden: true,
  223 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:227:24:
  225 |             path: "roleManagement/",
  226 |             name: "roleManagement",
> 227 |             component: () => import("@/components/Apanel/RoleManagementComponent.vue"),
      |                        ^
  228 |             meta: { title: "Управление ролями", permissions: ["permissions.get.self"] },
  229 |             hidden: true,
  230 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:234:24:
  232 |             path: "dictionaries/",
  233 |             name: "dictionaries",
> 234 |             component: () => import("@/components/Apanel/Dictionaries/index.vue"),
      |                        ^
  235 |             meta: { title: "Справочники", permissions: ["publishers.get.self"] },
  236 |             hidden: true,
  237 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:241:24:
  239 |             path: "subjects/",
  240 |             name: "subjects",
> 241 |             component: () => import("@/components/Apanel/SubjectsControl.vue"),
      |                        ^
  242 |             meta: { title: "Предметы", permissions: ["subjects.get.self"] },
  243 |             hidden: true,
  244 |           },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:250:20:
  248 |         path: "applications/",
  249 |         name: "applications",
> 250 |         component: () => import("@/views/ApplicantsDocuments/index.vue"),
      |                    ^
  251 |         meta: { title: "Учет поступления документов", icon: "table", permissions: ["applicants.get.self"] },
  252 |       },
  253 |       {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:256:20:
  254 |         path: "/applicant-homepage/",
  255 |         name: "ApplicantHomePage",
> 256 |         component: () => import("@/views/ApplicantHomePage/index.vue"),
      |                    ^
  257 |         meta: { title: "Личный кабинет абитуриента", icon: "journal", permissions: ["applicant.applicant.self"] },
  258 |       },
  259 |     ],


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:266:16:
  264 |   {
  265 |     path: "**",
> 266 |     component: () => import("@/views/404"),
      |                ^
  267 |     hidden: true,
  268 |   },
  269 | ];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/router.js:293:8:
  291 | 
  292 | // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465
> 293 | export function resetRouter() {
      |        ^
  294 |   const newRouter = createRouter();
  295 |   router.matcher = newRouter.matcher; // reset router
  296 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:24:3:
  22 | 
  23 |   @Mutation
> 24 |   TOGGLE_SIDEBAR() {
     |   ^
  25 |     this.sidebar.opened = !this.sidebar.opened;
  26 |     this.sidebar.withoutAnimation = false;
  27 |     if (this.sidebar.opened) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:35:3:
  33 | 
  34 |   @Mutation
> 35 |   CLOSE_SIDEBAR(withoutAnimation) {
     |   ^
  36 |     Cookies.set("sidebarStatus", 0);
  37 |     this.sidebar.opened = false;
  38 |     this.sidebar.withoutAnimation = withoutAnimation;


warning: Argument 'withoutAnimation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:35:17:
  33 | 
  34 |   @Mutation
> 35 |   CLOSE_SIDEBAR(withoutAnimation) {
     |                 ^
  36 |     Cookies.set("sidebarStatus", 0);
  37 |     this.sidebar.opened = false;
  38 |     this.sidebar.withoutAnimation = withoutAnimation;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:42:3:
  40 | 
  41 |   @Mutation
> 42 |   TOGGLE_DEVICE(device) {
     |   ^
  43 |     this.device = device;
  44 |   }
  45 | 


warning: Argument 'device' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:42:17:
  40 | 
  41 |   @Mutation
> 42 |   TOGGLE_DEVICE(device) {
     |                 ^
  43 |     this.device = device;
  44 |   }
  45 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:47:3:
  45 | 
  46 |   @Mutation
> 47 |   SET_USER_ID(payload) {
     |   ^
  48 |     this.userId = payload;
  49 |   }
  50 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:47:15:
  45 | 
  46 |   @Mutation
> 47 |   SET_USER_ID(payload) {
     |               ^
  48 |     this.userId = payload;
  49 |   }
  50 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:52:3:
  50 | 
  51 |   @Action({ commit: "SET_USER_ID" })
> 52 |   setUserId(userId) {
     |   ^
  53 |     return userId;
  54 |   }
  55 | 


warning: Argument 'userId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:52:13:
  50 | 
  51 |   @Action({ commit: "SET_USER_ID" })
> 52 |   setUserId(userId) {
     |             ^
  53 |     return userId;
  54 |   }
  55 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:57:3:
  55 | 
  56 |   @Action()
> 57 |   toggleSideBar() {
     |   ^
  58 |     this.TOGGLE_SIDEBAR();
  59 |   }
  60 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:62:3:
  60 | 
  61 |   @Action({ commit: "CLOSE_SIDEBAR" })
> 62 |   closeSideBar({ withoutAnimation }) {
     |   ^
  63 |     return withoutAnimation;
  64 |   }
  65 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:62:16:
  60 | 
  61 |   @Action({ commit: "CLOSE_SIDEBAR" })
> 62 |   closeSideBar({ withoutAnimation }) {
     |                ^
  63 |     return withoutAnimation;
  64 |   }
  65 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:67:3:
  65 | 
  66 |   @Action({ commit: "TOGGLE_DEVICE" })
> 67 |   toggleDevice(device) {
     |   ^
  68 |     return device;
  69 |   }
  70 | }


warning: Argument 'device' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/app.js:67:16:
  65 | 
  66 |   @Action({ commit: "TOGGLE_DEVICE" })
> 67 |   toggleDevice(device) {
     |                ^
  68 |     return device;
  69 |   }
  70 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:24:3:
  22 | 
  23 |   @Mutation
> 24 |   SET_CHOICES({ name, data }) {
     |   ^
  25 |     this[name] = data;
  26 |   }
  27 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:24:15:
  22 | 
  23 |   @Mutation
> 24 |   SET_CHOICES({ name, data }) {
     |               ^
  25 |     this[name] = data;
  26 |   }
  27 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:29:3:
  27 | 
  28 |   @Action
> 29 |   async fetchChoices({ fetchFunc, name, errorMsg }) {
     |   ^
  30 |     return await getFetchRequest(
  31 |       fetchFunc,
  32 |       data => this.SET_CHOICES({ name, data }),


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:29:22:
  27 | 
  28 |   @Action
> 29 |   async fetchChoices({ fetchFunc, name, errorMsg }) {
     |                      ^
  30 |     return await getFetchRequest(
  31 |       fetchFunc,
  32 |       data => this.SET_CHOICES({ name, data }),


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:37:3:
  35 |   }
  36 | 
> 37 |   get absenceExcuses() {
     |   ^
  38 |     if (this._absenceExcuses !== null) {
  39 |       return new Promise(resolve => {
  40 |         resolve(this._absenceExcuses);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:51:3:
  49 |   }
  50 | 
> 51 |   get absenceStatuses() {
     |   ^
  52 |     if (this._absenceStatuses !== null) {
  53 |       return new Promise(resolve => {
  54 |         resolve(this._absenceStatuses);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:65:3:
  63 |   }
  64 | 
> 65 |   get encouragementTypes() {
     |   ^
  66 |     if (this._encouragementTypes !== null) {
  67 |       return new Promise(resolve => {
  68 |         resolve(this._encouragementTypes);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:79:3:
  77 |   }
  78 | 
> 79 |   get lessonTypes() {
     |   ^
  80 |     if (this._lessonTypes !== null) {
  81 |       return new Promise(resolve => {
  82 |         resolve(this._lessonTypes);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:93:3:
  91 |   }
  92 | 
> 93 |   get punishmentTypes() {
     |   ^
  94 |     if (this._punishmentTypes !== null) {
  95 |       return new Promise(resolve => {
  96 |         resolve(this._punishmentTypes);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:107:3:
  105 |   }
  106 | 
> 107 |   get studentPosts() {
      |   ^
  108 |     if (this._studentPosts !== null) {
  109 |       return new Promise(resolve => {
  110 |         resolve(this._studentPosts);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:121:3:
  119 |   }
  120 | 
> 121 |   get studentStatuses() {
      |   ^
  122 |     if (this._studentStatuses !== null) {
  123 |       return new Promise(resolve => {
  124 |         resolve(this._studentStatuses);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:135:3:
  133 |   }
  134 | 
> 135 |   get teacherPosts() {
      |   ^
  136 |     if (this._teacherPosts !== null) {
  137 |       return new Promise(resolve => {
  138 |         resolve(this._teacherPosts);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/choices.js:149:3:
  147 |   }
  148 | 
> 149 |   get teacherRanks() {
      |   ^
  150 |     if (this._teacherRanks !== null) {
  151 |       return new Promise(resolve => {
  152 |         resolve(this._teacherRanks);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:41:3:
  39 | 
  40 |   @Mutation
> 41 |   SET_IS_LOADED({ field, value }) {
     |   ^
  42 |     this[field] = value;
  43 |   }
  44 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:41:17:
  39 | 
  40 |   @Mutation
> 41 |   SET_IS_LOADED({ field, value }) {
     |                 ^
  42 |     this[field] = value;
  43 |   }
  44 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:46:3:
  44 | 
  45 |   @Mutation
> 46 |   SET_PUBLISHERS(publishers) {
     |   ^
  47 |     this._publishersList = publishers;
  48 |   }
  49 | 


warning: Argument 'publishers' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:46:18:
  44 | 
  45 |   @Mutation
> 46 |   SET_PUBLISHERS(publishers) {
     |                  ^
  47 |     this._publishersList = publishers;
  48 |   }
  49 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:51:3:
  49 | 
  50 |   @Action
> 51 |   async fetchPublishers() {
     |   ^
  52 |     return await getFetchRequest(
  53 |       getPublishers,
  54 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:63:3:
  61 | 
  62 |   @Action
> 63 |   async addPublisher(newItem) {
     |   ^
  64 |     return await getAddRequest(
  65 |       addPublisher,
  66 |       this.SET_PUBLISHERS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:63:22:
  61 | 
  62 |   @Action
> 63 |   async addPublisher(newItem) {
     |                      ^
  64 |     return await getAddRequest(
  65 |       addPublisher,
  66 |       this.SET_PUBLISHERS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:73:3:
  71 | 
  72 |   @Action
> 73 |   async editPublisher({ id, ...newData }) {
     |   ^
  74 |     return await getEditRequest(
  75 |       editPublisher,
  76 |       this.SET_PUBLISHERS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:73:23:
  71 | 
  72 |   @Action
> 73 |   async editPublisher({ id, ...newData }) {
     |                       ^
  74 |     return await getEditRequest(
  75 |       editPublisher,
  76 |       this.SET_PUBLISHERS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:83:3:
  81 | 
  82 |   @Action
> 83 |   async deletePublisher(id) {
     |   ^
  84 |     return await getDeleteRequest(
  85 |       deletePublisher,
  86 |       this.SET_PUBLISHERS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:83:25:
  81 | 
  82 |   @Action
> 83 |   async deletePublisher(id) {
     |                         ^
  84 |     return await getDeleteRequest(
  85 |       deletePublisher,
  86 |       this.SET_PUBLISHERS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:92:3:
  90 |   }
  91 | 
> 92 |   get publishers() {
     |   ^
  93 |     if (!this._publishersLoaded) {
  94 |       PapersModule.fetchPublishers();
  95 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:101:3:
   99 | 
  100 |   @Mutation
> 101 |   SET_AUTHORS(authors) {
      |   ^
  102 |     this._authorsList = authors;
  103 |   }
  104 | 


warning: Argument 'authors' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:101:15:
   99 | 
  100 |   @Mutation
> 101 |   SET_AUTHORS(authors) {
      |               ^
  102 |     this._authorsList = authors;
  103 |   }
  104 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:106:3:
  104 | 
  105 |   @Action
> 106 |   async fetchAuthors() {
      |   ^
  107 |     return await getFetchRequest(
  108 |       getAuthors,
  109 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:118:3:
  116 | 
  117 |   @Action
> 118 |   async addAuthor(newItem) {
      |   ^
  119 |     return await getAddRequest(
  120 |       addAuthor,
  121 |       this.SET_AUTHORS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:118:19:
  116 | 
  117 |   @Action
> 118 |   async addAuthor(newItem) {
      |                   ^
  119 |     return await getAddRequest(
  120 |       addAuthor,
  121 |       this.SET_AUTHORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:128:3:
  126 | 
  127 |   @Action
> 128 |   async editAuthors({ id, ...newData }) {
      |   ^
  129 |     return await getEditRequest(
  130 |       editAuthor,
  131 |       this.SET_AUTHORS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:128:21:
  126 | 
  127 |   @Action
> 128 |   async editAuthors({ id, ...newData }) {
      |                     ^
  129 |     return await getEditRequest(
  130 |       editAuthor,
  131 |       this.SET_AUTHORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:138:3:
  136 | 
  137 |   @Action
> 138 |   async deleteAuthor(id) {
      |   ^
  139 |     return await getDeleteRequest(
  140 |       deleteAuthor,
  141 |       this.SET_AUTHORS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:138:22:
  136 | 
  137 |   @Action
> 138 |   async deleteAuthor(id) {
      |                      ^
  139 |     return await getDeleteRequest(
  140 |       deleteAuthor,
  141 |       this.SET_AUTHORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:147:3:
  145 |   }
  146 | 
> 147 |   get authors() {
      |   ^
  148 |     if (!this._authorsLoaded) {
  149 |       PapersModule.fetchAuthors();
  150 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:156:3:
  154 | 
  155 |   @Mutation
> 156 |   SET_CATEGORIES(payload) {
      |   ^
  157 |     this._categoriesList = payload;
  158 |   }
  159 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:156:18:
  154 | 
  155 |   @Mutation
> 156 |   SET_CATEGORIES(payload) {
      |                  ^
  157 |     this._categoriesList = payload;
  158 |   }
  159 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:161:3:
  159 | 
  160 |   @Action
> 161 |   async fetchCategories() {
      |   ^
  162 |     return await getFetchRequest(
  163 |       getPaperCategories,
  164 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:173:3:
  171 | 
  172 |   @Action
> 173 |   async addCategory(newItem) {
      |   ^
  174 |     return await getAddRequest(
  175 |       addPaperCategory,
  176 |       this.SET_CATEGORIES,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:173:21:
  171 | 
  172 |   @Action
> 173 |   async addCategory(newItem) {
      |                     ^
  174 |     return await getAddRequest(
  175 |       addPaperCategory,
  176 |       this.SET_CATEGORIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:183:3:
  181 | 
  182 |   @Action
> 183 |   async editCategories({ id, ...newData }) {
      |   ^
  184 |     return await getEditRequest(
  185 |       editPaperCategory,
  186 |       this.SET_CATEGORIES,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:183:24:
  181 | 
  182 |   @Action
> 183 |   async editCategories({ id, ...newData }) {
      |                        ^
  184 |     return await getEditRequest(
  185 |       editPaperCategory,
  186 |       this.SET_CATEGORIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:193:3:
  191 | 
  192 |   @Action
> 193 |   async deleteCategory(id) {
      |   ^
  194 |     return await getDeleteRequest(
  195 |       deletePaperCategory,
  196 |       this.SET_CATEGORIES,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:193:24:
  191 | 
  192 |   @Action
> 193 |   async deleteCategory(id) {
      |                        ^
  194 |     return await getDeleteRequest(
  195 |       deletePaperCategory,
  196 |       this.SET_CATEGORIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/papers.js:202:3:
  200 |   }
  201 | 
> 202 |   get categories() {
      |   ^
  203 |     if (!this._categoriesLoaded) {
  204 |       PapersModule.fetchCategories();
  205 |     }


warning: 'getError' is defined but never used (@typescript-eslint/no-unused-vars) at src/store/modules/reference.js:44:10:
  42 |   getFetchRequest,
  43 | } from "@/utils/mutators";
> 44 | import { getError } from "@/utils/message";
     |          ^
  45 | 
  46 | @Module({ store, name: "reference", namespaced: true })
  47 | class Reference extends VuexModule {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:70:3:
  68 | 
  69 |   @Mutation
> 70 |   SET_IS_LOADED({ field, value }) {
     |   ^
  71 |     this[field] = value;
  72 |   }
  73 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:70:17:
  68 | 
  69 |   @Mutation
> 70 |   SET_IS_LOADED({ field, value }) {
     |                 ^
  71 |     this[field] = value;
  72 |   }
  73 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:76:3:
  74 |   // MILGROUPS
  75 |   @Mutation
> 76 |   SET_MILGROUPS(payload) {
     |   ^
  77 |     this._milgroups = payload;
  78 |   }
  79 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:76:17:
  74 |   // MILGROUPS
  75 |   @Mutation
> 76 |   SET_MILGROUPS(payload) {
     |                 ^
  77 |     this._milgroups = payload;
  78 |   }
  79 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:81:3:
  79 | 
  80 |   @Action
> 81 |   async fetchMilgroups() {
     |   ^
  82 |     return await getFetchRequest(
  83 |       getMilGroups,
  84 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:93:3:
  91 | 
  92 |   @Action
> 93 |   async addMilgroup(newItem) {
     |   ^
  94 |     return await getAddRequest(
  95 |       addMilGroup,
  96 |       this.SET_MILGROUPS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:93:21:
  91 | 
  92 |   @Action
> 93 |   async addMilgroup(newItem) {
     |                     ^
  94 |     return await getAddRequest(
  95 |       addMilGroup,
  96 |       this.SET_MILGROUPS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:103:3:
  101 | 
  102 |   @Action
> 103 |   async editMilgroup({ id, ...newData }) {
      |   ^
  104 |     return await getEditRequest(
  105 |       editMilGroup,
  106 |       this.SET_MILGROUPS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:103:22:
  101 | 
  102 |   @Action
> 103 |   async editMilgroup({ id, ...newData }) {
      |                      ^
  104 |     return await getEditRequest(
  105 |       editMilGroup,
  106 |       this.SET_MILGROUPS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:113:3:
  111 | 
  112 |   @Action
> 113 |   async deleteMilgroup(id) {
      |   ^
  114 |     return await getDeleteRequest(
  115 |       deleteMilGroup,
  116 |       this.SET_MILGROUPS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:113:24:
  111 | 
  112 |   @Action
> 113 |   async deleteMilgroup(id) {
      |                        ^
  114 |     return await getDeleteRequest(
  115 |       deleteMilGroup,
  116 |       this.SET_MILGROUPS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:122:3:
  120 |   }
  121 | 
> 122 |   get milgroups() {
      |   ^
  123 |     if (!this._milgroupsLoaded) {
  124 |       ReferenceModule.fetchMilgroups();
  125 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:132:3:
  130 |   // MILFACULTIES
  131 |   @Mutation
> 132 |   SET_MILFACULTIES(payload) {
      |   ^
  133 |     this._milfaculties = payload;
  134 |   }
  135 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:132:20:
  130 |   // MILFACULTIES
  131 |   @Mutation
> 132 |   SET_MILFACULTIES(payload) {
      |                    ^
  133 |     this._milfaculties = payload;
  134 |   }
  135 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:137:3:
  135 | 
  136 |   @Action
> 137 |   async fetchMilfaculties() {
      |   ^
  138 |     return await getFetchRequest(
  139 |       getMilFaculties,
  140 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:149:3:
  147 | 
  148 |   @Action
> 149 |   async addMilfaculty(newItem) {
      |   ^
  150 |     return await getAddRequest(
  151 |       addMilFaculty,
  152 |       this.SET_MILFACULTIES,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:149:23:
  147 | 
  148 |   @Action
> 149 |   async addMilfaculty(newItem) {
      |                       ^
  150 |     return await getAddRequest(
  151 |       addMilFaculty,
  152 |       this.SET_MILFACULTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:159:3:
  157 | 
  158 |   @Action
> 159 |   async editMilfaculty({ id, ...newData }) {
      |   ^
  160 |     return await getEditRequest(
  161 |       editMilFaculty,
  162 |       this.SET_MILFACULTIES,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:159:24:
  157 | 
  158 |   @Action
> 159 |   async editMilfaculty({ id, ...newData }) {
      |                        ^
  160 |     return await getEditRequest(
  161 |       editMilFaculty,
  162 |       this.SET_MILFACULTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:169:3:
  167 | 
  168 |   @Action
> 169 |   async deleteMilfaculty(id) {
      |   ^
  170 |     return await getDeleteRequest(
  171 |       deleteMilGroup,
  172 |       this.SET_MILFACULTIES,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:169:26:
  167 | 
  168 |   @Action
> 169 |   async deleteMilfaculty(id) {
      |                          ^
  170 |     return await getDeleteRequest(
  171 |       deleteMilGroup,
  172 |       this.SET_MILFACULTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:178:3:
  176 |   }
  177 | 
> 178 |   get milfaculties() {
      |   ^
  179 |     if (!this._milfacultiesLoaded) {
  180 |       ReferenceModule.fetchMilfaculties();
  181 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:188:3:
  186 |   // milspecialties
  187 |   @Mutation
> 188 |   SET_MILSPECIALTIES(payload) {
      |   ^
  189 |     this._milspecialties = payload;
  190 |   }
  191 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:188:22:
  186 |   // milspecialties
  187 |   @Mutation
> 188 |   SET_MILSPECIALTIES(payload) {
      |                      ^
  189 |     this._milspecialties = payload;
  190 |   }
  191 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:193:3:
  191 | 
  192 |   @Action
> 193 |   async fetchMilSpecialties() {
      |   ^
  194 |     return await getFetchRequest(
  195 |       getMilSpecialties,
  196 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:205:3:
  203 | 
  204 |   @Action
> 205 |   async addMilSpecialty(newItem) {
      |   ^
  206 |     return await getAddRequest(
  207 |       addMilSpecialty,
  208 |       this.SET_MILSPECIALTIES,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:205:25:
  203 | 
  204 |   @Action
> 205 |   async addMilSpecialty(newItem) {
      |                         ^
  206 |     return await getAddRequest(
  207 |       addMilSpecialty,
  208 |       this.SET_MILSPECIALTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:215:3:
  213 | 
  214 |   @Action
> 215 |   async editMilSpecialty({ id, ...newData }) {
      |   ^
  216 |     return await getEditRequest(
  217 |       editMilSpecialty,
  218 |       this.SET_MILSPECIALTIES,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:215:26:
  213 | 
  214 |   @Action
> 215 |   async editMilSpecialty({ id, ...newData }) {
      |                          ^
  216 |     return await getEditRequest(
  217 |       editMilSpecialty,
  218 |       this.SET_MILSPECIALTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:225:3:
  223 | 
  224 |   @Action
> 225 |   async deleteMilSpecialty(id) {
      |   ^
  226 |     return await getDeleteRequest(
  227 |       deleteMilSpecialty,
  228 |       this.SET_MILSPECIALTIES,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:225:28:
  223 | 
  224 |   @Action
> 225 |   async deleteMilSpecialty(id) {
      |                            ^
  226 |     return await getDeleteRequest(
  227 |       deleteMilSpecialty,
  228 |       this.SET_MILSPECIALTIES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:234:3:
  232 |   }
  233 | 
> 234 |   get milspecialties() {
      |   ^
  235 |     if (!this._milspecialtiesLoaded) {
  236 |       ReferenceModule.fetchMilSpecialties();
  237 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:244:3:
  242 |   // ACHIEVEMENT TYPES
  243 |   @Mutation
> 244 |   SET_ACHIEVEMENT_TYPES(payload) {
      |   ^
  245 |     this._achievementTypes = payload;
  246 |   }
  247 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:244:25:
  242 |   // ACHIEVEMENT TYPES
  243 |   @Mutation
> 244 |   SET_ACHIEVEMENT_TYPES(payload) {
      |                         ^
  245 |     this._achievementTypes = payload;
  246 |   }
  247 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:249:3:
  247 | 
  248 |   @Action
> 249 |   async fetchAchievementTypes() {
      |   ^
  250 |     return await getFetchRequest(
  251 |       getAchievementTypes,
  252 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:261:3:
  259 | 
  260 |   @Action
> 261 |   async addAchievementType(newItem) {
      |   ^
  262 |     return await getAddRequest(
  263 |       addAchievementType,
  264 |       this.SET_ACHIEVEMENT_TYPES,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:261:28:
  259 | 
  260 |   @Action
> 261 |   async addAchievementType(newItem) {
      |                            ^
  262 |     return await getAddRequest(
  263 |       addAchievementType,
  264 |       this.SET_ACHIEVEMENT_TYPES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:271:3:
  269 | 
  270 |   @Action
> 271 |   async editAchievementType({ id, ...newData }) {
      |   ^
  272 |     return await getEditRequest(
  273 |       editAchievementType,
  274 |       this.SET_ACHIEVEMENT_TYPES,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:271:29:
  269 | 
  270 |   @Action
> 271 |   async editAchievementType({ id, ...newData }) {
      |                             ^
  272 |     return await getEditRequest(
  273 |       editAchievementType,
  274 |       this.SET_ACHIEVEMENT_TYPES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:281:3:
  279 | 
  280 |   @Action
> 281 |   async deleteAchievementType(id) {
      |   ^
  282 |     return await getDeleteRequest(
  283 |       deleteMilGroup,
  284 |       this.SET_ACHIEVEMENT_TYPES,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:281:31:
  279 | 
  280 |   @Action
> 281 |   async deleteAchievementType(id) {
      |                               ^
  282 |     return await getDeleteRequest(
  283 |       deleteMilGroup,
  284 |       this.SET_ACHIEVEMENT_TYPES,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:290:3:
  288 |   }
  289 | 
> 290 |   get achievementTypes() {
      |   ^
  291 |     if (!this._achievementTypesLoaded) {
  292 |       ReferenceModule.fetchAchievementTypes();
  293 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:300:3:
  298 |   // PROGRAMS
  299 |   @Mutation
> 300 |   SET_PROGRAMS(payload) {
      |   ^
  301 |     this._programs = payload;
  302 |   }
  303 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:300:16:
  298 |   // PROGRAMS
  299 |   @Mutation
> 300 |   SET_PROGRAMS(payload) {
      |                ^
  301 |     this._programs = payload;
  302 |   }
  303 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:305:3:
  303 | 
  304 |   @Action
> 305 |   async fetchPrograms() {
      |   ^
  306 |     return await getFetchRequest(
  307 |       getPrograms,
  308 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:317:3:
  315 | 
  316 |   @Action
> 317 |   async addProgram(newItem) {
      |   ^
  318 |     return await getAddRequest(
  319 |       addProgram,
  320 |       this.SET_PROGRAMS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:317:20:
  315 | 
  316 |   @Action
> 317 |   async addProgram(newItem) {
      |                    ^
  318 |     return await getAddRequest(
  319 |       addProgram,
  320 |       this.SET_PROGRAMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:327:3:
  325 | 
  326 |   @Action
> 327 |   async editProgram({ id, ...newData }) {
      |   ^
  328 |     return await getEditRequest(
  329 |       editProgram,
  330 |       this.SET_PROGRAMS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:327:21:
  325 | 
  326 |   @Action
> 327 |   async editProgram({ id, ...newData }) {
      |                     ^
  328 |     return await getEditRequest(
  329 |       editProgram,
  330 |       this.SET_PROGRAMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:337:3:
  335 | 
  336 |   @Action
> 337 |   async deleteProgram(id) {
      |   ^
  338 |     return await getDeleteRequest(
  339 |       deleteProgram,
  340 |       this.SET_PROGRAMS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:337:23:
  335 | 
  336 |   @Action
> 337 |   async deleteProgram(id) {
      |                       ^
  338 |     return await getDeleteRequest(
  339 |       deleteProgram,
  340 |       this.SET_PROGRAMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:346:3:
  344 |   }
  345 | 
> 346 |   get programs() {
      |   ^
  347 |     if (!this._programsLoaded) {
  348 |       ReferenceModule.fetchPrograms();
  349 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:356:3:
  354 |   // ROOMS
  355 |   @Mutation
> 356 |   SET_ROOMS(payload) {
      |   ^
  357 |     this._rooms = payload;
  358 |   }
  359 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:356:13:
  354 |   // ROOMS
  355 |   @Mutation
> 356 |   SET_ROOMS(payload) {
      |             ^
  357 |     this._rooms = payload;
  358 |   }
  359 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:361:3:
  359 | 
  360 |   @Action
> 361 |   async fetchRooms() {
      |   ^
  362 |     return await getFetchRequest(
  363 |       getRooms,
  364 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:373:3:
  371 | 
  372 |   @Action
> 373 |   async addRoom(newItem) {
      |   ^
  374 |     return await getAddRequest(
  375 |       addRoom,
  376 |       this.SET_ROOMS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:373:17:
  371 | 
  372 |   @Action
> 373 |   async addRoom(newItem) {
      |                 ^
  374 |     return await getAddRequest(
  375 |       addRoom,
  376 |       this.SET_ROOMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:383:3:
  381 | 
  382 |   @Action
> 383 |   async editRoom({ id, ...newData }) {
      |   ^
  384 |     return await getEditRequest(
  385 |       editRoom,
  386 |       this.SET_ROOMS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:383:18:
  381 | 
  382 |   @Action
> 383 |   async editRoom({ id, ...newData }) {
      |                  ^
  384 |     return await getEditRequest(
  385 |       editRoom,
  386 |       this.SET_ROOMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:393:3:
  391 | 
  392 |   @Action
> 393 |   async deleteRoom(id) {
      |   ^
  394 |     return await getDeleteRequest(
  395 |       deleteRoom,
  396 |       this.SET_ROOMS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:393:20:
  391 | 
  392 |   @Action
> 393 |   async deleteRoom(id) {
      |                    ^
  394 |     return await getDeleteRequest(
  395 |       deleteRoom,
  396 |       this.SET_ROOMS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:402:3:
  400 |   }
  401 | 
> 402 |   get rooms() {
      |   ^
  403 |     if (!this._roomsLoaded) {
  404 |       ReferenceModule.fetchRooms();
  405 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:412:3:
  410 |   // SKILLS
  411 |   @Mutation
> 412 |   SET_SKILLS(payload) {
      |   ^
  413 |     this._skills = payload;
  414 |   }
  415 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:412:14:
  410 |   // SKILLS
  411 |   @Mutation
> 412 |   SET_SKILLS(payload) {
      |              ^
  413 |     this._skills = payload;
  414 |   }
  415 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:417:3:
  415 | 
  416 |   @Action
> 417 |   async fetchSkills() {
      |   ^
  418 |     return await getFetchRequest(
  419 |       getSkills,
  420 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:429:3:
  427 | 
  428 |   @Action
> 429 |   async addSkill(newItem) {
      |   ^
  430 |     return await getAddRequest(
  431 |       addSkill,
  432 |       this.SET_SKILLS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:429:18:
  427 | 
  428 |   @Action
> 429 |   async addSkill(newItem) {
      |                  ^
  430 |     return await getAddRequest(
  431 |       addSkill,
  432 |       this.SET_SKILLS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:439:3:
  437 | 
  438 |   @Action
> 439 |   async editSkill({ id, ...newData }) {
      |   ^
  440 |     return await getEditRequest(
  441 |       editSkill,
  442 |       this.SET_SKILLS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:439:19:
  437 | 
  438 |   @Action
> 439 |   async editSkill({ id, ...newData }) {
      |                   ^
  440 |     return await getEditRequest(
  441 |       editSkill,
  442 |       this.SET_SKILLS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:449:3:
  447 | 
  448 |   @Action
> 449 |   async deleteSkill(id) {
      |   ^
  450 |     return await getDeleteRequest(
  451 |       deleteSkill,
  452 |       this.SET_SKILLS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:449:21:
  447 | 
  448 |   @Action
> 449 |   async deleteSkill(id) {
      |                     ^
  450 |     return await getDeleteRequest(
  451 |       deleteSkill,
  452 |       this.SET_SKILLS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/reference.js:458:3:
  456 |   }
  457 | 
> 458 |   get skills() {
      |   ^
  459 |     if (!this._skillsLoaded) {
  460 |       ReferenceModule.fetchSkills();
  461 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/settings.js:20:3:
  18 | 
  19 |   @Mutation
> 20 |   CHANGE_SETTING({ key, value }) {
     |   ^
  21 |     // eslint-disable-next-line no-prototype-builtins
  22 |     if (this.hasOwnProperty(key)) {
  23 |       this[key] = value;


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/settings.js:20:18:
  18 | 
  19 |   @Mutation
> 20 |   CHANGE_SETTING({ key, value }) {
     |                  ^
  21 |     // eslint-disable-next-line no-prototype-builtins
  22 |     if (this.hasOwnProperty(key)) {
  23 |       this[key] = value;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/settings.js:28:3:
  26 | 
  27 |   @Action({ commit: "CHANGE_SETTING" })
> 28 |   changeSetting(data) {
     |   ^
  29 |     return data;
  30 |   }
  31 | }


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/settings.js:28:17:
  26 | 
  27 |   @Action({ commit: "CHANGE_SETTING" })
> 28 |   changeSetting(data) {
     |                 ^
  29 |     return data;
  30 |   }
  31 | }


warning: 'postError' is defined but never used (@typescript-eslint/no-unused-vars) at src/store/modules/subjects.js:30:10:
  28 |   getOrderChangeRequest,
  29 | } from "@/utils/mutators";
> 30 | import { postError } from "@/utils/message";
     |          ^
  31 | 
  32 | @Module({ store, name: "subjects", namespaced: true })
  33 | class Subjects extends VuexModule {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:45:3:
  43 | 
  44 |   @Mutation
> 45 |   SET_IS_LOADED({ field, value }) {
     |   ^
  46 |     this[field] = value;
  47 |   }
  48 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:45:17:
  43 | 
  44 |   @Mutation
> 45 |   SET_IS_LOADED({ field, value }) {
     |                 ^
  46 |     this[field] = value;
  47 |   }
  48 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:50:3:
  48 | 
  49 |   @Mutation
> 50 |   UPSERT_SUBJECT(payload) {
     |   ^
  51 |     const index = this._subjectsList.findIndex(e => e.id === payload.id);
  52 | 
  53 |     if (index === -1) {


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:50:18:
  48 | 
  49 |   @Mutation
> 50 |   UPSERT_SUBJECT(payload) {
     |                  ^
  51 |     const index = this._subjectsList.findIndex(e => e.id === payload.id);
  52 | 
  53 |     if (index === -1) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:63:3:
  61 | 
  62 |   @Mutation
> 63 |   SET_SUBJECTS(payload) {
     |   ^
  64 |     this._subjectsList = payload;
  65 |   }
  66 | 


warning: Argument 'payload' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:63:16:
  61 | 
  62 |   @Mutation
> 63 |   SET_SUBJECTS(payload) {
     |                ^
  64 |     this._subjectsList = payload;
  65 |   }
  66 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:68:3:
  66 | 
  67 |   @Action
> 68 |   async fetchSubjects() {
     |   ^
  69 |     return await getFetchRequest(
  70 |       getSubjects,
  71 |       data => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:80:3:
  78 | 
  79 |   @Action
> 80 |   async addSubject(newItem) {
     |   ^
  81 |     return await getAddRequest(
  82 |       addSubject,
  83 |       this.SET_SUBJECTS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:80:20:
  78 | 
  79 |   @Action
> 80 |   async addSubject(newItem) {
     |                    ^
  81 |     return await getAddRequest(
  82 |       addSubject,
  83 |       this.SET_SUBJECTS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:90:3:
  88 | 
  89 |   @Action
> 90 |   async editSubject({ id, ...newData }) {
     |   ^
  91 |     return await getEditRequest(
  92 |       editSubject,
  93 |       this.SET_SUBJECTS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:90:21:
  88 | 
  89 |   @Action
> 90 |   async editSubject({ id, ...newData }) {
     |                     ^
  91 |     return await getEditRequest(
  92 |       editSubject,
  93 |       this.SET_SUBJECTS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:100:3:
   98 | 
   99 |   @Action
> 100 |   async deleteSubject(id) {
      |   ^
  101 |     return await getDeleteRequest(
  102 |       deleteSubject,
  103 |       this.SET_SUBJECTS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:100:23:
   98 | 
   99 |   @Action
> 100 |   async deleteSubject(id) {
      |                       ^
  101 |     return await getDeleteRequest(
  102 |       deleteSubject,
  103 |       this.SET_SUBJECTS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:110:3:
  108 | 
  109 |   @Action
> 110 |   async upsertSubject(newData) {
      |   ^
  111 |     try {
  112 |       const { data } = await upsertSubject(newData);
  113 |       this.UPSERT_SUBJECT(data);


warning: Argument 'newData' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:110:23:
  108 | 
  109 |   @Action
> 110 |   async upsertSubject(newData) {
      |                       ^
  111 |     try {
  112 |       const { data } = await upsertSubject(newData);
  113 |       this.UPSERT_SUBJECT(data);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:126:3:
  124 |   }
  125 | 
> 126 |   get subjects() {
      |   ^
  127 |     if (!this._subjectsLoaded) {
  128 |       SubjectsModule.fetchSubjects();
  129 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:137:3:
  135 | 
  136 |   @Mutation
> 137 |   SET_SUBJECT_INFO(data) {
      |   ^
  138 |     this._subjectInfo = data;
  139 |   }
  140 | 


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:137:20:
  135 | 
  136 |   @Mutation
> 137 |   SET_SUBJECT_INFO(data) {
      |                    ^
  138 |     this._subjectInfo = data;
  139 |   }
  140 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:142:3:
  140 | 
  141 |   @Mutation
> 142 |   SET_SUBJECT_ID(id) {
      |   ^
  143 |     this.subjectId = id;
  144 |   }
  145 | 


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:142:18:
  140 | 
  141 |   @Mutation
> 142 |   SET_SUBJECT_ID(id) {
      |                  ^
  143 |     this.subjectId = id;
  144 |   }
  145 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:147:3:
  145 | 
  146 |   @Action
> 147 |   setCurrentSubjectId(id) {
      |   ^
  148 |     this.SET_SUBJECT_ID(id);
  149 |     this.SET_IS_LOADED({ field: "_subjectInfoLoaded", value: false });
  150 |   }


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:147:23:
  145 | 
  146 |   @Action
> 147 |   setCurrentSubjectId(id) {
      |                       ^
  148 |     this.SET_SUBJECT_ID(id);
  149 |     this.SET_IS_LOADED({ field: "_subjectInfoLoaded", value: false });
  150 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:153:3:
  151 | 
  152 |   @Action
> 153 |   async fetchSubject() {
      |   ^
  154 |     if (!this.subjectId) { return false; }
  155 | 
  156 |     return await getFetchRequest(


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:168:3:
  166 |   }
  167 | 
> 168 |   get currentSubject() {
      |   ^
  169 |     if (!this._subjectInfoLoaded) {
  170 |       SubjectsModule.fetchSubject();
  171 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:177:3:
  175 | 
  176 |   @Mutation
> 177 |   SET_SECTIONS(data) {
      |   ^
  178 |     this._subjectSections = data;
  179 |   }
  180 | 


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:177:16:
  175 | 
  176 |   @Mutation
> 177 |   SET_SECTIONS(data) {
      |                ^
  178 |     this._subjectSections = data;
  179 |   }
  180 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:182:3:
  180 | 
  181 |   @Action
> 182 |   async fetchSections() {
      |   ^
  183 |     if (!this.subjectId) { return false; }
  184 | 
  185 |     return await getFetchRequest(


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:195:3:
  193 |   }
  194 | 
> 195 |   get currentSections() {
      |   ^
  196 |     if (!this._subjectSectionsLoaded) {
  197 |       SubjectsModule.fetchSections();
  198 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:204:3:
  202 | 
  203 |   @Action
> 204 |   async updateSectionTitle({ id, ...newData }) {
      |   ^
  205 |     getEditRequest(
  206 |       editSectionTitle,
  207 |       this.SET_SECTIONS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:204:28:
  202 | 
  203 |   @Action
> 204 |   async updateSectionTitle({ id, ...newData }) {
      |                            ^
  205 |     getEditRequest(
  206 |       editSectionTitle,
  207 |       this.SET_SECTIONS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:214:3:
  212 | 
  213 |   @Action
> 214 |   async addSection(newItem) {
      |   ^
  215 |     return await getAddRequest(
  216 |       addSection,
  217 |       this.SET_SECTIONS,


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:214:20:
  212 | 
  213 |   @Action
> 214 |   async addSection(newItem) {
      |                    ^
  215 |     return await getAddRequest(
  216 |       addSection,
  217 |       this.SET_SECTIONS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:224:3:
  222 | 
  223 |   @Action
> 224 |   async deleteSection(id) {
      |   ^
  225 |     return await getDeleteRequest(
  226 |       deleteSection,
  227 |       this.SET_SECTIONS,


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:224:23:
  222 | 
  223 |   @Action
> 224 |   async deleteSection(id) {
      |                       ^
  225 |     return await getDeleteRequest(
  226 |       deleteSection,
  227 |       this.SET_SECTIONS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:234:3:
  232 | 
  233 |   @Action
> 234 |   async changeSectionsOrder({ id, order }) {
      |   ^
  235 |     return await getOrderChangeRequest(
  236 |       changeSectionOrder,
  237 |       this.SET_SECTIONS,


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/subjects.js:234:29:
  232 | 
  233 |   @Action
> 234 |   async changeSectionsOrder({ id, order }) {
      |                             ^
  235 |     return await getOrderChangeRequest(
  236 |       changeSectionOrder,
  237 |       this.SET_SECTIONS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:31:3:
  29 | 
  30 |   @Mutation
> 31 |   SET_IS_LOADED(value) {
     |   ^
  32 |     this._userInfoLoaded = value;
  33 |   }
  34 | 


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:31:17:
  29 | 
  30 |   @Mutation
> 31 |   SET_IS_LOADED(value) {
     |                 ^
  32 |     this._userInfoLoaded = value;
  33 |   }
  34 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:36:3:
  34 | 
  35 |   @Mutation
> 36 |   SET_TOKENS({ access, refresh }) {
     |   ^
  37 |     this.accessToken = access;
  38 |     this.refreshToken = refresh;
  39 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:36:14:
  34 | 
  35 |   @Mutation
> 36 |   SET_TOKENS({ access, refresh }) {
     |              ^
  37 |     this.accessToken = access;
  38 |     this.refreshToken = refresh;
  39 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:44:3:
  42 | 
  43 |   @Mutation
> 44 |   RESET_TOKENS() {
     |   ^
  45 |     this.accessToken = "";
  46 |     this.refreshToken = "";
  47 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:52:3:
  50 | 
  51 |   @Mutation
> 52 |   SET_USER_ID(userId) {
     |   ^
  53 |     this.userId = userId;
  54 |   }
  55 | 


warning: Argument 'userId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:52:15:
  50 | 
  51 |   @Mutation
> 52 |   SET_USER_ID(userId) {
     |               ^
  53 |     this.userId = userId;
  54 |   }
  55 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:57:3:
  55 | 
  56 |   @Mutation
> 57 |   SET_EMAIL(email) {
     |   ^
  58 |     this._email = email;
  59 |   }
  60 | 


warning: Argument 'email' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:57:13:
  55 | 
  56 |   @Mutation
> 57 |   SET_EMAIL(email) {
     |             ^
  58 |     this._email = email;
  59 |   }
  60 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:62:3:
  60 | 
  61 |   @Mutation
> 62 |   SET_CAMPUSES(campuses) {
     |   ^
  63 |     this._campuses = campuses;
  64 |   }
  65 | 


warning: Argument 'campuses' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:62:16:
  60 | 
  61 |   @Mutation
> 62 |   SET_CAMPUSES(campuses) {
     |                ^
  63 |     this._campuses = campuses;
  64 |   }
  65 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:67:3:
  65 | 
  66 |   @Mutation
> 67 |   SET_PERMISSIONS(permissions) {
     |   ^
  68 |     this._permissions = permissions;
  69 |   }
  70 | 


warning: Argument 'permissions' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:67:19:
  65 | 
  66 |   @Mutation
> 67 |   SET_PERMISSIONS(permissions) {
     |                   ^
  68 |     this._permissions = permissions;
  69 |   }
  70 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:72:3:
  70 | 
  71 |   @Mutation
> 72 |   SET_PERSON(person) {
     |   ^
  73 |     this._person = person;
  74 |   }
  75 | 


warning: Argument 'person' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:72:14:
  70 | 
  71 |   @Mutation
> 72 |   SET_PERSON(person) {
     |              ^
  73 |     this._person = person;
  74 |   }
  75 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:77:3:
  75 | 
  76 |   @Mutation
> 77 |   SET_IS_SUPERUSER(isSuperuser) {
     |   ^
  78 |     this._isSuperuser = isSuperuser;
  79 |   }
  80 | 


warning: Argument 'isSuperuser' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:77:20:
  75 | 
  76 |   @Mutation
> 77 |   SET_IS_SUPERUSER(isSuperuser) {
     |                    ^
  78 |     this._isSuperuser = isSuperuser;
  79 |   }
  80 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:82:3:
  80 | 
  81 |   @Action
> 82 |   async login(userInfo) {
     |   ^
  83 |     const { email, password } = userInfo;
  84 | 
  85 |     try {


warning: Argument 'userInfo' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:82:15:
  80 | 
  81 |   @Action
> 82 |   async login(userInfo) {
     |               ^
  83 |     const { email, password } = userInfo;
  84 | 
  85 |     try {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:97:3:
   95 | 
   96 |   @Action
>  97 |   async getUser() {
      |   ^
   98 |     try {
   99 |       const { data } = await getUser(this.token);
  100 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:121:3:
  119 | 
  120 |   @Action
> 121 |   logout() {
      |   ^
  122 |     this.RESET_TOKENS();
  123 |     this.SET_EMAIL("");
  124 |     this.SET_CAMPUSES([]);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:132:3:
  130 |   }
  131 | 
> 132 |   get email() {
      |   ^
  133 |     if (!this._userInfoLoaded && this.accessToken) {
  134 |       UserModule.getUser();
  135 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:140:3:
  138 |   }
  139 | 
> 140 |   get campuses() {
      |   ^
  141 |     if (!this._userInfoLoaded && this.accessToken) {
  142 |       UserModule.getUser();
  143 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:148:3:
  146 |   }
  147 | 
> 148 |   get permissions() {
      |   ^
  149 |     if (!this._userInfoLoaded) {
  150 |       UserModule.getUser();
  151 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:156:3:
  154 |   }
  155 | 
> 156 |   get isSuperuser() {
      |   ^
  157 |     if (!this._userInfoLoaded) {
  158 |       UserModule.getUser();
  159 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:164:3:
  162 |   }
  163 | 
> 164 |   get personType() {
      |   ^
  165 |     if (!this._userInfoLoaded) {
  166 |       UserModule.getUser();
  167 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:172:3:
  170 |   }
  171 | 
> 172 |   get personId() {
      |   ^
  173 |     if (!this._userInfoLoaded) {
  174 |       UserModule.getUser();
  175 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:180:3:
  178 |   }
  179 | 
> 180 |   get personMilgroups() {
      |   ^
  181 |     if (!this._userInfoLoaded) {
  182 |       UserModule.getUser();
  183 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/store/modules/user.js:188:3:
  186 |   }
  187 | 
> 188 |   get personMilfaculty() {
      |   ^
  189 |     if (!this._userInfoLoaded) {
  190 |       UserModule.getUser();
  191 |     }


warning: Unexpected any. Specify a different type (@typescript-eslint/no-explicit-any) at src/types/third-party/element-ui.d.ts:11:16:
   9 | 
  10 |     /** WrapStyle type */
> 11 |     wrapStyle: any
     |                ^
  12 | 
  13 |     /** WrapClass type */
  14 |     wrapClass: any


warning: Unexpected any. Specify a different type (@typescript-eslint/no-explicit-any) at src/types/third-party/element-ui.d.ts:14:16:
  12 | 
  13 |     /** WrapClass type */
> 14 |     wrapClass: any
     |                ^
  15 | 
  16 |     /** ViewClass type */
  17 |     viewClass: any


warning: Unexpected any. Specify a different type (@typescript-eslint/no-explicit-any) at src/types/third-party/element-ui.d.ts:17:16:
  15 | 
  16 |     /** ViewClass type */
> 17 |     viewClass: any
     |                ^
  18 | 
  19 |     /** ViewStyle type */
  20 |     viewStyle: any


warning: Unexpected any. Specify a different type (@typescript-eslint/no-explicit-any) at src/types/third-party/element-ui.d.ts:20:16:
  18 | 
  19 |     /** ViewStyle type */
> 20 |     viewStyle: any
     |                ^
  21 | 
  22 |     /** Noresize type */
  23 |     noresize: boolean


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/PaperForm.js:25:3:
  23 |   }
  24 | 
> 25 |   getContent(action) {
     |   ^
  26 |     if (action === "add" || has(this.files[0], "raw")) {
  27 |       return this.files[0].raw;
  28 |     }


warning: Argument 'action' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/PaperForm.js:25:14:
  23 |   }
  24 | 
> 25 |   getContent(action) {
     |              ^
  26 |     if (action === "add" || has(this.files[0], "raw")) {
  27 |       return this.files[0].raw;
  28 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/PaperForm.js:32:3:
  30 |   }
  31 | 
> 32 |   getData() {
     |   ^
  33 |     const data = {
  34 |       annotation: this.annotation.trim(),
  35 |       authors: this.authors,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/PaperForm.js:50:3:
  48 |   }
  49 | 
> 50 |   split(action) {
     |   ^
  51 |     if (!["add", "edit"].includes(action)) {
  52 |       throw new TypeError("PaperForm: unknown action");
  53 |     }


warning: Argument 'action' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/PaperForm.js:50:9:
  48 |   }
  49 | 
> 50 |   split(action) {
     |         ^
  51 |     if (!["add", "edit"].includes(action)) {
  52 |       throw new TypeError("PaperForm: unknown action");
  53 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/allowMobileView.js:1:16:
> 1 | export default allow => {
    |                ^
  2 |   const meta = document.querySelector("meta[name=viewport]");
  3 |   const app = document.querySelector("#app");
  4 | 


warning: Argument 'allow' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/allowMobileView.js:1:16:
> 1 | export default allow => {
    |                ^
  2 |   const meta = document.querySelector("meta[name=viewport]");
  3 |   const app = document.querySelector("#app");
  4 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/copyToClipboard.js:33:25:
  31 |  * @returns { Promise<Boolean> } прошло ли копирование успешно
  32 |  */
> 33 | const copyToClipboard = async text => {
     |                         ^
  34 |   try {
  35 |     await navigator.clipboard.writeText(text);
  36 |     return true;


warning: Argument 'text' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/copyToClipboard.js:33:31:
  31 |  * @returns { Promise<Boolean> } прошло ли копирование успешно
  32 |  */
> 33 | const copyToClipboard = async text => {
     |                               ^
  34 |   try {
  35 |     await navigator.clipboard.writeText(text);
  36 |     return true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/functions.js:3:8:
  1 | import { MessageBox } from "element-ui";
  2 | 
> 3 | export function getCoords(elem) {
    |        ^
  4 |   const box = elem.getBoundingClientRect();
  5 | 
  6 |   return {


warning: Argument 'elem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/functions.js:3:27:
  1 | import { MessageBox } from "element-ui";
  2 | 
> 3 | export function getCoords(elem) {
    |                           ^
  4 |   const box = elem.getBoundingClientRect();
  5 | 
  6 |   return {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/functions.js:12:8:
  10 | }
  11 | 
> 12 | export function handleClose(done) {
     |        ^
  13 |   MessageBox.confirm("Уверены?")
  14 |     .then(_ => {
  15 |       done();


warning: Argument 'done' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/functions.js:12:29:
  10 | }
  11 | 
> 12 | export function handleClose(done) {
     |                             ^
  13 |   MessageBox.confirm("Уверены?")
  14 |     .then(_ => {
  15 |       done();


warning: '_' is defined but never used (@typescript-eslint/no-unused-vars) at src/utils/functions.js:14:11:
  12 | export function handleClose(done) {
  13 |   MessageBox.confirm("Уверены?")
> 14 |     .then(_ => {
     |           ^
  15 |       done();
  16 |     });
  17 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/get-page-title.js:5:16:
  3 | const title = defaultSettings.title || "ВУЦ ВШЭ";
  4 | 
> 5 | export default function getPageTitle(pageTitle) {
    |                ^
  6 |   if (pageTitle) {
  7 |     return `${pageTitle} - ${title}`;
  8 |   }


warning: Argument 'pageTitle' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/get-page-title.js:5:38:
  3 | const title = defaultSettings.title || "ВУЦ ВШЭ";
  4 | 
> 5 | export default function getPageTitle(pageTitle) {
    |                                      ^
  6 |   if (pageTitle) {
  7 |     return `${pageTitle} - ${title}`;
  8 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:11:8:
   9 |  * @returns {string | null}
  10 |  */
> 11 | export function parseTime(rawTime, cFormat) {
     |        ^
  12 |   if (arguments.length === 0) {
  13 |     return null;
  14 |   }


warning: Argument 'rawTime' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:11:27:
   9 |  * @returns {string | null}
  10 |  */
> 11 | export function parseTime(rawTime, cFormat) {
     |                           ^
  12 |   if (arguments.length === 0) {
  13 |     return null;
  14 |   }


warning: Argument 'cFormat' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:11:36:
   9 |  * @returns {string | null}
  10 |  */
> 11 | export function parseTime(rawTime, cFormat) {
     |                                    ^
  12 |   if (arguments.length === 0) {
  13 |     return null;
  14 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:59:8:
  57 |  * @returns {string}
  58 |  */
> 59 | export function formatTime(rawTime, option) {
     |        ^
  60 |   let time;
  61 | 
  62 |   if ((`${rawTime}`).length === 10) {


warning: Argument 'rawTime' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:59:28:
  57 |  * @returns {string}
  58 |  */
> 59 | export function formatTime(rawTime, option) {
     |                            ^
  60 |   let time;
  61 | 
  62 |   if ((`${rawTime}`).length === 10) {


warning: Argument 'option' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:59:37:
  57 |  * @returns {string}
  58 |  */
> 59 | export function formatTime(rawTime, option) {
     |                                     ^
  60 |   let time;
  61 | 
  62 |   if ((`${rawTime}`).length === 10) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:102:8:
  100 |  * @returns {Object}
  101 |  */
> 102 | export function param2Obj(url) {
      |        ^
  103 |   const search = url.split("?")[1];
  104 |   if (!search) {
  105 |     return {};


warning: Argument 'url' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/index.js:102:27:
  100 |  * @returns {Object}
  101 |  */
> 102 | export function param2Obj(url) {
      |                           ^
  103 |   const search = url.split("?")[1];
  104 |   if (!search) {
  105 |     return {};


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:26:8:
  24 | /// ////////////////////////////////////////////////////////////////////////////
  25 | 
> 26 | export function getError(entity, status) {
     |        ^
  27 |   Message({
  28 |     message: `Ошибка при получении ${entity}. ${details(status)}`,
  29 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:26:26:
  24 | /// ////////////////////////////////////////////////////////////////////////////
  25 | 
> 26 | export function getError(entity, status) {
     |                          ^
  27 |   Message({
  28 |     message: `Ошибка при получении ${entity}. ${details(status)}`,
  29 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:26:34:
  24 | /// ////////////////////////////////////////////////////////////////////////////
  25 | 
> 26 | export function getError(entity, status) {
     |                                  ^
  27 |   Message({
  28 |     message: `Ошибка при получении ${entity}. ${details(status)}`,
  29 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:33:8:
  31 | }
  32 | 
> 33 | export function postError(entity, status) {
     |        ^
  34 |   Message({
  35 |     message: `Ошибка при создании ${entity}. ${details(status)}`,
  36 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:33:27:
  31 | }
  32 | 
> 33 | export function postError(entity, status) {
     |                           ^
  34 |   Message({
  35 |     message: `Ошибка при создании ${entity}. ${details(status)}`,
  36 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:33:35:
  31 | }
  32 | 
> 33 | export function postError(entity, status) {
     |                                   ^
  34 |   Message({
  35 |     message: `Ошибка при создании ${entity}. ${details(status)}`,
  36 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:40:8:
  38 | }
  39 | 
> 40 | export function patchError(entity, status) {
     |        ^
  41 |   Message({
  42 |     message: `Ошибка при редактировании ${entity}. ${details(status)}`,
  43 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:40:28:
  38 | }
  39 | 
> 40 | export function patchError(entity, status) {
     |                            ^
  41 |   Message({
  42 |     message: `Ошибка при редактировании ${entity}. ${details(status)}`,
  43 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:40:36:
  38 | }
  39 | 
> 40 | export function patchError(entity, status) {
     |                                    ^
  41 |   Message({
  42 |     message: `Ошибка при редактировании ${entity}. ${details(status)}`,
  43 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:47:8:
  45 | }
  46 | 
> 47 | export function deleteError(entity, status) {
     |        ^
  48 |   Message({
  49 |     message: `Ошибка при удалении ${entity}. ${details(status)}`,
  50 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:47:29:
  45 | }
  46 | 
> 47 | export function deleteError(entity, status) {
     |                             ^
  48 |   Message({
  49 |     message: `Ошибка при удалении ${entity}. ${details(status)}`,
  50 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:47:37:
  45 | }
  46 | 
> 47 | export function deleteError(entity, status) {
     |                                     ^
  48 |   Message({
  49 |     message: `Ошибка при удалении ${entity}. ${details(status)}`,
  50 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:54:8:
  52 | }
  53 | 
> 54 | export function orderError(entity, status) {
     |        ^
  55 |   Message({
  56 |     message: `Ошибка при перемещении ${entity}. ${details(status)}`,
  57 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:54:28:
  52 | }
  53 | 
> 54 | export function orderError(entity, status) {
     |                            ^
  55 |   Message({
  56 |     message: `Ошибка при перемещении ${entity}. ${details(status)}`,
  57 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:54:36:
  52 | }
  53 | 
> 54 | export function orderError(entity, status) {
     |                                    ^
  55 |   Message({
  56 |     message: `Ошибка при перемещении ${entity}. ${details(status)}`,
  57 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:61:8:
  59 | }
  60 | 
> 61 | export function downloadError(entity, status) {
     |        ^
  62 |   Message({
  63 |     message: `Ошибка при загрузке ${entity}. ${details(status)}`,
  64 |     type: "error",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:61:31:
  59 | }
  60 | 
> 61 | export function downloadError(entity, status) {
     |                               ^
  62 |   Message({
  63 |     message: `Ошибка при загрузке ${entity}. ${details(status)}`,
  64 |     type: "error",


warning: Argument 'status' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:61:39:
  59 | }
  60 | 
> 61 | export function downloadError(entity, status) {
     |                                       ^
  62 |   Message({
  63 |     message: `Ошибка при загрузке ${entity}. ${details(status)}`,
  64 |     type: "error",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:70:8:
  68 | /// ////////////////////////////////////////////////////////////////////////////
  69 | 
> 70 | export function postSuccess(entity) {
     |        ^
  71 |   Message({
  72 |     message: `Создание ${entity} прошло успешно.`,
  73 |     type: "success",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:70:29:
  68 | /// ////////////////////////////////////////////////////////////////////////////
  69 | 
> 70 | export function postSuccess(entity) {
     |                             ^
  71 |   Message({
  72 |     message: `Создание ${entity} прошло успешно.`,
  73 |     type: "success",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:77:8:
  75 | }
  76 | 
> 77 | export function patchSuccess(entity) {
     |        ^
  78 |   Message({
  79 |     message: `Редактирование ${entity} прошло успешно.`,
  80 |     type: "success",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:77:30:
  75 | }
  76 | 
> 77 | export function patchSuccess(entity) {
     |                              ^
  78 |   Message({
  79 |     message: `Редактирование ${entity} прошло успешно.`,
  80 |     type: "success",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:84:8:
  82 | }
  83 | 
> 84 | export function deleteSuccess(entity) {
     |        ^
  85 |   Message({
  86 |     message: `Удаление ${entity} прошло успешно.`,
  87 |     type: "success",


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/message.js:84:31:
  82 | }
  83 | 
> 84 | export function deleteSuccess(entity) {
     |                               ^
  85 |   Message({
  86 |     message: `Удаление ${entity} прошло успешно.`,
  87 |     type: "success",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutateData.js:9:27:
   7 |  * @param {String} errorMsg - сообщение ошибки
   8 |  */
>  9 | export const mutateData = async(requestFunc, successMsg, errorMsg) => {
     |                           ^
  10 |   if (await requestFunc()) {
  11 |     Message({
  12 |       type: "success",


warning: Argument 'requestFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutateData.js:9:33:
   7 |  * @param {String} errorMsg - сообщение ошибки
   8 |  */
>  9 | export const mutateData = async(requestFunc, successMsg, errorMsg) => {
     |                                 ^
  10 |   if (await requestFunc()) {
  11 |     Message({
  12 |       type: "success",


warning: Argument 'successMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutateData.js:9:46:
   7 |  * @param {String} errorMsg - сообщение ошибки
   8 |  */
>  9 | export const mutateData = async(requestFunc, successMsg, errorMsg) => {
     |                                              ^
  10 |   if (await requestFunc()) {
  11 |     Message({
  12 |       type: "success",


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutateData.js:9:58:
   7 |  * @param {String} errorMsg - сообщение ошибки
   8 |  */
>  9 | export const mutateData = async(requestFunc, successMsg, errorMsg) => {
     |                                                          ^
  10 |   if (await requestFunc()) {
  11 |     Message({
  12 |       type: "success",


warning: Argument 'fetchFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:17:3:
  15 |  */
  16 | export const getFetchRequest = (
> 17 |   fetchFunc,
     |   ^
  18 |   mutation,
  19 |   errorMsg,
  20 | ) => async function fetchRequest() {


warning: Argument 'mutation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:18:3:
  16 | export const getFetchRequest = (
  17 |   fetchFunc,
> 18 |   mutation,
     |   ^
  19 |   errorMsg,
  20 | ) => async function fetchRequest() {
  21 |   try {


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:19:3:
  17 |   fetchFunc,
  18 |   mutation,
> 19 |   errorMsg,
     |   ^
  20 | ) => async function fetchRequest() {
  21 |   try {
  22 |     const { data } = await fetchFunc();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:20:6:
  18 |   mutation,
  19 |   errorMsg,
> 20 | ) => async function fetchRequest() {
     |      ^
  21 |   try {
  22 |     const { data } = await fetchFunc();
  23 | 


warning: Argument 'addFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:43:3:
  41 |  */
  42 | export const getAddRequest = (
> 43 |   addFunc,
     |   ^
  44 |   mutation,
  45 |   mutationFiled,
  46 |   errorMsg,


warning: Argument 'mutation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:44:3:
  42 | export const getAddRequest = (
  43 |   addFunc,
> 44 |   mutation,
     |   ^
  45 |   mutationFiled,
  46 |   errorMsg,
  47 | ) => async function addRequest(newItem) {


warning: Argument 'mutationFiled' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:45:3:
  43 |   addFunc,
  44 |   mutation,
> 45 |   mutationFiled,
     |   ^
  46 |   errorMsg,
  47 | ) => async function addRequest(newItem) {
  48 |   try {


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:46:3:
  44 |   mutation,
  45 |   mutationFiled,
> 46 |   errorMsg,
     |   ^
  47 | ) => async function addRequest(newItem) {
  48 |   try {
  49 |     const { data } = await addFunc(newItem);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:47:6:
  45 |   mutationFiled,
  46 |   errorMsg,
> 47 | ) => async function addRequest(newItem) {
     |      ^
  48 |   try {
  49 |     const { data } = await addFunc(newItem);
  50 | 


warning: Argument 'newItem' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:47:32:
  45 |   mutationFiled,
  46 |   errorMsg,
> 47 | ) => async function addRequest(newItem) {
     |                                ^
  48 |   try {
  49 |     const { data } = await addFunc(newItem);
  50 | 


warning: Argument 'deleteFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:70:3:
  68 |  */
  69 | export const getDeleteRequest = (
> 70 |   deleteFunc,
     |   ^
  71 |   mutation,
  72 |   mutationFiled,
  73 |   errorMsg,


warning: Argument 'mutation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:71:3:
  69 | export const getDeleteRequest = (
  70 |   deleteFunc,
> 71 |   mutation,
     |   ^
  72 |   mutationFiled,
  73 |   errorMsg,
  74 | ) => async function deleteRequest(id) {


warning: Argument 'mutationFiled' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:72:3:
  70 |   deleteFunc,
  71 |   mutation,
> 72 |   mutationFiled,
     |   ^
  73 |   errorMsg,
  74 | ) => async function deleteRequest(id) {
  75 |   try {


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:73:3:
  71 |   mutation,
  72 |   mutationFiled,
> 73 |   errorMsg,
     |   ^
  74 | ) => async function deleteRequest(id) {
  75 |   try {
  76 |     await deleteFunc(id);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:74:6:
  72 |   mutationFiled,
  73 |   errorMsg,
> 74 | ) => async function deleteRequest(id) {
     |      ^
  75 |   try {
  76 |     await deleteFunc(id);
  77 | 


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:74:35:
  72 |   mutationFiled,
  73 |   errorMsg,
> 74 | ) => async function deleteRequest(id) {
     |                                   ^
  75 |   try {
  76 |     await deleteFunc(id);
  77 | 


warning: Argument 'editFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:96:3:
  94 |  */
  95 | export const getEditRequest = (
> 96 |   editFunc,
     |   ^
  97 |   mutation,
  98 |   mutationFiled,
  99 |   errorMsg,


warning: Argument 'mutation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:97:3:
   95 | export const getEditRequest = (
   96 |   editFunc,
>  97 |   mutation,
      |   ^
   98 |   mutationFiled,
   99 |   errorMsg,
  100 | ) => async function editRequest({ id, ...newData }) {


warning: Argument 'mutationFiled' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:98:3:
   96 |   editFunc,
   97 |   mutation,
>  98 |   mutationFiled,
      |   ^
   99 |   errorMsg,
  100 | ) => async function editRequest({ id, ...newData }) {
  101 |   try {


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:99:3:
   97 |   mutation,
   98 |   mutationFiled,
>  99 |   errorMsg,
      |   ^
  100 | ) => async function editRequest({ id, ...newData }) {
  101 |   try {
  102 |     const { data } = await editFunc(id, newData);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:100:6:
   98 |   mutationFiled,
   99 |   errorMsg,
> 100 | ) => async function editRequest({ id, ...newData }) {
      |      ^
  101 |   try {
  102 |     const { data } = await editFunc(id, newData);
  103 | 


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:100:33:
   98 |   mutationFiled,
   99 |   errorMsg,
> 100 | ) => async function editRequest({ id, ...newData }) {
      |                                 ^
  101 |   try {
  102 |     const { data } = await editFunc(id, newData);
  103 | 


warning: Argument 'orderFunc' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:127:3:
  125 |  */
  126 | export const getOrderChangeRequest = (
> 127 |   orderFunc,
      |   ^
  128 |   mutation,
  129 |   mutationFiled,
  130 |   errorMsg,


warning: Argument 'mutation' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:128:3:
  126 | export const getOrderChangeRequest = (
  127 |   orderFunc,
> 128 |   mutation,
      |   ^
  129 |   mutationFiled,
  130 |   errorMsg,
  131 | ) => async function orderRequest(id, order) {


warning: Argument 'mutationFiled' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:129:3:
  127 |   orderFunc,
  128 |   mutation,
> 129 |   mutationFiled,
      |   ^
  130 |   errorMsg,
  131 | ) => async function orderRequest(id, order) {
  132 |   try {


warning: Argument 'errorMsg' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:130:3:
  128 |   mutation,
  129 |   mutationFiled,
> 130 |   errorMsg,
      |   ^
  131 | ) => async function orderRequest(id, order) {
  132 |   try {
  133 |     await orderFunc(id, order);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:131:6:
  129 |   mutationFiled,
  130 |   errorMsg,
> 131 | ) => async function orderRequest(id, order) {
      |      ^
  132 |   try {
  133 |     await orderFunc(id, order);
  134 | 


warning: Argument 'id' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:131:34:
  129 |   mutationFiled,
  130 |   errorMsg,
> 131 | ) => async function orderRequest(id, order) {
      |                                  ^
  132 |   try {
  133 |     await orderFunc(id, order);
  134 | 


warning: Argument 'order' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/mutators.js:131:38:
  129 |   mutationFiled,
  130 |   errorMsg,
> 131 | ) => async function orderRequest(id, order) {
      |                                      ^
  132 |   try {
  133 |     await orderFunc(id, order);
  134 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/permissions.js:25:8:
  23 | }
  24 | 
> 25 | export function hasPermission(permissions) {
     |        ^
  26 |   const { permissions: userPermissions, isSuperuser } = UserModule;
  27 |   if (!isSuperuser && permissions?.length) {
  28 |     return permissions.some(permission => {


warning: Argument 'permissions' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/permissions.js:25:31:
  23 | }
  24 | 
> 25 | export function hasPermission(permissions) {
     |                               ^
  26 |   const { permissions: userPermissions, isSuperuser } = UserModule;
  27 |   if (!isSuperuser && permissions?.length) {
  28 |     return permissions.some(permission => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/permissions.js:46:8:
  44 | }
  45 | 
> 46 | export function getDisciplinePersonsFilters(entity, method) {
     |        ^
  47 |   const {
  48 |     personMilfaculty, personMilgroup, personType, personId,
  49 |   } = UserModule;


warning: Argument 'entity' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/permissions.js:46:45:
  44 | }
  45 | 
> 46 | export function getDisciplinePersonsFilters(entity, method) {
     |                                             ^
  47 |   const {
  48 |     personMilfaculty, personMilgroup, personType, personId,
  49 |   } = UserModule;


warning: Argument 'method' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/permissions.js:46:53:
  44 | }
  45 | 
> 46 | export function getDisciplinePersonsFilters(entity, method) {
     |                                                     ^
  47 |   const {
  48 |     personMilfaculty, personMilgroup, personType, personId,
  49 |   } = UserModule;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/person.js:1:8:
> 1 | export function surnameWithInitials({ surname, name, patronymic }) {
    |        ^
  2 |   const nonEmptyWords = [surname, name, patronymic].filter(Boolean);
  3 |   const abbreviated = nonEmptyWords.map((word, index) => (index === 0 ? word : `${word[0]}.`));
  4 |   return abbreviated.join(" ");


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/person.js:1:37:
> 1 | export function surnameWithInitials({ surname, name, patronymic }) {
    |                                     ^
  2 |   const nonEmptyWords = [surname, name, patronymic].filter(Boolean);
  3 |   const abbreviated = nonEmptyWords.map((word, index) => (index === 0 ? word : `${word[0]}.`));
  4 |   return abbreviated.join(" ");


warning: '_debounce' is defined but never used (@typescript-eslint/no-unused-vars) at src/utils/request.js:2:8:
  1 | import axios from "axios";
> 2 | import _debounce from "lodash/debounce";
    |        ^
  3 | import { Message } from "element-ui";
  4 | import { updateAccess } from "@/api/tokens";
  5 | import { AUTH_URLS } from "@/constants/api";


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/teachers.js:1:8:
> 1 | export function displayTeacherMilgroups(milgroups) {
    |        ^
  2 |   return milgroups.map(m => m.title).join(", ");
  3 | }
  4 | 


warning: Argument 'milgroups' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/teachers.js:1:41:
> 1 | export function displayTeacherMilgroups(milgroups) {
    |                                         ^
  2 |   return milgroups.map(m => m.title).join(", ");
  3 | }
  4 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:5:8:
  3 |  * @returns {Boolean}
  4 |  */
> 5 | export function isExternal(path) {
    |        ^
  6 |   return /^(https?:|mailto:|tel:)/.test(path);
  7 | }
  8 | 


warning: Argument 'path' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:5:28:
  3 |  * @returns {Boolean}
  4 |  */
> 5 | export function isExternal(path) {
    |                            ^
  6 |   return /^(https?:|mailto:|tel:)/.test(path);
  7 | }
  8 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:13:8:
  11 |  * @returns {Boolean}
  12 |  */
> 13 | export function validUsername(str) {
     |        ^
  14 |   const usernameRegex = /^[a-zA-Z0-9]+$/;
  15 |   return str.trim().match(usernameRegex) != null;
  16 | }


warning: Argument 'str' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:13:31:
  11 |  * @returns {Boolean}
  12 |  */
> 13 | export function validUsername(str) {
     |                               ^
  14 |   const usernameRegex = /^[a-zA-Z0-9]+$/;
  15 |   return str.trim().match(usernameRegex) != null;
  16 | }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:22:8:
  20 |  * @returns {Boolean}
  21 |  */
> 22 | export function validEmail(str) {
     |        ^
  23 |   // eslint-disable-next-line no-control-regex
  24 |   return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(
  25 |     str,


warning: Argument 'str' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:22:28:
  20 |  * @returns {Boolean}
  21 |  */
> 22 | export function validEmail(str) {
     |                            ^
  23 |   // eslint-disable-next-line no-control-regex
  24 |   return /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(
  25 |     str,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:33:8:
  31 |  * @returns {Boolean}
  32 |  */
> 33 | export function validCorEmail(str) {
     |        ^
  34 |   return /^[A-Za-z0-9._%+-]+@(edu\.)?hse\.ru$/.test(str);
  35 | }
  36 | 


warning: Argument 'str' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/utils/validate.js:33:31:
  31 |  * @returns {Boolean}
  32 |  */
> 33 | export function validCorEmail(str) {
     |                               ^
  34 |   return /^[A-Za-z0-9._%+-]+@(edu\.)?hse\.ru$/.test(str);
  35 | }
  36 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/404.vue:55:5:
  53 |   name: "Page404",
  54 |   computed: {
> 55 |     message() {
     |     ^
  56 |       return "The webmaster said that you can not enter this page...";
  57 |     },
  58 |   },


error: Unexpected trailing comma (comma-dangle) at src/views/AdminPanel/index.vue:23:174:
  21 |     { label: "Управление пользователями", to: "/apanel/userManagement/", permissions: ["permissions.get.all", "permissions.patch.all", "permissions.post.all", "permissions.delete.all"] },
  22 |     { label: "Управление ролями", to: "/apanel/roleManagement/", permissions: ["permissions.get.all", "permissions.patch.all", "permissions.post.all", "permissions.delete.all"] },
> 23 |     { label: "Справочники", to: "/apanel/dictionaries/", permissions: ["publishers.post.all", "authors.post.all", "milgroups.post.milfaculty", "achievements.post.milfaculty", ] },
     |                                                                                                                                                                              ^
  24 |     { label: "Учебные дисциплины", to: "/apanel/subjects/", permissions: ["subjects.post.all", "subjects.patch.all", "subjects.delete.all"] },
  25 |   ]
  26 | 


error: There should be no space before ']' (array-bracket-spacing) at src/views/AdminPanel/index.vue:23:175:
  21 |     { label: "Управление пользователями", to: "/apanel/userManagement/", permissions: ["permissions.get.all", "permissions.patch.all", "permissions.post.all", "permissions.delete.all"] },
  22 |     { label: "Управление ролями", to: "/apanel/roleManagement/", permissions: ["permissions.get.all", "permissions.patch.all", "permissions.post.all", "permissions.delete.all"] },
> 23 |     { label: "Справочники", to: "/apanel/dictionaries/", permissions: ["publishers.post.all", "authors.post.all", "milgroups.post.milfaculty", "achievements.post.milfaculty", ] },
     |                                                                                                                                                                               ^
  24 |     { label: "Учебные дисциплины", to: "/apanel/subjects/", permissions: ["subjects.post.all", "subjects.patch.all", "subjects.delete.all"] },
  25 |   ]
  26 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/AdminPanel/index.vue:29:3:
  27 |   tabs = []
  28 | 
> 29 |   get permissions() { return UserModule.permissions; }
     |   ^
  30 | 
  31 |   mounted() {
  32 |     this.getTabs();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/AdminPanel/index.vue:31:3:
  29 |   get permissions() { return UserModule.permissions; }
  30 | 
> 31 |   mounted() {
     |   ^
  32 |     this.getTabs();
  33 |   }
  34 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/AdminPanel/index.vue:35:3:
  33 |   }
  34 | 
> 35 |   getTabs() {
     |   ^
  36 |     console.count();
  37 |     const tabs = this.defaultTabs.filter(item => hasPermission(item.permissions));
  38 |     this.tabs = tabs;


warning: 'hasPermission' is defined but never used (@typescript-eslint/no-unused-vars) at src/views/ApplicantForm/index.vue:178:10:
  176 | import copyToClipboard from "@/utils/copyToClipboard";
  177 | import { UserModule } from "@/store";
> 178 | import { hasPermission } from "@/utils/permissions";
      |          ^
  179 | 
  180 | const createData = fields => Object.keys(fields).reduce(
  181 |   (memo, item) => ({


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:203:3:
  201 |   @Ref() form
  202 | 
> 203 |   data() {
      |   ^
  204 |     return {
  205 |       applicantData: __DEV__ && ("fill" in this.$route.query)
  206 |         // eslint-disable-next-line global-require, @typescript-eslint/no-var-requires


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:226:3:
  224 |   }
  225 | 
> 226 |   mounted() {
      |   ^
  227 |     const id = this.userId;
  228 |     findApplicant(this.personId).then(request => {
  229 |       // eslint-disable-next-line camelcase


warning: 'id' is assigned a value but never used (@typescript-eslint/no-unused-vars) at src/views/ApplicantForm/index.vue:227:11:
  225 | 
  226 |   mounted() {
> 227 |     const id = this.userId;
      |           ^
  228 |     findApplicant(this.personId).then(request => {
  229 |       // eslint-disable-next-line camelcase
  230 |       const ap_data = request.data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:308:3:
  306 |   relationsLabel = { brothers: "брата", sisters: "сёстры" }
  307 | 
> 308 |   get firstStep() { return Object.keys(STEPS)[0]; }
      |   ^
  309 | 
  310 |   get lastStep() {
  311 |     const stepsNames = Object.keys(STEPS);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:310:3:
  308 |   get firstStep() { return Object.keys(STEPS)[0]; }
  309 | 
> 310 |   get lastStep() {
      |   ^
  311 |     const stepsNames = Object.keys(STEPS);
  312 |     return stepsNames[stepsNames.length - 1];
  313 |   }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:315:3:
  313 |   }
  314 | 
> 315 |   get stepIndex() { return Object.keys(STEPS).indexOf(this.step); }
      |   ^
  316 |   get campus() { return this.applicantData.universityInfo.campus; }
  317 | 
  318 |   get rules() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:316:3:
  314 | 
  315 |   get stepIndex() { return Object.keys(STEPS).indexOf(this.step); }
> 316 |   get campus() { return this.applicantData.universityInfo.campus; }
      |   ^
  317 | 
  318 |   get rules() {
  319 |     const required = { required: true, message: "Обязательное поле" };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:318:3:
  316 |   get campus() { return this.applicantData.universityInfo.campus; }
  317 | 
> 318 |   get rules() {
      |   ^
  319 |     const required = { required: true, message: "Обязательное поле" };
  320 |     const requiredBool = {
  321 |       required: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:468:3:
  466 |   }
  467 | 
> 468 |   created() { allowMobileView(true); }
      |   ^
  469 | 
  470 |   destroyed() { allowMobileView(false); }
  471 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:470:3:
  468 |   created() { allowMobileView(true); }
  469 | 
> 470 |   destroyed() { allowMobileView(false); }
      |   ^
  471 | 
  472 |   goToStep(key) {
  473 |     if (this.$route.hash === "#activate-god-mode") {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:472:3:
  470 |   destroyed() { allowMobileView(false); }
  471 | 
> 472 |   goToStep(key) {
      |   ^
  473 |     if (this.$route.hash === "#activate-god-mode") {
  474 |       this.step = key;
  475 |     }


warning: Argument 'key' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:472:12:
  470 |   destroyed() { allowMobileView(false); }
  471 | 
> 472 |   goToStep(key) {
      |            ^
  473 |     if (this.$route.hash === "#activate-god-mode") {
  474 |       this.step = key;
  475 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:478:3:
  476 |   }
  477 | 
> 478 |   parseFamilyMembers(members) {
      |   ^
  479 |     return members.map(member => ({
  480 |       citizenship: member.citizenship,
  481 |       name: member.name,


warning: Argument 'members' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:478:22:
  476 |   }
  477 | 
> 478 |   parseFamilyMembers(members) {
      |                      ^
  479 |     return members.map(member => ({
  480 |       citizenship: member.citizenship,
  481 |       name: member.name,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:490:3:
  488 |   }
  489 | 
> 490 |   fillMilspecialtyOptions(data) {
      |   ^
  491 |     this.fields.milspecialty.milspecialty.props.options = data.map(
  492 |       item => ({
  493 |         label: item.title


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:490:27:
  488 |   }
  489 | 
> 490 |   fillMilspecialtyOptions(data) {
      |                           ^
  491 |     this.fields.milspecialty.milspecialty.props.options = data.map(
  492 |       item => ({
  493 |         label: item.title


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:501:3:
  499 |   }
  500 | 
> 501 |   fillProgramOptions(data) {
      |   ^
  502 |     this.fields.universityInfo.program.props.options = data.map(
  503 |       item => ({
  504 |         label: item.title,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:501:22:
  499 |   }
  500 | 
> 501 |   fillProgramOptions(data) {
      |                      ^
  502 |     this.fields.universityInfo.program.props.options = data.map(
  503 |       item => ({
  504 |         label: item.title,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:510:3:
  508 |   }
  509 | 
> 510 |   convertFamily(data) {
      |   ^
  511 |     return {
  512 |       surname: data.surname,
  513 |       name: data.name,


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:510:17:
  508 |   }
  509 | 
> 510 |   convertFamily(data) {
      |                 ^
  511 |     return {
  512 |       surname: data.surname,
  513 |       name: data.name,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:529:3:
  527 |   }
  528 | 
> 529 |   validate() {
      |   ^
  530 |     let isValid = true;
  531 | 
  532 |     const formValidate = valid => {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:555:3:
  553 |   }
  554 | 
> 555 |   next() {
      |   ^
  556 |     const { applicantData, step } = this;
  557 |     const data = applicantData[step];
  558 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:572:3:
  570 |   }
  571 | 
> 572 |   prev() {
      |   ^
  573 |     const stepsKeys = Object.keys(STEPS);
  574 |     const stepIndex = stepsKeys.indexOf(this.step);
  575 |     const newIndex = stepIndex >= 1 ? stepIndex - 1 : 0;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:579:3:
  577 |   }
  578 | 
> 579 |   addTab() {
      |   ^
  580 |     const { step } = this;
  581 | 
  582 |     if (this.validate()) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:594:3:
  592 |   }
  593 | 
> 594 |   removeTab(index) {
      |   ^
  595 |     const { step } = this;
  596 | 
  597 |     const newArr = [...this.applicantData[step]];


warning: Argument 'index' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:594:13:
  592 |   }
  593 | 
> 594 |   removeTab(index) {
      |             ^
  595 |     const { step } = this;
  596 | 
  597 |     const newArr = [...this.applicantData[step]];


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:606:3:
  604 |   }
  605 | 
> 606 |   getObjUrl(file) {
      |   ^
  607 |     return URL.createObjectURL(file);
  608 |   }
  609 | 


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:606:13:
  604 |   }
  605 | 
> 606 |   getObjUrl(file) {
      |             ^
  607 |     return URL.createObjectURL(file);
  608 |   }
  609 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:610:3:
  608 |   }
  609 | 
> 610 |   submit() {
      |   ^
  611 |     if (this.validate()) {
  612 |       const family = [];
  613 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:729:3:
  727 | 
  728 |   @Watch("applicantData.universityInfo.campus")
> 729 |   async onCampusChange() {
      |   ^
  730 |     try {
  731 |       const { data } = await getProgramsByCampus(
  732 |         this.applicantData.universityInfo.campus,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:746:3:
  744 | 
  745 |   @Watch("step")
> 746 |   async onStepChange(nextValue) {
      |   ^
  747 |     window.scrollTo({
  748 |       left: 0,
  749 |       top: 0,


warning: Argument 'nextValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantForm/index.vue:746:22:
  744 | 
  745 |   @Watch("step")
> 746 |   async onStepChange(nextValue) {
      |                      ^
  747 |     window.scrollTo({
  748 |       left: 0,
  749 |       top: 0,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:86:3:
  84 |     PageHeader,
  85 |   },
> 86 |   data() {
     |   ^
  87 |     return {
  88 |       stages: [],
  89 |     };


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:92:5:
  90 |   },
  91 |   computed: {
> 92 |     personId() { return UserModule.personId; },
     |     ^
  93 |     personType() { return UserModule.personType; },
  94 |   },
  95 |   mounted() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:93:5:
  91 |   computed: {
  92 |     personId() { return UserModule.personId; },
> 93 |     personType() { return UserModule.personType; },
     |     ^
  94 |   },
  95 |   mounted() {
  96 |     if (this.personType === "applicant") {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:95:3:
  93 |     personType() { return UserModule.personType; },
  94 |   },
> 95 |   mounted() {
     |   ^
  96 |     if (this.personType === "applicant") {
  97 |       this.fetchDocs();
  98 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:101:5:
   99 |   },
  100 |   methods: {
> 101 |     getObjUrl(file) {
      |     ^
  102 |       return URL.createObjectURL(file);
  103 |     },
  104 |     async fetchDocs() {


warning: Argument 'file' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:101:15:
   99 |   },
  100 |   methods: {
> 101 |     getObjUrl(file) {
      |               ^
  102 |       return URL.createObjectURL(file);
  103 |     },
  104 |     async fetchDocs() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantHomePage/index.vue:104:5:
  102 |       return URL.createObjectURL(file);
  103 |     },
> 104 |     async fetchDocs() {
      |     ^
  105 |       const dataRequest = await findApplicant(this.personId);
  106 |       const { data } = dataRequest;
  107 |       this.stages = [


warning: 'UserModule' is defined but never used (@typescript-eslint/no-unused-vars) at src/views/ApplicantRegistration/index.vue:47:10:
  45 | <script>
  46 | import { validEmail } from "@/utils/validate";
> 47 | import { UserModule } from "@/store";
     |          ^
  48 | import { postEmail } from "@/api/applicants";
  49 | 
  50 | export default {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantRegistration/index.vue:52:3:
  50 | export default {
  51 |   name: "Login",
> 52 |   data() {
     |   ^
  53 |     const validateEmail = (rule, value, callback) => {
  54 |       if (!validEmail(value)) {
  55 |         callback(new Error("Пожалуйста, введите корректную почту"));


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantRegistration/index.vue:75:7:
  73 |   watch: {
  74 |     $route: {
> 75 |       handler(route) {
     |       ^
  76 |         this.redirect = route.query && route.query.redirect;
  77 |       },
  78 |       immediate: true,


warning: Argument 'route' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantRegistration/index.vue:75:15:
  73 |   watch: {
  74 |     $route: {
> 75 |       handler(route) {
     |               ^
  76 |         this.redirect = route.query && route.query.redirect;
  77 |       },
  78 |       immediate: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantRegistration/index.vue:82:5:
  80 |   },
  81 |   methods: {
> 82 |     handleLogin() {
     |     ^
  83 |       this.$refs.loginForm.validate(async valid => {
  84 |         if (valid) {
  85 |           this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:141:5:
  139 |   },
  140 |   filters: {
> 141 |     campusFilter(campus) {
      |     ^
  142 |       console.log("Campus = ", campus);
  143 |       return CAMPUSES[campus] || "Ошибка";
  144 |     },


warning: Argument 'campus' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:141:18:
  139 |   },
  140 |   filters: {
> 141 |     campusFilter(campus) {
      |                  ^
  142 |       console.log("Campus = ", campus);
  143 |       return CAMPUSES[campus] || "Ошибка";
  144 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:146:3:
  144 |     },
  145 |   },
> 146 |   data() {
      |   ^
  147 |     // FIXME(TmLev, i-oktav-i): `UserModule.campuses` is getter with async call.
  148 |     // Campuses are not being fetched on time, so `UserModule.campuses`
  149 |     // returns empty array, which always leads to default value being selected.


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:166:5:
  164 |   },
  165 |   computed: {
> 166 |     isStudyOffice() {
      |     ^
  167 |       // TODO(gakhromov): remove this check when permissions are done
  168 |       return UserModule.email.includes("study.office");
  169 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:170:5:
  168 |       return UserModule.email.includes("study.office");
  169 |     },
> 170 |     campuses() {
      |     ^
  171 |       return UserModule.campuses;
  172 |     },
  173 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:174:3:
  172 |     },
  173 |   },
> 174 |   async beforeCreate() {
      |   ^
  175 |     // Try to fetch user campuses.
  176 |     const { campuses } = UserModule;
  177 |   },


warning: 'campuses' is assigned a value but never used (@typescript-eslint/no-unused-vars) at src/views/ApplicantsDocuments/index.vue:176:13:
  174 |   async beforeCreate() {
  175 |     // Try to fetch user campuses.
> 176 |     const { campuses } = UserModule;
      |             ^
  177 |   },
  178 |   async created() {
  179 |     this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:178:3:
  176 |     const { campuses } = UserModule;
  177 |   },
> 178 |   async created() {
      |   ^
  179 |     this.loading = true;
  180 | 
  181 |     const { campuses } = UserModule;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:188:5:
  186 |   },
  187 |   methods: {
> 188 |     async fetchPrograms() {
      |     ^
  189 |       try {
  190 |         this.programs = (await getPrograms()).data;
  191 |       } catch (e) {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:196:5:
  194 |     },
  195 | 
> 196 |     async changeProgram(program) {
      |     ^
  197 |       this.selectedProgram = program;
  198 |       this.$router.push({ query: { program_code: program } });
  199 |       await this.fetchData();


warning: Argument 'program' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:196:25:
  194 |     },
  195 | 
> 196 |     async changeProgram(program) {
      |                         ^
  197 |       this.selectedProgram = program;
  198 |       this.$router.push({ query: { program_code: program } });
  199 |       await this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:201:5:
  199 |       await this.fetchData();
  200 |     },
> 201 |     async changeCampus(campus) {
      |     ^
  202 |       this.selectedCampus = campus;
  203 |       await this.fetchData();
  204 |     },


warning: Argument 'campus' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:201:24:
  199 |       await this.fetchData();
  200 |     },
> 201 |     async changeCampus(campus) {
      |                        ^
  202 |       this.selectedCampus = campus;
  203 |       await this.fetchData();
  204 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:205:5:
  203 |       await this.fetchData();
  204 |     },
> 205 |     async fetchData(page = 1) {
      |     ^
  206 |       this.currentPage = page || 1;
  207 |       this.loading = true;
  208 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:240:5:
  238 |     },
  239 | 
> 240 |     async onPageSizeChange(pageSize) {
      |     ^
  241 |       this.pageSize = pageSize;
  242 |       await this.fetchData();
  243 |     },


warning: Argument 'pageSize' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:240:28:
  238 |     },
  239 | 
> 240 |     async onPageSizeChange(pageSize) {
      |                            ^
  241 |       this.pageSize = pageSize;
  242 |       await this.fetchData();
  243 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:245:5:
  243 |     },
  244 | 
> 245 |     async onUpdate({ id, key, value }) {
      |     ^
  246 |       try {
  247 |         await updateStudentApplicationInfo(id, { [key]: value });
  248 |         return true;


warning: Object pattern argument should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:245:20:
  243 |     },
  244 | 
> 245 |     async onUpdate({ id, key, value }) {
      |                    ^
  246 |       try {
  247 |         await updateStudentApplicationInfo(id, { [key]: value });
  248 |         return true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:258:5:
  256 |     },
  257 | 
> 258 |     handleExportOption(type) {
      |     ^
  259 |       this.selectedExportOption = APPLICATIONS_EXPORT_OPTIONS[type];
  260 |     },
  261 | 


warning: Argument 'type' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:258:24:
  256 |     },
  257 | 
> 258 |     handleExportOption(type) {
      |                        ^
  259 |       this.selectedExportOption = APPLICATIONS_EXPORT_OPTIONS[type];
  260 |     },
  261 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:262:5:
  260 |     },
  261 | 
> 262 |     makeExportLink() {
      |     ^
  263 |       switch (this.selectedExportOption) {
  264 |         case APPLICATIONS_EXPORT_OPTIONS.CSP:
  265 |           return `${APPLICATIONS_CSP_EXPORT_LINK}?campus=${this.selectedCampus}`;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ApplicantsDocuments/index.vue:270:5:
  268 |       }
  269 |     },
> 270 |     makeExportFilename() {
      |     ^
  271 |       return `${CAMPUSES[this.selectedCampus]}.xlsx`;
  272 |     },
  273 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:155:3:
  153 |   name: "Book",
  154 |   components: { CtaButton, CustomText, DownloadFile },
> 155 |   beforeRouteEnter(to, from, next) {
      |   ^
  156 |     next(vm => {
  157 |       // eslint-disable-next-line no-param-reassign
  158 |       vm.prevRoute = from;


warning: Argument 'to' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:155:20:
  153 |   name: "Book",
  154 |   components: { CtaButton, CustomText, DownloadFile },
> 155 |   beforeRouteEnter(to, from, next) {
      |                    ^
  156 |     next(vm => {
  157 |       // eslint-disable-next-line no-param-reassign
  158 |       vm.prevRoute = from;


warning: Argument 'from' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:155:24:
  153 |   name: "Book",
  154 |   components: { CtaButton, CustomText, DownloadFile },
> 155 |   beforeRouteEnter(to, from, next) {
      |                        ^
  156 |     next(vm => {
  157 |       // eslint-disable-next-line no-param-reassign
  158 |       vm.prevRoute = from;


warning: Argument 'next' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:155:30:
  153 |   name: "Book",
  154 |   components: { CtaButton, CustomText, DownloadFile },
> 155 |   beforeRouteEnter(to, from, next) {
      |                              ^
  156 |     next(vm => {
  157 |       // eslint-disable-next-line no-param-reassign
  158 |       vm.prevRoute = from;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:161:3:
  159 |     });
  160 |   },
> 161 |   data() {
      |   ^
  162 |     return {
  163 |       SIZES,
  164 |       COLORS,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:171:5:
  169 |   },
  170 |   computed: {
> 171 |     subjects() { return SubjectsModule.subjects; },
      |     ^
  172 |     authors() { return PapersModule.authors; },
  173 |     publishers() { return PapersModule.publishers; },
  174 |     userId() { return UserModule.userId; },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:172:5:
  170 |   computed: {
  171 |     subjects() { return SubjectsModule.subjects; },
> 172 |     authors() { return PapersModule.authors; },
      |     ^
  173 |     publishers() { return PapersModule.publishers; },
  174 |     userId() { return UserModule.userId; },
  175 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:173:5:
  171 |     subjects() { return SubjectsModule.subjects; },
  172 |     authors() { return PapersModule.authors; },
> 173 |     publishers() { return PapersModule.publishers; },
      |     ^
  174 |     userId() { return UserModule.userId; },
  175 |   },
  176 |   created() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:174:5:
  172 |     authors() { return PapersModule.authors; },
  173 |     publishers() { return PapersModule.publishers; },
> 174 |     userId() { return UserModule.userId; },
      |     ^
  175 |   },
  176 |   created() {
  177 |     this.fetchData();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:176:3:
  174 |     userId() { return UserModule.userId; },
  175 |   },
> 176 |   created() {
      |   ^
  177 |     this.fetchData();
  178 |   },
  179 |   methods: {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:181:5:
  179 |   methods: {
  180 |     surnameWithInitials,
> 181 |     getSubjectTitle(subjectId) {
      |     ^
  182 |       const subject = this.subjects.find(item => item.id === subjectId);
  183 |       return subject.title;
  184 |     },


warning: Argument 'subjectId' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:181:21:
  179 |   methods: {
  180 |     surnameWithInitials,
> 181 |     getSubjectTitle(subjectId) {
      |                     ^
  182 |       const subject = this.subjects.find(item => item.id === subjectId);
  183 |       return subject.title;
  184 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:185:5:
  183 |       return subject.title;
  184 |     },
> 185 |     fetchData() {
      |     ^
  186 |       this.loading = true;
  187 |       getBook(this.$route.params.id).then(res => {
  188 |         this.book = res.data;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Book/index.vue:192:5:
  190 |       });
  191 |     },
> 192 |     handleDelete() {
      |     ^
  193 |       this.$confirm(
  194 |         "Вы уверены, что хотите удалить эту книгу?",
  195 |         "Подтверждение",


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Library/index.vue:17:3:
  15 |     LibraryComponent,
  16 |   },
> 17 |   data() {
     |   ^
  18 |     return {};
  19 |   },
  20 |   computed: {},


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:22:3:
  20 | <script>
  21 | export default {
> 22 |   data() {
     |   ^
  23 |     return {
  24 |       filterText: "",
  25 |       data2: [


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:82:5:
  80 |   },
  81 |   watch: {
> 82 |     filterText(val) {
     |     ^
  83 |       this.$refs.tree2.filter(val);
  84 |     },
  85 |   },


warning: Argument 'val' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:82:16:
  80 |   },
  81 |   watch: {
> 82 |     filterText(val) {
     |                ^
  83 |       this.$refs.tree2.filter(val);
  84 |     },
  85 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:88:5:
  86 | 
  87 |   methods: {
> 88 |     filterNode(value, data) {
     |     ^
  89 |       if (!value) { return true; }
  90 |       return data.label.indexOf(value) !== -1;
  91 |     },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:88:16:
  86 | 
  87 |   methods: {
> 88 |     filterNode(value, data) {
     |                ^
  89 |       if (!value) { return true; }
  90 |       return data.label.indexOf(value) !== -1;
  91 |     },


warning: Argument 'data' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/ResearchWork/index.vue:88:23:
  86 | 
  87 |   methods: {
> 88 |     filterNode(value, data) {
     |                       ^
  89 |       if (!value) { return true; }
  90 |       return data.label.indexOf(value) !== -1;
  91 |     },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subject/index.vue:67:3:
  65 | })
  66 | class SubjectPage extends Vue {
> 67 |   get subjectInfo() { return SubjectsModule.currentSubject; }
     |   ^
  68 |   get sections() { return SubjectsModule.currentSections; }
  69 | 
  70 |   mounted() {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subject/index.vue:68:3:
  66 | class SubjectPage extends Vue {
  67 |   get subjectInfo() { return SubjectsModule.currentSubject; }
> 68 |   get sections() { return SubjectsModule.currentSections; }
     |   ^
  69 | 
  70 |   mounted() {
  71 |     SubjectsModule.setCurrentSubjectId(this.$route.params.subjectId);


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subject/index.vue:70:3:
  68 |   get sections() { return SubjectsModule.currentSections; }
  69 | 
> 70 |   mounted() {
     |   ^
  71 |     SubjectsModule.setCurrentSubjectId(this.$route.params.subjectId);
  72 |   }
  73 | 


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subject/index.vue:74:3:
  72 |   }
  73 | 
> 74 |   async addSection() {
     |   ^
  75 |     const res = await SubjectsModule.addSection({
  76 |       title: "Новый раздел",
  77 |       subject: SubjectsModule.subjectId,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subjects/index.vue:42:3:
  40 | })
  41 | class SubjectsPage extends Vue {
> 42 |   get searchQuery() { return this.$route.query.subjectsSearch || ""; }
     |   ^
  43 |   set searchQuery(newValue) {
  44 |     this.$router.replace({
  45 |       query: {


warning: Argument 'newValue' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/Subjects/index.vue:43:19:
  41 | class SubjectsPage extends Vue {
  42 |   get searchQuery() { return this.$route.query.subjectsSearch || ""; }
> 43 |   set searchQuery(newValue) {
     |                   ^
  44 |     this.$router.replace({
  45 |       query: {
  46 |         subjectsSearch: newValue,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/Subjects/index.vue:51:3:
  49 |   }
  50 | 
> 51 |   get subjects() {
     |   ^
  52 |     if (!this.searchQuery) { return SubjectsModule.subjects; }
  53 | 
  54 |     const words = this.searchQuery.toLowerCase().split();


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/login/index.vue:72:3:
  70 | export default {
  71 |   name: "Login",
> 72 |   data() {
     |   ^
  73 |     const validateEmail = (rule, value, callback) => {
  74 |       if (!validEmail(value)) {
  75 |         callback(new Error("Пожалуйста, введите корректную почту"));


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/login/index.vue:105:7:
  103 |   watch: {
  104 |     $route: {
> 105 |       handler(route) {
      |       ^
  106 |         this.redirect = route.query && route.query.redirect;
  107 |       },
  108 |       immediate: true,


warning: Argument 'route' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/login/index.vue:105:15:
  103 |   watch: {
  104 |     $route: {
> 105 |       handler(route) {
      |               ^
  106 |         this.redirect = route.query && route.query.redirect;
  107 |       },
  108 |       immediate: true,


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/login/index.vue:112:5:
  110 |   },
  111 |   methods: {
> 112 |     showPwd() {
      |     ^
  113 |       if (this.passwordType === "password") {
  114 |         this.passwordType = "";
  115 |       } else {


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/login/index.vue:122:5:
  120 |       });
  121 |     },
> 122 |     handleLogin() {
      |     ^
  123 |       this.$refs.loginForm.validate(async valid => {
  124 |         if (valid) {
  125 |           this.loading = true;


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/myMaterials/index.vue:54:3:
  52 |     PageHeader,
  53 |   },
> 54 |   data() {
     |   ^
  55 |     return {
  56 |       activeTab: "disciplines",
  57 |       tabs: [


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/myMaterials/index.vue:66:5:
  64 |   },
  65 |   computed: {
> 66 |     personType() {
     |     ^
  67 |       return UserModule.personType;
  68 |     },
  69 |   },


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/myMaterials/index.vue:71:3:
  69 |   },
  70 | 
> 71 |   mounted() {
     |   ^
  72 |     if (this.personType === "student") {
  73 |       this.activeTab = "books";
  74 |     }


warning: Missing return type on function (@typescript-eslint/explicit-module-boundary-types) at src/views/myMaterials/index.vue:78:5:
  76 | 
  77 |   methods: {
> 78 |     changeTab(value) {
     |     ^
  79 |       this.activeTab = value;
  80 |     },
  81 |   },


warning: Argument 'value' should be typed (@typescript-eslint/explicit-module-boundary-types) at src/views/myMaterials/index.vue:78:15:
  76 | 
  77 |   methods: {
> 78 |     changeTab(value) {
     |               ^
  79 |       this.activeTab = value;
  80 |     },
  81 |   },


2 errors and 1688 warnings found.
2 errors and 10 warnings potentially fixable with the `--fix` option.
